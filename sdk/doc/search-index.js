var searchIndex = JSON.parse('{\
"abitest_common":{"doc":"","t":[3,11,11,11,11,11,11,11,12,11,11,11,11],"n":["InternalMessage","borrow","borrow_mut","deserialize","encode","fmt","from","into","msg","serialize","try_from","try_into","type_id"],"q":["abitest_common","","","","","","","","","","","",""],"d":["","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["result",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"InternalMessage"]]},\
"abitest_grpc":{"doc":"","t":[0,3,3,3,3,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,12,11,11,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","AbiTestRequest","AbiTestResponse","GrpcTestRequest","GrpcTestResponse","abi_test_response","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","exclude","fmt","fmt","fmt","fmt","from","from","from","from","grpc_test_request","include","into","into","into","into","into_request","into_request","into_request","into_request","method_result","ne","ne","ne","ne","oak_abi_test_service_client","predictable_counts","results","text","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","TestResult","borrow","borrow_mut","channel_change","clear","clone","clone_into","default","details","disabled","encoded_len","eq","fmt","from","into","into_request","name","ne","node_change","predictable_counts","success","to_owned","try_from","try_into","type_id","vzip","ErrCode","MethodResult","OkText","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","into_request","merge","ne","to_owned","try_from","try_into","type_id","vzip","0","0","OakAbiTestServiceClient","accept_gzip","bidi_streaming_method","borrow","borrow_mut","client_streaming_method","clone","clone_into","connect","fmt","from","into","into_request","new","run_tests","send_gzip","server_streaming_method","to_owned","try_from","try_into","type_id","unary_method","vzip","with_interceptor"],"q":["abitest_grpc","abitest_grpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","abitest_grpc::proto::abi_test_response","","","","","","","","","","","","","","","","","","","","","","","","","","abitest_grpc::proto::grpc_test_request","","","","","","","","","","","","","","","","","","","","","abitest_grpc::proto::grpc_test_request::MethodResult","","abitest_grpc::proto::oak_abi_test_service_client","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Nested message and enum types in <code>ABITestResponse</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If non-empty, holds a regular expression of test names to …","","","","","","","","","Nested message and enum types in <code>GrpcTestRequest</code>.","Regular expression of test names to include in the test …","","","","","","","","","","","","","","Generated client implementations.","If true, only run tests that have predictable changes to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","If true, the following two fields indicate the expected …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","","","Attempt to create a new client by connecting to a given …","","","","","","","Compress requests with <code>gzip</code>.","","","","","","The following methods allow testing of the gRPC connection …","",""],"i":[0,0,0,0,0,0,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,1,2,3,4,1,2,3,4,0,1,1,2,3,4,1,2,3,4,3,1,2,3,4,0,1,2,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["abitestrequest",3]],[[],["abitestresponse",3]],[[],["grpctestrequest",3]],[[],["grpctestresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["abitestrequest",3]],["bool",15]],[[["abitestresponse",3]],["bool",15]],[[["grpctestrequest",3]],["bool",15]],[[["grpctestresponse",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["abitestrequest",3]],["bool",15]],[[["abitestresponse",3]],["bool",15]],[[["grpctestrequest",3]],["bool",15]],[[["grpctestresponse",3]],["bool",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[],["testresult",3]],[[]],[[]],null,null,[[],["usize",15]],[[["testresult",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],null,[[["testresult",3]],["bool",15]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[],["methodresult",4]],[[]],[[]],[[],["usize",15]],[[["methodresult",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["methodresult",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["oakabitestserviceclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["oakabitestserviceclient",3,[["interceptedservice",3]]]]],"p":[[3,"AbiTestRequest"],[3,"AbiTestResponse"],[3,"GrpcTestRequest"],[3,"GrpcTestResponse"],[3,"TestResult"],[4,"MethodResult"],[13,"ErrCode"],[13,"OkText"],[3,"OakAbiTestServiceClient"]]},\
"abitest_linear_handles":{"doc":"","t":[5],"n":["linear_handles_oak_main"],"q":["abitest_linear_handles"],"d":[""],"i":[0],"f":[[[["u64",15]]]],"p":[]},\
"aggregator":{"doc":"Aggregator example for Project Oak.","t":[3,12,12,11,11,0,11,11,11,12,0,11,5,0,0,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,17,11,11,11,11,11,5,11,11,11,11,11,11,0,0,0,0,0,12,8,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,5,11,11,11],"n":["Config","aggregator_module_hash","backend_server_address","borrow","borrow_mut","data","deserialize","fmt","from","grpc_server_listen_address","handler","into","oak_main","proto","router","try_from","try_into","type_id","SparseVector","borrow","borrow_mut","clone","clone_into","combine","eq","fmt","from","identity","into","ne","new","to_owned","try_from","try_from","try_into","type_id","Handler","SAMPLE_THRESHOLD","borrow","borrow_mut","create","from","handle_command","handler","into","invoke","submit_sample","try_from","try_into","type_id","oak","examples","invocation","log","aggregator","0","Aggregator","AggregatorClient","AggregatorDispatcher","HandlerInit","RouterInit","Sample","SerializedSparseVector","aggregator_module_hash","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bucket","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data","decode","decode","decode","decode","default","default","default","default","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fold","fold","fold","fold","from","from","from","from","from","from","from","grpc_client_invocation_sender","handler_invocation_sender","indices","into","into","into","into","into","into","log_sender","log_sender","ne","ne","ne","ne","server_method","submit_sample","submit_sample","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","values","GrpcInvocation","GrpcInvocationReceiver","GrpcInvocationSender","HttpInvocation","HttpInvocationSender","HttpInvocationSource","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_channels","close_channels","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","drop","drop","encode","encode","encode","encode","encode","encode","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","into","into","into","into","into","into","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","ne","receive","receive","receiver","receiver","receiver","receiver","send","send","sender","sender","sender","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","merge_field","merge_field","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Router","borrow","borrow_mut","create","default","from","handle_command","into","router","try_from","try_into","type_id"],"q":["aggregator","","","","","","","","","","","","","","","","","","aggregator::data","","","","","","","","","","","","","","","","","","aggregator::handler","","","","","","","","","","","","","","aggregator::proto","aggregator::proto::oak","","","aggregator::proto::oak::examples","aggregator::proto::oak::examples::aggregator","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator::proto::oak::invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator::router","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Combines two Sparse Vectors by adding up values …","","","","","","","","","","","","","Oak Node that collects and aggregates data. Data is …","Currently threshold value is hardcoded.","","","","","Handle incoming gRPC events for a <code>ServerNode</code>.","","","","","","","","","","","","","","","","","Initialization message that should be sent to Handler Oak …","Initialization message that should be sent to Router Oak …","Message sent by clients.","Data provided by clients is represented by Sparse Vectors: …","SHA256 sum of the Aggregator Wasm module. TODO(#1731): …","","","","","","","","","","","","","Data with different Bucket IDs is not mixed and aggregated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Channel for sending invocations to gRPC client that is …","Channel for sending invocations to Handler Oak Node.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gRPC invocation, consisting of exactly two channels: one …","A wrapper for receiving a <code>GrpcInvocation</code> from a channel.","A wrapper for sending a <code>GrpcInvocation</code> over a channel.","An HTTP invocation, consisting of exactly two channels: …","A wrapper for sending an <code>HttpInvocation</code> over a channel.","Source of an HTTP invocation, consisting of exactly two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logging levels as defined in …","A convenience message that may be used as init message by …","This message defines the data that is passed as a log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the …","The verbosity level of the message.","The line containing the message.","","","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","","","A node that routes each incoming gRPC invocation to a …","","","","","","","","","","",""],"i":[0,1,1,1,1,0,1,1,1,1,0,1,0,0,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,3,3,3,3,3,0,3,3,3,3,3,3,0,0,0,0,0,4,0,0,0,0,0,0,0,5,6,4,7,8,5,9,6,4,7,8,5,9,8,7,8,5,9,7,8,5,9,7,8,5,9,8,7,8,5,9,7,8,5,9,7,8,5,9,7,8,5,9,7,8,5,9,7,8,5,9,7,8,5,9,6,4,7,7,8,5,9,9,5,7,6,4,7,8,5,9,5,9,7,8,5,9,6,10,4,7,8,5,9,6,4,7,8,5,9,6,4,7,8,5,9,6,4,7,8,5,9,7,0,0,0,0,0,0,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,14,15,11,12,13,14,15,16,11,12,13,14,15,16,14,15,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,14,15,11,13,14,15,14,15,11,12,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,11,12,13,14,15,16,17,17,17,0,0,0,17,17,17,18,19,17,18,19,17,18,19,18,19,17,18,19,17,17,18,19,18,19,17,18,19,18,19,18,19,18,19,17,18,18,19,17,18,19,17,18,19,17,17,17,18,19,17,17,18,18,18,19,18,19,18,18,19,17,18,18,19,17,18,19,17,18,19,17,18,19,17,0,20,20,20,20,20,20,20,0,20,20,20],"f":[null,null,null,[[]],[[]],null,[[],["result",4]],[[["formatter",3]],["result",6]],[[]],null,null,[[]],[[["u64",15]]],null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["sparsevector",3]],[[]],[[]],[[["sparsevector",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["sparsevector",3]],["bool",15]],[[["hashmap",3,[["u32",15],["f32",15]]]]],[[]],[[["serializedsparsevector",3]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[["grpcinvocation",3]],["result",4,[["error",3]]]],[[["u64",15]]],[[]],[[["str",15],["channelresponsewriter",3]]],[[["sample",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["serializedsparsevector",3]],[[],["sample",3]],[[],["routerinit",3]],[[],["handlerinit",3]],[[]],[[]],[[]],[[]],null,[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["serializedsparsevector",3]],["bool",15]],[[["sample",3]],["bool",15]],[[["routerinit",3]],["bool",15]],[[["handlerinit",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["sparsevector",3]]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["serializedsparsevector",3]],["bool",15]],[[["sample",3]],["bool",15]],[[["routerinit",3]],["bool",15]],[[["handlerinit",3]],["bool",15]],[[["str",15]],["option",4,[["invocable",8]]]],[[["sample",3]],["result",6]],[[["sample",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[],["result",4,[["request",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],[[],["result",4,[["response",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],null,null,null,null,[[["response",3]],["result",4,[["oakerror",4]]]],[[["request",3,[["vec",3,[["u8",15],["global",3]]]]]],["result",4,[["oakerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["router",3]],[[]],[[],["result",6]],[[]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Config"],[3,"SparseVector"],[3,"Handler"],[3,"AggregatorClient"],[3,"RouterInit"],[3,"AggregatorDispatcher"],[3,"SerializedSparseVector"],[3,"Sample"],[3,"HandlerInit"],[8,"Aggregator"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"],[3,"Router"]]},\
"aggregator_backend":{"doc":"Backend server for the Aggregator example.","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,3,3,0,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11],"n":["AggregatorBackend","Opt","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone_into","default","from","from","from_clap","grpc_listen_address","grpc_tls_certificate","grpc_tls_private_key","into","into","into_request","into_request","main","proto","submit_sample","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Sample","SerializedSparseVector","aggregator_server","borrow","borrow","borrow_mut","borrow_mut","bucket","clear","clear","clone","clone","clone_into","clone_into","data","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","indices","into","into","into_request","into_request","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","0","Aggregator","AggregatorServer","_Inner","accept_compression_encodings","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","inner","into","into","into_request","into_request","new","poll_ready","poll_ready","send_compression_encodings","submit_sample","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["aggregator_backend","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator_backend::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator_backend::proto::aggregator_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Message sent by clients.","Data provided by clients is represented by Sparse Vectors: …","Generated server implementations.","","","","","Data with different Bucket IDs is not mixed and aggregated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,1,1,2,1,2,1,1,1,1,1,2,1,2,0,0,2,1,1,2,1,2,1,2,1,2,0,0,0,3,4,3,4,4,3,4,3,4,3,4,4,3,4,3,4,3,4,3,4,3,4,3,3,4,3,4,3,4,3,4,3,4,3,4,3,4,3,3,4,5,0,0,0,6,5,6,5,6,6,6,5,6,5,6,5,6,5,6,6,5,6,5,6,6,6,6,6,7,5,6,5,6,5,6,5,6,5,6,6],"f":[null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[],["aggregatorbackend",3]],[[]],[[]],[[["argmatches",3]]],null,null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["result",6]],null,[[["request",3,[["sample",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["serializedsparsevector",3]],[[],["sample",3]],[[]],[[]],null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["serializedsparsevector",3]],["bool",15]],[[["sample",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["serializedsparsevector",3]],["bool",15]],[[["sample",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],null,[[["request",3,[["sample",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["interceptedservice",3]]],"p":[[3,"Opt"],[3,"AggregatorBackend"],[3,"SerializedSparseVector"],[3,"Sample"],[3,"_Inner"],[3,"AggregatorServer"],[8,"Aggregator"]]},\
"aggregator_common":{"doc":"","t":[13,4,13,13,8,3,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12],"n":["AggregatedValue","AggregatorResult","BelowThreshold","Exhausted","Monoid","ThresholdAggregator","borrow","borrow","borrow_mut","borrow_mut","combine","eq","fmt","from","from","identity","into","into","ne","new","submit","try_from","try_from","try_into","try_into","type_id","type_id","0"],"q":["aggregator_common","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator_common::AggregatorResult"],"d":["The aggregated value computed by combining the current …","","The aggregator has not reached the specified sample …","The aggregator has already output an aggregated value.","Represents a data structure with a single associative …","Generic data structure that combines data values and …","","","","","","","","","","","","","","","Combines a new sample with the current aggregated value.","","","","","","",""],"i":[1,0,1,1,0,0,2,1,2,1,3,1,1,2,1,3,2,1,1,2,2,2,1,2,1,2,1,4],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["aggregatorresult",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["aggregatorresult",4]],["bool",15]],[[["u64",15]]],[[],["aggregatorresult",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"AggregatorResult"],[3,"ThresholdAggregator"],[8,"Monoid"],[13,"AggregatedValue"]]},\
"aggregator_grpc":{"doc":"","t":[0,3,3,0,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","Sample","SerializedSparseVector","aggregator_client","borrow","borrow","borrow_mut","borrow_mut","bucket","clear","clear","clone","clone","clone_into","clone_into","data","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","indices","into","into","into_request","into_request","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","values","vzip","vzip","AggregatorClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","into","into_request","new","send_gzip","submit_sample","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["aggregator_grpc","aggregator_grpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","aggregator_grpc::proto::aggregator_client","","","","","","","","","","","","","","","","","","",""],"d":["","Message sent by clients.","Data provided by clients is represented by Sparse Vectors: …","Generated client implementations.","","","","","Data with different Bucket IDs is not mixed and aggregated …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","","","","Compress requests with <code>gzip</code>.","","","","","","",""],"i":[0,0,0,0,1,2,1,2,2,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["serializedsparsevector",3]],[[],["sample",3]],[[]],[[]],null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["serializedsparsevector",3]],["bool",15]],[[["sample",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["serializedsparsevector",3]],["bool",15]],[[["sample",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],null,[[]],[[]],[[]],[[],["aggregatorclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["aggregatorclient",3,[["interceptedservice",3]]]]],"p":[[3,"SerializedSparseVector"],[3,"Sample"],[3,"AggregatorClient"]]},\
"auth_client":{"doc":"Example client authenticating to Oak using OpenID Connect.","t":[3,12,0,11,11,12,11,11,11,11,11,5,11,11,5,12,0,11,11,11,11,11,5,5,5,0,3,3,3,12,12,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Opt","address","auth_client","borrow","borrow_mut","ca_cert","clap","clone","clone_into","from","from_clap","get_authentication_code","into","into_request","main","redirect_address","redirect_handler","to_owned","try_from","try_into","type_id","vzip","build_auth_client","get_authentication_request_url","get_identity_token","proto","AuthParameters","IdentityTokenRequest","IdentityTokenResponse","auth_code","auth_endpoint","authentication_client","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","client_id","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","ne","ne","ne","to_owned","to_owned","to_owned","token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","AuthenticationClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_auth_parameters","get_token_from_code","inner","into","into_request","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AuthError","RedirectHandler","RedirectHandlerProducer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","call","call","clone","clone_into","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","make_service","new","new","poll_ready","poll_ready","poll_ready","poll_ready","result_sender","result_sender","server_message","source","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["auth_client","","","","","","","","","","","","","","","","","","","","","","auth_client::auth_client","","","","auth_client::auth_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","auth_client::auth_client::proto::authentication_client","","","","","","","","","","","","","","","","","","","","","","auth_client::redirect_handler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","Gets the OIDC authentication code by opening the default …","","","","","","","","","","","Creates an <code>AuthenticationClient</code> that trusts certificates …","Gets the URL for authentication requests.","Exchanges the authorisation code for an identity token.","","Parameters needed by clients to initiate OpenID Connect …","Request for exchanging an authorisation code for an …","Wrapper for the exchanged identity token.","","TODO(#922): Add support for scope, state and code …","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Gets the parameters needed by a client to make an …","Exchanges an authorisation code for an identity token.","","","","","Compress requests with <code>gzip</code>.","","","","","","","Wrapper to store the server authentication error message.","Handles the redirects to extract code from the query …","Produces instances of the redirect handler service.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,0,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,0,0,0,0,0,0,0,2,3,0,3,2,4,3,2,4,3,2,4,3,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,3,2,4,4,3,2,4,3,2,4,3,2,4,3,2,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,6,7,8,6,7,8,6,6,7,8,8,8,8,6,7,8,6,7,8,6,7,8,7,7,8,6,6,7,7,6,7,8,8,8,8,6,7,8,6,7,8,6,7,8,6,7,8],"f":[null,null,null,[[]],[[]],null,[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[["str",15],["str",15]]],[[]],[[],["request",3]],[[],["result",4,[["box",3,[["error",8]]]]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["str",15],["str",15]]],[[["authenticationclient",3],["str",15]]],[[["authenticationclient",3],["str",15]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["authparameters",3]],[[],["identitytokenrequest",3]],[[],["identitytokenresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["authparameters",3]],["bool",15]],[[["identitytokenrequest",3]],["bool",15]],[[["identitytokenresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["authparameters",3]],["bool",15]],[[["identitytokenrequest",3]],["bool",15]],[[["identitytokenresponse",3]],["bool",15]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["authenticationclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[],["request",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["authenticationclient",3,[["interceptedservice",3]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3,[["body",3]]]]],[[]],[[],["autherror",3]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[]],[[["sender",3,[["result",4,[["string",3],["autherror",3]]]]]],["redirecthandlerproducer",3]],[[["str",15]],["autherror",3]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],null,null,null,[[],["option",4,[["error",8]]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[3,"Opt"],[3,"IdentityTokenRequest"],[3,"AuthParameters"],[3,"IdentityTokenResponse"],[3,"AuthenticationClient"],[3,"RedirectHandler"],[3,"RedirectHandlerProducer"],[3,"AuthError"]]},\
"benchmark":{"doc":"Oak Functions benchmark example.","t":[5,0,3,3,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12],"n":["main","proto","BenchmarkRequest","LookupTest","action","benchmark_request","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","iterations","key","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Action","Lookup","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","ne","to_owned","try_from","try_into","type_id","0"],"q":["benchmark","","benchmark::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","benchmark::proto::benchmark_request","","","","","","","","","","","","","","","","","","benchmark::proto::benchmark_request::Action"],"d":["","","A request to execute a benchmark action a specified number …","Container for the key to use when doing a benchmark lookup.","","Nested message and enum types in <code>BenchmarkRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4],"f":[[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["benchmarkrequest",3]],[[],["lookuptest",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["benchmarkrequest",3]],["bool",15]],[[["lookuptest",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[["benchmarkrequest",3]],["bool",15]],[[["lookuptest",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[],["action",4]],[[]],[[]],[[],["usize",15]],[[["action",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["action",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null],"p":[[3,"BenchmarkRequest"],[3,"LookupTest"],[4,"Action"],[13,"Lookup"]]},\
"chat":{"doc":"","t":[5,5,5],"n":["main","room","router"],"q":["chat","",""],"d":["","",""],"i":[0,0,0],"f":[[[["u64",15]]],[[["u64",15]]],[[["u64",15]]]],"p":[]},\
"chat_grpc":{"doc":"","t":[0,3,3,3,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","Message","SendMessageRequest","SubscribeRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chat_client","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","message","ne","ne","text","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_handle","vzip","vzip","vzip","ChatClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","into","into_request","new","send_gzip","send_message","subscribe","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["chat_grpc","chat_grpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","chat_grpc::proto::chat_client","","","","","","","","","","","","","","","","","","","",""],"d":["","","The chat room is identified by the Oak Label provided as …","The chat room is identified by the Oak Label provided as …","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Handle for the user; this is only used for UI purposes …","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","","","","Compress requests with <code>gzip</code>.","Send a message to a chat room.","Subscribe to a chat room, in order to receive future …","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,3,2,3,2,1,2,3,1,2,3,1,2,3,1,2,3,2,1,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["subscriberequest",3]],[[],["message",3]],[[],["sendmessagerequest",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["subscriberequest",3]],["bool",15]],[[["message",3]],["bool",15]],[[["sendmessagerequest",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["message",3]],["bool",15]],[[["sendmessagerequest",3]],["bool",15]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["chatclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["chatclient",3,[["interceptedservice",3]]]]],"p":[[3,"SubscribeRequest"],[3,"Message"],[3,"SendMessageRequest"],[3,"ChatClient"]]},\
"echo":{"doc":"Oak Functions echo example.","t":[5],"n":["main"],"q":["echo"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fuzzable":{"doc":"Oak Functions fuzzable example.","t":[5,0,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["main","proto","Instruction","Instructions","Panic","ReadRequest","ReportEvent","StorageGetItem","WriteLogMessage","WriteResponse","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","instruction","instruction_variant","instructions","into","into","into","into","into","into","into","into","key","label","message","ne","ne","ne","ne","ne","ne","response","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","InstructionVariant","Panic","ReadRequest","ReportEvent","StorageGetItem","WriteLogMessage","WriteResponse","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","0","0","0","0"],"q":["fuzzable","","fuzzable::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fuzzable::proto::instruction","","","","","","","","","","","","","","","","","","","","","","","fuzzable::proto::instruction::InstructionVariant","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>Instruction</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0,2,1,1,2,3,4,5,6,7,8,6,8,7,1,2,5,6,7,8,5,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,10,11,12,13,14,15],"f":[[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["instructions",3]],[[],["instruction",3]],[[],["panic",3]],[[],["readrequest",3]],[[],["writeresponse",3]],[[],["storagegetitem",3]],[[],["writelogmessage",3]],[[],["reportevent",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["instructions",3]],["bool",15]],[[["instruction",3]],["bool",15]],[[["panic",3]],["bool",15]],[[["readrequest",3]],["bool",15]],[[["writeresponse",3]],["bool",15]],[[["storagegetitem",3]],["bool",15]],[[["writelogmessage",3]],["bool",15]],[[["reportevent",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["instructions",3]],["bool",15]],[[["instruction",3]],["bool",15]],[[["writeresponse",3]],["bool",15]],[[["storagegetitem",3]],["bool",15]],[[["writelogmessage",3]],["bool",15]],[[["reportevent",3]],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["instructionvariant",4]],[[]],[[]],[[],["usize",15]],[[["instructionvariant",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["instructionvariant",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null],"p":[[3,"Instructions"],[3,"Instruction"],[3,"Panic"],[3,"ReadRequest"],[3,"WriteResponse"],[3,"StorageGetItem"],[3,"WriteLogMessage"],[3,"ReportEvent"],[4,"InstructionVariant"],[13,"Panic"],[13,"ReadRequest"],[13,"WriteResponse"],[13,"StorageGetItem"],[13,"WriteLogMessage"],[13,"ReportEvent"]]},\
"gcp_api_gateway_client":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,5,0,5,5,5,5,11,11,11,11,12,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Opt","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","into","into_request","main","proto","test_bidi_streaming","test_client_streaming","test_server_streaming","test_unary","to_owned","try_from","try_into","type_id","uri","vzip","HelloRequest","HelloResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeting","hello_world_client","into","into","into_request","into_request","ne","ne","reply","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HelloWorldClient","accept_gzip","bidi_hello","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","lots_of_greetings","lots_of_replies","new","say_hello","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["gcp_api_gateway_client","","","","","","","","","","","","","","","","","","","","","","gcp_api_gateway_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gcp_api_gateway_client::proto::hello_world_client","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","As seen in https://grpc.io/docs/guides/concepts/.","Enable decompressing responses with <code>gzip</code>.","","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","Compress requests with <code>gzip</code>.","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,0,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[]],[[],["request",3]],[[],["result",4,[["box",3,[["error",8]]]]]],null,[[["helloworldclient",3]]],[[["helloworldclient",3]]],[[["helloworldclient",3]]],[[["helloworldclient",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["hellorequest",3]],[[],["helloresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["helloworldclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["helloworldclient",3,[["interceptedservice",3]]]]],"p":[[3,"Opt"],[3,"HelloRequest"],[3,"HelloResponse"],[3,"HelloWorldClient"]]},\
"gcp_api_gateway_server":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,16,8,3,16,3,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,10,10,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11],"n":["HelloWorldHandler","bidi_hello","borrow","borrow_mut","default","fmt","from","into","into_request","lots_of_greetings","lots_of_replies","main","proto","say_hello","try_from","try_into","type_id","vzip","HelloRequest","HelloResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeting","hello_world_server","into","into","into_request","into_request","ne","ne","reply","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","BidiHelloStream","HelloWorld","HelloWorldServer","LotsOfRepliesStream","_Inner","accept_compression_encodings","bidi_hello","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","inner","into","into","into_request","into_request","lots_of_greetings","lots_of_replies","new","poll_ready","poll_ready","say_hello","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["gcp_api_gateway_server","","","","","","","","","","","","","","","","","","gcp_api_gateway_server::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gcp_api_gateway_server::proto::hello_world_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","Server streaming response type for the BidiHello method.","Generated trait containing gRPC methods that should be …","As seen in https://grpc.io/docs/guides/concepts/.","Server streaming response type for the LotsOfReplies …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,0,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,4,5,0,0,5,0,6,5,4,6,4,6,6,6,4,6,4,6,4,6,4,6,6,4,6,4,6,5,5,6,6,6,5,6,4,6,4,6,4,6,4,6,4,6,6],"f":[null,[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[],["helloworldhandler",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],null,[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["hellorequest",3]],[[],["helloresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["interceptedservice",3]]],"p":[[3,"HelloWorldHandler"],[3,"HelloRequest"],[3,"HelloResponse"],[3,"_Inner"],[8,"HelloWorld"],[3,"HelloWorldServer"]]},\
"grpc_attestation":{"doc":"Remote Attestation handshake protocol implemened using …","t":[0,0,0,3,11,11,11,11,11,11,11,11,11,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,3,8,11,11,11,11,11,11,10,11,11,11,11,11],"n":["client","proto","server","AttestationClient","borrow","borrow_mut","create","from","into","into_request","send","try_from","try_into","type_id","vzip","StreamingRequest","StreamingResponse","body","body","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","ne","ne","streaming_session_client","streaming_session_server","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StreamingSessionClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","into","into_request","new","send_gzip","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","StreamStream","StreamingSession","StreamingSessionServer","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","into","into_request","new","poll_ready","poll_ready","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor","AttestationServer","LogError","borrow","borrow_mut","create","from","into","into_request","log_error","stream","try_from","try_into","type_id","vzip"],"q":["grpc_attestation","","","grpc_attestation::client","","","","","","","","","","","","grpc_attestation::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","grpc_attestation::proto::streaming_session_client","","","","","","","","","","","","","","","","","","","","grpc_attestation::proto::streaming_session_server","","","","","","","","","","","","","","","","","","","","","","","grpc_attestation::server","","","","","","","","","","","","",""],"d":["","","Server-side implementation of the bidirectional streaming …","gRPC Attestation Service client implementation.","","","","","","","Sends data encrypted by the <code>Encryptor</code> to the server and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","","","","Compress requests with <code>gzip</code>.","Creates a message stream for session key negotiation and …","","","","","","","Server streaming response type for the Stream method.","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","Creates a message stream for session key negotiation and …","","","","","","","gRPC Attestation Service implementation.","Trait for logging error messages.","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,2,3,2,3,2,3,2,3,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,5,6,6,6,6,6,6,0,0,7,7,7,7,7,7,8,7,7,7,7,7],"f":[null,null,null,null,[[]],[[]],[[["str",15],["serveridentityverifier",6]]],[[]],[[]],[[],["request",3]],[[["request",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamingrequest",3]],[[],["streamingresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["streamingrequest",3]],["bool",15]],[[["streamingresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["streamingrequest",3]],["bool",15]],[[["streamingresponse",3]],["bool",15]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[],["streamingsessionclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["streamingsessionclient",3,[["interceptedservice",3]]]],null,null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],[[["request",3,[["streaming",3,[["streamingrequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["interceptedservice",3]],null,null,[[]],[[]],[[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]],["result",6]],[[]],[[]],[[],["request",3]],[[["str",15]]],[[["request",3,[["streaming",3,[["streamingrequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"AttestationClient"],[3,"StreamingRequest"],[3,"StreamingResponse"],[3,"StreamingSessionClient"],[8,"StreamingSession"],[3,"StreamingSessionServer"],[3,"AttestationServer"],[8,"LogError"]]},\
"hello_world":{"doc":"","t":[3,11,11,11,11,11,11,0,11,5,0,5,11,11,11,3,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,0,0,0,0,0,12,3,3,8,3,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,10,11,10,11,11,11,11,12,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Router","borrow","borrow_mut","create","default","from","handle_command","handler","into","oak_main","proto","router","try_from","try_into","type_id","Handler","bidi_hello","borrow","borrow_mut","create","from","handle_command","handler","into","invoke","lots_of_greetings","lots_of_replies","say_hello","try_from","try_into","type_id","oak","examples","invocation","log","hello_world","0","HelloRequest","HelloResponse","HelloWorld","HelloWorldClient","HelloWorldDispatcher","Init","bidi_hello","bidi_hello","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","default","default","default","encode","encode","encode","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","fold","fold","fold","from","from","from","from","from","greeting","into","into","into","into","into","log_sender","lots_of_greetings","lots_of_greetings","lots_of_replies","lots_of_replies","ne","ne","ne","reply","say_hello","say_hello","server_method","to_owned","to_owned","to_owned","translator_sender","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","GrpcInvocation","GrpcInvocationReceiver","GrpcInvocationSender","HttpInvocation","HttpInvocationSender","HttpInvocationSource","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_channels","close_channels","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","drop","drop","encode","encode","encode","encode","encode","encode","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","into","into","into","into","into","into","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","ne","receive","receive","receiver","receiver","receiver","receiver","send","send","sender","sender","sender","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","merge_field","merge_field","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["hello_world","","","","","","","","","","","","","","","hello_world::handler","","","","","","","","","","","","","","","","hello_world::proto","hello_world::proto::oak","","","hello_world::proto::oak::examples","hello_world::proto::oak::examples::hello_world","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hello_world::proto::oak::invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hello_world::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","Handle incoming gRPC events for a <code>ServerNode</code>.","","","","","","","","","","","","","","","","","","","","","Init message for the handler Node, used only internally.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gRPC invocation, consisting of exactly two channels: one …","A wrapper for receiving a <code>GrpcInvocation</code> from a channel.","A wrapper for sending a <code>GrpcInvocation</code> over a channel.","An HTTP invocation, consisting of exactly two channels: …","A wrapper for sending an <code>HttpInvocation</code> over a channel.","Source of an HTTP invocation, consisting of exactly two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logging levels as defined in …","A convenience message that may be used as init message by …","This message defines the data that is passed as a log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the …","The verbosity level of the message.","The line containing the message.","","","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,0,1,0,0,0,1,1,1,0,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,0,0,0,0,0,3,0,0,0,0,0,0,4,3,5,3,6,7,8,5,3,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,5,3,6,7,8,6,5,3,6,7,8,8,4,3,4,3,6,7,8,7,4,3,5,6,7,8,8,5,3,6,7,8,5,3,6,7,8,5,3,6,7,8,0,0,0,0,0,0,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,12,13,9,10,11,12,13,14,9,10,11,12,13,14,12,13,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,12,13,9,11,12,13,12,13,9,10,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,9,10,11,12,13,14,15,15,15,0,0,0,15,15,15,16,17,15,16,17,15,16,17,16,17,15,16,17,15,15,16,17,16,17,15,16,17,16,17,16,17,16,17,15,16,16,17,15,16,17,15,16,17,15,15,15,16,17,15,15,16,16,16,17,16,17,16,16,17,15,16,16,17,15,16,17,15,16,17,15,16,17,15],"f":[null,[[]],[[]],[[]],[[],["router",3]],[[]],[[],["result",6]],null,[[]],[[["u64",15]]],null,[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["vec",3,[["hellorequest",3]]],["channelresponsewriter",3]]],[[]],[[]],[[]],[[]],[[["grpcinvocation",3]],["result",4,[["error",3]]]],[[["u64",15]]],[[]],[[["str",15],["channelresponsewriter",3]]],[[["vec",3,[["hellorequest",3]]]],["result",6,[["helloresponse",3]]]],[[["hellorequest",3],["channelresponsewriter",3]]],[[["hellorequest",3]],["result",6,[["helloresponse",3]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["vec",3,[["hellorequest",3]]],["channelresponsewriter",3]]],[[["hellorequest",3]],["result",6,[["receiver",3,[["grpcresponse",3]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hellorequest",3]],[[],["helloresponse",3]],[[],["init",3]],[[]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["init",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],null,[[["vec",3,[["hellorequest",3]]]],["result",6,[["helloresponse",3]]]],[[["hellorequest",3]],["result",6,[["helloresponse",3]]]],[[["hellorequest",3],["channelresponsewriter",3]]],[[["hellorequest",3]],["result",6,[["receiver",3,[["grpcresponse",3]]]]]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["init",3]],["bool",15]],null,[[["hellorequest",3]],["result",6,[["helloresponse",3]]]],[[["hellorequest",3]],["result",6,[["helloresponse",3]]]],[[["str",15]],["option",4,[["invocable",8]]]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[],["result",4,[["request",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],[[],["result",4,[["response",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],null,null,null,null,[[["response",3]],["result",4,[["oakerror",4]]]],[[["request",3,[["vec",3,[["u8",15],["global",3]]]]]],["result",4,[["oakerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Router"],[3,"Handler"],[3,"HelloWorldClient"],[8,"HelloWorld"],[3,"HelloWorldDispatcher"],[3,"HelloRequest"],[3,"HelloResponse"],[3,"Init"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"]]},\
"hello_world_client_bin":{"doc":"Hello World client that sends simple requests to the …","t":[3,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,12,11],"n":["Opt","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","into","into_request","main","root_tls_certificate","to_owned","try_from","try_into","type_id","uri","vzip"],"q":["hello_world_client_bin","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[]],[[],["request",3]],[[],["result",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]]],"p":[[3,"Opt"]]},\
"hello_world_grpc":{"doc":"","t":[0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","HelloRequest","HelloResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeting","hello_world_client","into","into","into_request","into_request","ne","ne","reply","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HelloWorldClient","accept_gzip","bidi_hello","borrow","borrow_mut","clone","clone_into","connect","fmt","from","into","into_request","lots_of_greetings","lots_of_replies","new","say_hello","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["hello_world_grpc","hello_world_grpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hello_world_grpc::proto::hello_world_client","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","As seen in https://grpc.io/docs/guides/concepts/.","Enable decompressing responses with <code>gzip</code>.","","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","Compress requests with <code>gzip</code>.","","","","","",""],"i":[0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,0,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["hellorequest",3]],[[],["helloresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["helloworldclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["helloworldclient",3,[["interceptedservice",3]]]]],"p":[[3,"HelloRequest"],[3,"HelloResponse"],[3,"HelloWorldClient"]]},\
"http_server":{"doc":"Simple example starting an Oak Application serving a …","t":[3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,5,0,5,5,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,11,11,12,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["RedirectHandler","RedirectHelper","StaticHttpHandler","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","create","create","create","default","from","from","from","handle_command","handle_command","handle_command","http_handler","into","into","into","oak_main","proto","redirect_handler","redirect_helper","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","oak","examples","invocation","log","http_server","RedirectHandlerInit","RedirectInvocation","borrow","borrow","borrow_mut","borrow_mut","clear","clear","client_invocation_sender","clone","clone","clone_into","clone_into","decode","decode","default","default","encode","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","fold","fold","from","from","helper_invocation_sender","http_invocation_source","into","into","log_sender","ne","ne","request_receiver","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","GrpcInvocation","GrpcInvocationReceiver","GrpcInvocationSender","HttpInvocation","HttpInvocationSender","HttpInvocationSource","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_channels","close_channels","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","drop","drop","encode","encode","encode","encode","encode","encode","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","into","into","into","into","into","into","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","ne","receive","receive","receiver","receiver","receiver","receiver","send","send","sender","sender","sender","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","merge_field","merge_field","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["http_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","http_server::proto","http_server::proto::oak","","","http_server::proto::oak::examples","http_server::proto::oak::examples::http_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","http_server::proto::oak::invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","http_server::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A handler corresponding to an HTTP server that redirects …","A helper node that sends request to an HTTP client …","A simple HTTP handler that responds with <code>OK</code> (200) to every …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initialization message that should be sent to …","Initialization message that should be sent to …","","","","","","","Sender for sending an HttpInvocation to an HTTP client …","","","","","","","","","","","","","","","","","","","","","Sender for sending a RedirectInvocation to a …","HTTP invocation source for sending the HttpRequest to the …","","","","","","Channel for receiving an HttpRequest","","","","","","","","","A gRPC invocation, consisting of exactly two channels: one …","A wrapper for receiving a <code>GrpcInvocation</code> from a channel.","A wrapper for sending a <code>GrpcInvocation</code> over a channel.","An HTTP invocation, consisting of exactly two channels: …","A wrapper for sending an <code>HttpInvocation</code> over a channel.","Source of an HTTP invocation, consisting of exactly two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logging levels as defined in …","A convenience message that may be used as init message by …","This message defines the data that is passed as a log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the …","The verbosity level of the message.","The line containing the message.","","","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,1,2,3,3,1,2,3,1,2,3,0,1,2,3,0,0,0,0,1,2,3,1,2,3,1,2,3,0,0,0,0,0,0,0,4,5,4,5,4,5,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,5,4,4,5,5,4,5,4,4,5,4,5,4,5,4,5,0,0,0,0,0,0,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,9,10,6,7,8,9,10,11,6,7,8,9,10,11,9,10,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,9,10,6,8,9,10,9,10,6,7,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,6,7,8,9,10,11,12,12,12,0,0,0,12,12,12,13,14,12,13,14,12,13,14,13,14,12,13,14,12,12,13,14,13,14,12,13,14,13,14,13,14,13,14,12,13,13,14,12,13,14,12,13,14,12,12,12,13,14,12,12,13,13,13,14,13,14,13,13,14,12,13,13,14,12,13,14,12,13,14,12,13,14,12],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["statichttphandler",3]],[[]],[[]],[[]],[[["httpinvocation",3]],["result",6]],[[["redirectinvocation",3]],["result",6]],[[["httpinvocation",3]],["result",6]],[[["u64",15]]],[[]],[[]],[[]],[[["u64",15]]],null,[[["u64",15]]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["redirectinvocation",3]],[[],["redirecthandlerinit",3]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["redirectinvocation",3]],["bool",15]],[[["redirecthandlerinit",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],null,[[["redirectinvocation",3]],["bool",15]],[[["redirecthandlerinit",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[],["result",4,[["request",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],[[],["result",4,[["response",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],null,null,null,null,[[["response",3]],["result",4,[["oakerror",4]]]],[[["request",3,[["vec",3,[["u8",15],["global",3]]]]]],["result",4,[["oakerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"RedirectHandler"],[3,"RedirectHelper"],[3,"StaticHttpHandler"],[3,"RedirectInvocation"],[3,"RedirectHandlerInit"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"]]},\
"https_attestation_backend":{"doc":"Backend server for the HTTPS Attestation example.","t":[17,3,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11],"n":["EXAMPLE_MESSAGE","Opt","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","http_listen_address","into","main","service","to_owned","try_from","try_into","type_id"],"q":["https_attestation_backend","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1],"f":[null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],null,[[]],[[],["result",6]],[[["request",3,[["body",3]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Opt"]]},\
"https_attestation_client":{"doc":"Client for the HTTPS Attestation example.","t":[17,3,12,11,11,11,11,11,11,11,11,5,12,5,11,11,11,11,5],"n":["EXAMPLE_MESSAGE","Opt","attestation_service_uri","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","into","main","root_https_certificate","send_request","to_owned","try_from","try_into","type_id","verify_server_assertion"],"q":["https_attestation_client","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,0],"f":[null,null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[]],[[],["result",6]],null,[[["client",3],["str",15],["method",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["str",15]],["result",6]]],"p":[[3,"Opt"]]},\
"https_client":{"doc":"","t":[3,11,11,12,5,11,11,11,11,11,11,5,11,11,11,11,11],"n":["Opt","borrow","borrow_mut","ca_cert_path","check_endpoint","clap","clone","clone_into","from","from_clap","into","main","to_owned","try_from","try_into","type_id","vzip"],"q":["https_client","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1],"f":[null,[[]],[[]],null,[[["client",3],["str",15],["label",3],["string",3]]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opt"]]},\
"injection":{"doc":"Example module showcasing handle passing inside of …","t":[5,5,5],"n":["grpc_fe","provider","store"],"q":["injection","",""],"d":["","",""],"i":[0,0,0],"f":[[[["u64",15]]],[[["u64",15]]],[[["u64",15]]]],"p":[]},\
"key_value_lookup":{"doc":"Oak Functions key / value lookup example.","t":[5],"n":["main"],"q":["key_value_lookup"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"location_utils":{"doc":"Utilities for finding and comparing longitude- and …","t":[12,3,3,17,3,6,17,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","Angle","CellID","DEFAULT_CUTOFF_RADIUS_RADIANS","LatLng","Result","S2_DEFAULT_LEVEL","abs","add","advance","advance_wrap","all_neighbors","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bound_st","bound_uv","cell_id_to_bytes","center_face_siti","center_uv","child_begin","child_begin_at_level","child_end","child_end_at_level","child_iter","child_iter_at_level","child_position","children","clone","clone","clone","clone_into","clone_into","clone_into","cmp","common_ancestor_level","contains","deg","distance","distance_from_begin","edge_neighbors","eq","eq","face","face_ij_orientation","find_cell","find_covering_cells","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_face","from_face_ij","from_face_pos_level","from_token","hash","immediate_parent","inf","intersects","into","into","into","is_face","is_infinite","is_leaf","is_valid","is_valid","lat","level","lng","location_from_bytes","location_from_degrees","location_to_bytes","lsb","max_tile","mul","ne","ne","new","next","next_wrap","normalized","normalized","parent","partial_cmp","partial_cmp","pos","prev","prev_wrap","rad","range_max","range_min","raw_point","to_owned","to_owned","to_owned","to_string","to_token","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vertex_neighbors"],"q":["location_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Angle represents a 1D angle. The internal representation …","CellID uniquely identifies a cell in the S2 cell …","The default cutoff radius in radians.","","<code>Result&lt;T, Error&gt;</code>","The default level to use for S2 Geometry cells. Higher …","abs returns the absolute value of the angle.","","advance advances or retreats the indicated number of steps …","advance_wrap advances or retreats the indicated number of …","all_neighbors returns all neighbors of this cell at the …","","","","","","","bound_st returns the bound of this CellID in (s,t)-space.","bound_uv returns the bound of this CellID in (u,v)-space.","Converts a <code>CellID</code> to a byte representation.","center_face_siti returns the (face, si, ti) coordinates of …","center_uv returns the center of this CellID in …","child_begin returns the first child in a traversal of the …","child_begin_at_level returns the first cell in a traversal …","child_end returns the first cell after a traversal of the …","child_end_at_level returns the first cell after the last …","","","child_position returns the child position (0..3) of this …","children returns the four immediate children of this cell. …","","","","","","","","common_ancestor_level returns the level of the common …","contains returns true iff the CellID contains oci.","deg returns the angle in degrees.","","distance_from_begin returns the number of steps that this …","edge_neighbors returns the four cells that are adjacent …","","","face returns the cube face for this cell ID, in the range […","face_ij_orientation uses the global lookupIJ table to …","Finds the cell at the given <code>level</code> that covers the <code>location</code>.","Finds the set of S2 cells at the required <code>level</code> that …","","","","","","","","","","converts this ChordAngle to an Angle.","","","","","","","converts this ChordAngle to an Angle.","","","","","","","","","returns the center of the s2 cell on the sphere as a …","","","","from_face returns the cell corresponding to a given S2 …","","from_pos_level returns a cell given its face in the range […","from_token returns a cell given a hex-encoded string of …","","immediate_parent is cheaper than Parent, but assumes …","inf returns an angle larger than any finite angle.","intersects returns true iff the CellID intersects oci.","","","","is_face returns whether this is a top-level (face) cell.","is_infinite reports whether this Angle is infinite.","is_leaf returns whether this cell ID is at the deepest …","is_valid reports whether ci represents a valid cell.","","","level returns the subdivision level of this cell ID, in …","","Converts a byte representation of a location into a <code>LatLng</code>.","Converts latitude and longitude values in degrees to a …","Converts a <code>LatLng</code> location to a byte representation.","lsb returns the least significant bit that is set.","max_tile returns the largest cell with the same range_min …","","","","","next returns the next cell along the Hilbert curve. This …","next_wrap returns the next cell along the Hilbert curve, …","normalized returns an equivalent angle in [0, 2π).","","parent returns the cell at the given level, which must be …","","","pos returns the position along the Hilbert curve of this …","prev returns the previous cell along the Hilbert curve.","prev_wrap returns the previous cell along the Hilbert …","rad returns the angle in radians.","range_max returns the maximum CellID that is contained …","range_min returns the minimum CellID that is contained …","","","","","","to_token returns a hex-encoded string of the uint64 cell …","","","","","","","","","","vertex_neighbors returns the neighboring cellIDs with …"],"i":[1,0,0,0,0,0,0,2,2,1,1,1,2,1,3,2,1,3,1,1,0,1,1,1,1,1,1,1,1,1,1,2,1,3,2,1,3,1,1,1,2,3,1,1,2,1,1,1,0,0,2,1,1,3,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,3,3,3,3,3,1,1,1,1,1,1,2,1,2,1,3,1,2,1,1,3,3,1,3,0,0,0,1,1,2,2,1,3,1,1,2,3,1,2,1,1,1,1,2,1,1,1,2,1,3,1,1,2,1,3,2,1,3,2,1,3,1],"f":[null,null,null,null,null,null,null,[[],["angle",3]],[[["f64",15]],["angle",3]],[[["i64",15]],["cellid",3]],[[["i64",15]],["cellid",3]],[[["u64",15]],["vec",3,[["cellid",3],["global",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["rect",3]],[[],["rect",3]],[[["cellid",3]],["vec",3,[["u8",15]]]],[[]],[[],["point",3]],[[],["cellid",3]],[[["u64",15]],["cellid",3]],[[],["cellid",3]],[[["u64",15]],["cellid",3]],[[],["iter",3]],[[["u64",15]],["iter",3]],[[["u64",15]],["u64",15]],[[]],[[],["angle",3]],[[],["cellid",3]],[[],["latlng",3]],[[]],[[]],[[]],[[["cellid",3]],["ordering",4]],[[["cellid",3]],["option",4,[["u64",15]]]],[[["cellid",3]],["bool",15]],[[],["f64",15]],[[["latlng",3]],["angle",3]],[[],["i64",15]],[[]],[[["angle",3]],["bool",15]],[[["cellid",3]],["bool",15]],[[],["u8",15]],[[]],[[["latlng",3],["u8",15]],["result",6,[["cellid",3]]]],[[["latlng",3],["angle",3],["u8",15]],["result",6,[["vec",3,[["cellid",3]]]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["e7",3]],["angle",3]],[[["deg",3]],["angle",3]],[[]],[[["e5",3]],["angle",3]],[[["e6",3]],["angle",3]],[[["chordangle",3]],["angle",3]],[[["deg",3]],["angle",3]],[[["e6",3]],["angle",3]],[[["rad",3]],["angle",3]],[[["e7",3]],["angle",3]],[[["rad",3]],["angle",3]],[[["e5",3]],["angle",3]],[[["chordangle",3]],["angle",3]],[[["point",3]],["cellid",3]],[[["latlng",3]],["cellid",3]],[[["point",3]],["cellid",3]],[[["latlng",3]],["cellid",3]],[[]],[[["cell",3]],["cellid",3]],[[["cell",3]],["cellid",3]],[[["cellid",3]],["latlng",3]],[[["cellid",3]],["latlng",3]],[[]],[[["point",3]],["latlng",3]],[[["point",3]],["latlng",3]],[[["u64",15]],["cellid",3]],[[["u8",15],["i32",15],["i32",15]],["cellid",3]],[[["u64",15],["u64",15],["u64",15]],["cellid",3]],[[["str",15]],["cellid",3]],[[]],[[],["cellid",3]],[[],["angle",3]],[[["cellid",3]],["bool",15]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[],["u64",15]],null,[[],["result",6,[["latlng",3]]]],[[["f64",15],["f64",15]],["latlng",3]],[[["latlng",3]]],[[],["u64",15]],[[["cellid",3]],["cellid",3]],[[["f64",15]],["angle",3]],[[["angle",3]],["bool",15]],[[["cellid",3]],["bool",15]],[[["angle",3],["angle",3]],["latlng",3]],[[],["cellid",3]],[[],["cellid",3]],[[],["angle",3]],[[],["latlng",3]],[[["u64",15]],["cellid",3]],[[["angle",3]],["option",4,[["ordering",4]]]],[[["cellid",3]],["option",4,[["ordering",4]]]],[[],["u64",15]],[[],["cellid",3]],[[],["cellid",3]],[[],["f64",15]],[[],["cellid",3]],[[],["cellid",3]],[[],["vector",3]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u64",15]],["vec",3,[["cellid",3],["global",3]]]]],"p":[[3,"CellID"],[3,"Angle"],[3,"LatLng"]]},\
"lookup_data_generator":{"doc":"","t":[0,5,5,5],"n":["data","generate_and_serialize_random_entries","generate_and_serialize_sparse_weather_entries","generate_and_serialize_weather_entries"],"q":["lookup_data_generator","lookup_data_generator::data","",""],"d":["","Generates random lookup entries with the specified sizes …","Generates a sparse set of random weather lookup entries …","Generates a dense set of random weather lookup entries …"],"i":[0,0,0,0],"f":[null,[[["usize",15],["usize",15],["usize",15]],["result",6,[["bytesmut",3]]]],[[["usize",15]],["result",6,[["bytesmut",3]]]],[[],["result",6,[["bytesmut",3]]]]],"p":[]},\
"metrics":{"doc":"Oak Functions differentially private metrics example.","t":[5],"n":["main"],"q":["metrics"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"metrics_client":{"doc":"Sends 200 requests to the metrics backend alternating …","t":[3,11,11,11,11,11,11,11,11,11,5,11,11,11,11,12,11],"n":["Opt","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","into","into_request","main","to_owned","try_from","try_into","type_id","uri","vzip"],"q":["metrics_client","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[]],[[],["request",3]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]]],"p":[[3,"Opt"]]},\
"mobilenet":{"doc":"Oak Functions TensorFlow example, based on the MobilenetV2 …","t":[5],"n":["main"],"q":["mobilenet"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"mobilenet_client":{"doc":"Sends an image to the mobilenet application and checks …","t":[17,17,17,17,5],"n":["BATCH_SIZE","CHANNELS","HEIGHT","WIDTH","main"],"q":["mobilenet_client","","","",""],"d":["","","","",""],"i":[0,0,0,0,0],"f":[null,null,null,null,[[],["result",6]]],"p":[]},\
"oak":{"doc":"SDK functionality that provides idiomatic Rust wrappers …","t":[4,16,8,18,13,13,13,13,13,13,13,13,13,13,6,16,13,13,3,16,13,4,4,13,13,13,13,13,13,3,13,13,8,8,3,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,0,11,11,11,11,11,11,11,11,11,11,11,14,14,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,12,10,11,11,11,0,14,12,11,11,11,11,11,11,0,11,11,0,11,11,11,11,0,5,5,5,5,11,11,0,11,0,5,5,0,5,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,12,12,12,13,3,13,4,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,13,4,13,13,13,3,3,13,13,8,6,13,13,13,13,13,13,6,4,8,3,13,13,13,13,13,13,13,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,5,5,11,12,12,11,11,11,12,12,11,11,11,11,11,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,5,8,24,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,10,11,11,12,12,5,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,12,12,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,12,5,3,3,3,6,12,12,12,12,12,5,5,12,12,12,8,8,3,3,8,3,8,11,11,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11,11,11,10,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,5,11,11,11,11,11,5,11,11,11,11,12,12,12,11,11,11,11,10,11,10,10,11,11,11,11,11,11,11,11,11,5,5,10,11,10,11,10,11,10,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,10,11,10,11,5,5,5,5,5,5,5,5,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,3,3,3,13,3,3,3,3,13,3,3,3,3,13,3,3,3,4,3,3,3,3,3,13,8,3,3,4,13,3,3,3,3,13,13,13,3,3,12,12,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,10,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,12,12,12,12,12,10,11,12,11,11,11,11,10,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,10,11,10,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,3,3,3,3,3,3,3,3,3,8,3,3,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,10,11,10,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11],"n":["ChannelReadStatus","Command","CommandHandler","ENTRYPOINT_NAME","ErrBadHandle","ErrBufferTooSmall","ErrChannelClosed","ErrChannelEmpty","ErrHandleSpaceTooSmall","ErrInternal","ErrInvalidArgs","ErrOutOfRange","ErrPermissionDenied","ErrTerminated","Handle","Init","InvalidChannel","IoError","Label","Message","NotReady","OakError","OakStatus","OakStatus","Ok","Orphaned","PermissionDenied","ProtobufDecodeError","ProtobufEncodeError","ReadHandle","ReadReady","Unspecified","WasmEntrypoint","WithInit","WriteHandle","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_close","channel_create","channel_create_with_downgrade","channel_label_read","channel_read","channel_read_with_downgrade","channel_write","channel_write_with_downgrade","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","confidentiality_tags","create","crypto","decode","default","default","default","deserialize","deserialize","drop","drop","encode","encode_raw","encoded_len","entrypoint","entrypoint_command_handler","entrypoint_command_handler_init","eq","eq","eq","eq","eq","flows_to","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","grpc","handle","handle","handle","handle_command","hash","hash","hash","http","impl_dispatcher","integrity_tags","into","into","into","into","into","into","io","is_valid","is_valid","logger","merge_field","ne","ne","ne","node_config","node_create","node_create_with_downgrade","node_label_read","node_privilege_read","partial_cmp","partial_cmp","proto","public_untrusted","rand","random_get","result_from_status","roughtime","run_command_loop","serialize","serialize","set_panic_hook","storage","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","wait_on_channels","wait_on_channels_with_downgrade","0","0","0","0","Binary","Crypto","Json","KeysetFormat","KeysetHandle","bind","borrow","borrow","borrow_mut","borrow_mut","compute_mac","compute_prf","decrypt","decrypt_deterministically","encrypt","encrypt_deterministically","from","from","generate","generate_named","into","into","kms_proxy","new","public","sign","try_from","try_from","try_into","try_into","type_id","type_id","unbind","verify","verify_mac","Aborted","AlreadyExists","Cancelled","ChannelResponseWriter","Close","Code","DataLoss","DeadlineExceeded","FailedPrecondition","GrpcRequest","GrpcResponse","Internal","InvalidArgument","Invocable","Invocation","KeepOpen","NotFound","Ok","OutOfRange","PermissionDenied","ResourceExhausted","Result","ServerMethod","ServerNode","Status","StreamStream","StreamUnary","UnaryStream","UnaryUnary","Unauthenticated","Unavailable","Unimplemented","Unknown","WriteMode","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_status","clear","clear","clear","client","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","cmp","code","decap_response","decode","decode","default","default","default","default","details","encode","encode","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from_i32","handle","hash","into","into","into","into","into","into","into","invoke","invoke","invoke","invoke_grpc_method","invoke_grpc_method_stream","is_valid","last","last","merge_field","merge_field","merge_field","message","method_name","ne","ne","ne","new","partial_cmp","req_msg","rsp_msg","server","status","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write","write_empty","0","0","0","0","init","init","init_with_sender","HandleVisit","HandleVisit","Receiver","Sender","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","extract_handles","fmt","fmt","fold","from","from","id","id","inject_handles","into","into","invalid","is_valid","merge_field","merge_field","ne","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","HeaderMap","HttpRequest","HttpResponse","body","body","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","client","clone","clone","clone","clone_into","clone_into","clone_into","create_http_invocation","decode","decode","default","default","default","encode","encode","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","headers","headers","headers","into","into","into","into_iter","merge_field","merge_field","merge_field","method","ne","ne","ne","server","status","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","uri","init","HeaderMap","HttpRequest","HttpResponse","Invocation","body","body","headers","headers","headers","init","init_with_sender","method","status","uri","Decodable","Encodable","Message","Receiver","ReceiverExt","Sender","SenderExt","as_proto_handle","as_proto_handle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bytes","channel_create","channel_create_with_downgrade","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","close","close","close","close","decode","decode","decode","default","default","encode","encode","encode","encode_raw","encode_raw","encoded_len","encoded_len","entrypoint_node_create","eq","eq","eq","error_from_nonok_status","fmt","fmt","fmt","fold","fold","forward_invocation","from","from","from","from","handle","handle","handles","into","into","into","into_inner","iter","iter","label","label","label","label","merge_field","merge_field","ne","ne","ne","new","new","node_create","node_create_with_downgrade","receive","receive","receive_with_downgrade","receive_with_downgrade","send","send","send_with_downgrade","send_with_downgrade","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_receive","try_receive","try_receive_with_downgrade","try_receive_with_downgrade","type_id","type_id","type_id","wait","wait","wait_with_downgrade","wait_with_downgrade","create","init","grpc_client","grpc_server","http_client","http_server","log","wasm","oak","application","crypto","invocation","label","roughtime","storage","ApplicationConfiguration","ConfigMap","CryptoConfiguration","GrpcClientConfiguration","GrpcServerConfiguration","HttpClientConfiguration","HttpServerConfiguration","LogConfiguration","ModuleSignature","NodeConfiguration","RoughtimeClientConfiguration","RoughtimeServer","StorageProxyConfiguration","WebAssemblyConfiguration","address","address","address","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config_type","decode","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encode","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","host","initial_node_configuration","into","into","into","into","into","into","into","into","into","into","into","into","into","into","items","max_radius_microseconds","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","min_overlapping_intervals","module_hash","module_signatures","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","node_configuration","port","public_key","public_key_base64","server_retries","servers","signed_hash","timeout_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","wasm_entrypoint_name","wasm_module_name","wasm_modules","ConfigType","CryptoConfig","GrpcClientConfig","GrpcServerConfig","HttpClientConfig","HttpServerConfig","LogConfig","RoughtimeClientConfig","StorageConfig","WasmConfig","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","0","AeadDecryptRequest","AeadDecryptResponse","AeadEncryptRequest","AeadEncryptResponse","Binary","ComputeMacRequest","ComputeMacResponse","ComputePrfRequest","ComputePrfResponse","Crunchy","DeterministicAeadDecryptRequest","DeterministicAeadDecryptResponse","DeterministicAeadEncryptRequest","DeterministicAeadEncryptResponse","Json","KeyTemplate","KeysetBindRequest","KeysetBindResponse","KeysetFormat","KeysetGenerateRequest","KeysetPublicRequest","KeysetResponse","KeysetUnbindRequest","KmsProxyRequest","Legacy","OakCrypto","OakCryptoClient","OakCryptoDispatcher","OutputPrefixType","Raw","SignatureSignRequest","SignatureSignResponse","SignatureVerifyRequest","SignatureVerifyResponse","Tink","UnknownFormat","UnknownPrefix","VerifyMacRequest","VerifyMacResponse","associated_data","associated_data","associated_data","associated_data","bind","bind","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","ciphertext","ciphertext","ciphertext","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compute_mac","compute_mac","compute_prf","compute_prf","data","data","data","data","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decrypt","decrypt","decrypt_deterministically","decrypt_deterministically","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encrypt","encrypt","encrypt_deterministically","encrypt_deterministically","encrypted_keyset","encrypted_keyset","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","generate","generate","hash","hash","inner_keyset_handle","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","keyset_generate_request","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","kms_identifier","kms_proxy","kms_proxy","mac_value","mac_value","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","output_length","output_prefix_type","output_prefix_type","partial_cmp","partial_cmp","plaintext","plaintext","plaintext","plaintext","prf_value","private_keyset_handle","private_keyset_handle","public","public","public_keyset_handle","server_method","set_format","set_format","set_output_prefix_type","sign","sign","signature","signature","template_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_url","unbind","unbind","value","verify","verify","verify_mac","verify_mac","TemplateData","TemplateId","TemplateName","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","fold","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","GrpcInvocation","GrpcInvocationReceiver","GrpcInvocationSender","HttpInvocation","HttpInvocationSender","HttpInvocationSource","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_channels","close_channels","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","drop","drop","encode","encode","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","receive","receive","receiver","receiver","receiver","receiver","send","send","sender","sender","sender","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Label","PublicKeyIdentityTag","Tag","TlsEndpointTag","Top","WebAssemblyModuleSignatureTag","WebAssemblyModuleTag","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confidentiality_tags","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","integrity_tags","into","into","into","into","into","into","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","public_key","public_key","serialize","serialize","serialize","serialize","serialize","serialize","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","web_assembly_module_hash_sha_256","PublicKeyIdentityTag","Tag","TlsEndpointTag","TopTag","WebAssemblyModuleSignatureTag","WebAssemblyModuleTag","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","hash","into","merge","ne","serialize","to_owned","try_from","try_into","type_id","0","0","0","0","0","0","GetRoughtimeRequest","Roughtime","RoughtimeService","RoughtimeServiceClient","RoughtimeServiceDispatcher","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","default","default","encode","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","fold","fold","from","from","from","from","get_roughtime","get_roughtime","into","into","into","into","ne","roughtime_usec","server_method","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","0","StorageChannelBeginRequest","StorageChannelBeginResponse","StorageChannelCommitRequest","StorageChannelCommitResponse","StorageChannelDeleteRequest","StorageChannelDeleteResponse","StorageChannelReadRequest","StorageChannelReadResponse","StorageChannelRollbackRequest","StorageChannelRollbackResponse","StorageChannelWriteRequest","StorageChannelWriteResponse","StorageItem","StorageService","StorageServiceClient","StorageServiceDispatcher","begin","begin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commit","commit","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","default","default","default","default","default","default","default","delete","delete","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","item","item","item","item","label","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","read","read","rollback","rollback","server_method","storage_id","storage_name","storage_name","storage_name","storage_name","storage_name","storage_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_id","transaction_id","transaction_id","transaction_id","transaction_id","transaction_id","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","write","write","OakRng","borrow","borrow_mut","clone","clone_into","fill_bytes","fmt","from","into","next_u32","next_u64","to_owned","try_fill_bytes","try_from","try_into","type_id","Roughtime","borrow","borrow_mut","from","get_roughtime","into","new","try_from","try_into","type_id","Storage","borrow","borrow_mut","delete","from","into","new","read","try_from","try_into","type_id","write"],"q":["oak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::OakError","","","","oak::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::grpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::grpc::ServerMethod","","","","oak::grpc::client","oak::grpc::server","","oak::handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::http::client","oak::http::server","","","","","","","","","","","","","","oak::io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::logger","","oak::node_config","","","","","","oak::proto","oak::proto::oak","","","","","","oak::proto::oak::applicationoak::proto::oak::application::node_configuration","","","","","","","","","","","","","","","","","","","","","","","","","","oak::proto::oak::application::node_configuration::ConfigType","","","","","","","","","oak::proto::oak::cryptooak::proto::oak::crypto::keyset_generate_request","","","","","","","","","","","","","","","","","","","","oak::proto::oak::crypto::keyset_generate_request::TemplateId","","oak::proto::oak::invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::proto::oak::label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::proto::oak::label::tag","","","","","","","","","","","","","","","","","","","","","","","","","oak::proto::oak::label::tag::Tag","","","","","oak::proto::oak::roughtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::proto::oak::storage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak::rand","","","","","","","","","","","","","","","","oak::roughtime","","","","","","","","","","oak::storage","","","","","","","","","","",""],"d":["Single byte values used to indicate the read status of a …","Type of the command that is handled by this instance.","Trait implemented by Oak Nodes (or parts thereof) that …","Name of the WebAssembly exported function that corresponds …","Invalid handle provided.","Provided buffer was too small for operation (an output …","Channel has been closed.","Channel has no messages available to read.","Provided handle space was too small for operation (an …","Internal error.","Arguments invalid.","Argument out of valid range.","The node does not have sufficient permissions to perform …","Node terminated.","Handle used to identify read or write channel halves.","","Channel handle does not identify the read half of a …","","Label represents information flowing through a Node or …","Type of message that the Node accepts on its inbound …","No pending messages available on channel.","Generic Oak error.","Status values exchanged as i32 values across the Node Wasm …","","Success.","Channel has no extant write halves (and is empty).","A node trying to access the channel does not have the …","","","Wrapper for a handle to the read half of a channel.","Pending message available on channel.","","Trait implemented by structs that correspond to entrypoint …","Trait implemented by structs that require an …","Wrapper for a handle to the send half of a channel.","","","","","","","","","","","","","Close the specified channel <code>Handle</code>.","Create a new unidirectional channel.","The same as <code>channel_create</code>, but also applies the current …","Get the <code>Label</code> for the channel associated with the <code>handle</code>.","Read a message from a channel without blocking.","The same as <code>channel_read</code>, but also applies the current Node…","Write a message to a channel.","The same as <code>channel_write</code>, but also applies the current …","","","","","","","","","","","","","","","Creates an instance of this struct based on the provided …","Helper library for accessing the Oak cryptography service.","","","","","Build the label from bytes.","","","","","","","Register a new Node entrypoint.","Similar to <code>entrypoint</code>, but offers a less verbose API in …","Similar to <code>entrypoint_command_handler</code>, but for nodes that …","","","","","","Compare two labels according to the lattice structure: L_0 …","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OakStatus</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>ChannelReadStatus</code>, or <code>None</code> if <code>value</code> …","Functionality to help Oak Nodes interact with gRPC.","Utilities for visiting, extract and injecting handles.","","","Handles a single command instance.","","","","Functionality to help Oak Nodes create HTTP server and …","Implements the <code>ServerNode</code> trait for the specified type …","","","","","","","","Wrappers for Oak SDK types to allow their use with <code>std::io</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>OakStatus</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ChannelReadStatus</code>.","A logger that sends output to an Oak logging channel, for …","","","","","Helper methods for creating common <code>NodeConfiguration</code> …","Creates a new Node running the configuration identified by …","The same as <code>node_create</code>, but also applies the current Node…","Get the <code>Label</code> for the current node.","Get the downgrade privilege for the current node …","","","Auto-generated code derived from protocol buffer …","Return the least privileged label.","Functionality to allow use of the rand crate in Oak.","Fill a buffer with random data.","Convert a status returned from a host function call to a …","Helper library for accessing the Oak Roughtime service.","Runs a command loop on the provided <code>CommandHandler</code>:","","Convert a label to bytes.","Install a panic hook that logs panic information.","Helper library for accessing Oak storage services.","","","","","","","","","","","","","","","","","","","","","","","","","","Wait for one or more of the provided handles to become …","The same as <code>wait_on_channels</code>, but also applies the current …","","","","","Binary-encoded protobuf.","Local representation of the connection to an external …","JSON-encoded protobuf.","Format of an encrypted keyset.","Opaque handle for a keyset, which is a collection of key …","Convert a keyset to an encrypted form using another keyset.","","","","","Compute MAC.","Compute PRF.","AEAD decryption.","Deterministic AEAD decryption.","AEAD encryption.","Deterministic AEAD encryption.","","","Generate a new keyset with a single fresh key that matches …","Generate a new keyset with a single fresh key that matches …","","","Return a keyset that acts as a proxy to key material held …","Creates a <code>Crypto</code> instance using the given configuration …","Generate a new keyset that just holds public key …","Generate signature.","","","","","","","Retrieve a keyset from an encrypted form using another …","Verify signature.","Verify MAC.","The operation was aborted, typically due to a concurrency …","The entity that a client attempted to create (e.g., file …","The operation was cancelled, typically by the caller.","Channel-holding object that encapsulates response messages …","","The canonical error codes for Google APIs.","Unrecoverable data loss or corruption.","The deadline expired before the operation could complete. …","The operation was rejected because the system is not in a …","","","Internal errors.  This means that some invariants expected …","The client specified an invalid argument.  Note that this …","Trait implemented by all server method variants, applied …","","","Some requested entity (e.g., file or directory) was not …","Not an error; returned on success","The operation was attempted past the valid range.  E.g., …","The caller does not have permission to execute the …","Some resource has been exhausted, perhaps a per-user …","Result type that uses a <code>Status</code> type for error values.","Enum with variants for all combinations of {request, …","Trait for Oak Nodes that act as a gRPC services.","The <code>Status</code> type defines a logical error model that is …","","","","","The request does not have valid authentication credentials …","The service is currently unavailable.  This is most likely …","The operation is not implemented or is not …","Unknown error.  For example, this error may be returned …","Indicate whether a write method should leave the current …","","","","","","","","","","","","","","","Helper to create a gRPC status object.","","","","","","","","","","","","","","","","Close out the gRPC method invocation with the given final …","","The status code, which should be an enum value of […","Extract a protocol buffer message from a GrpcResponse …","","","","","","","A list of messages that carry the error details.  There is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>Code</code>, or <code>None</code> if <code>value</code> is not a valid …","Retrieve the Oak handle underlying the writer object.","","","","","","","","","Process a single gRPC method invocation.","Generic function that handles request deserialization and …","","Helper to inject a (single) gRPC request message via a …","Helper to inject a (single) gRPC request message via a …","Returns <code>true</code> if <code>value</code> is a variant of <code>Code</code>.","","The last field indicates that this is definitely the final …","","","","A developer-facing error message, which should be in …","","","","","","","The body of the request. Usually a serialized protobuf …","The body of the response. Usually a serialized protobuf …","Functionality to help Oak Nodes create gRPC server …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write out a gRPC response and optionally close out the …","Write an empty gRPC response and optionally close out the …","","","","","Initializes a gRPC client pseudo-Node connecting to the …","Initializes a gRPC server pseudo-Node listening on the …","Initializes a gRPC server pseudo-Node listening on the …","Visit all handles present in a type.","Automatically derives the <code>HandleVisit</code> trait for structs …","Receiver handle for an Oak channel. This type is sent over …","Sender handle for an Oak channel. This type is sent over …","","","","","","","","","","","","","","","","","","","Return all handles in <code>T</code>.","","","Invokes the provided closure on every handle contained in …","","","","","Inject handles into a message.","","","Returns an intentionally invalid handle.","Check this handle is valid.","","","","","","","","","","","","","Wrapper around a HashMap representing the headers in …","Protocol buffer encoding representing an HTTP request.","Protocol buffer encoding representing an HTTP response.","The body of the request.","The body of the response.","","","","","","","","","","","","","","","","","Creates an <code>HttpInvocation</code> and a corresponding …","","","","","","","","","","","","","","","","","","","","","","","","","","","","The HTTP request headers.","The HTTP response headers.","","","","","Convert into an iterator over (http::header::HeaderName, …","","","","The HTTP request method used.","","","","","The HTTP status code.","","","","","","","","","","","","","The URI (including scheme and authority) to which the …","Initializes an HTTP client pseudo-Node serving requests …","Wrapper around a HashMap representing the headers in …","Protocol buffer encoding representing an HTTP request.","Protocol buffer encoding representing an HTTP response.","","The body of the request.","The body of the response.","The HTTP request headers.","The HTTP response headers.","","Initializes an HTTP server pseudo-Node listening on the …","Initializes an HTTP server pseudo-Node listening on the …","The HTTP request method used.","The HTTP status code.","The URI (including scheme and authority) to which the …","A trait for objects that can be decoded from bytes + …","A trait for objects that can be encoded as bytes + handles.","A simple holder for bytes + handles, using internally …","Wrapper for a handle to the read half of a channel, …","SDK-specific functionality provided by a receiver.","Wrapper for a handle to the send half of a channel, …","Trait for context-dependent functionality on a <code>Sender</code>.","","","","","","","","","","Creates a new channel for transmission of <code>Encodable</code> and …","Uses the current node’s label-downgrading privilege to …","","","","","","","","","Closes the underlying channel used by the receiver.","Closes the underlying channel used by the sender.","","","","","","","","","","","","","","","Creates a node and corresponding inbound channel of the …","","","","Map a non-OK <code>OakStatus</code> value to the nearest available …","","","","","","Sends <code>crate::grpc::Invocation</code> (containing <code>oak_io::Receiver</code> …","","","","","","","","","","","","Consumes the receiver and returns an iterator that will …","","Retrieves the label associated with the underlying channel.","Retrieves the label associated with the underlying channel.","","","","","","","","","","Creates a node and corresponding inbound channel of the …","Uses the current node’s label-downgrading privilege to …","Attempts to wait for a value on the receiver, blocking if …","","The same as <code>receive</code>, but also applies the current Node’s …","","Attempts to send a value on the sender.","","The same as <code>send</code>, but also applies the current Node’s …","","","","","","","","","","","Attempts to read a value from the receiver, without …","","The same as <code>try_receive</code>, but also applies the current Node…","","","","","Waits for a value to be available from the receiver.","","The same as <code>wait</code>, but also applies the current Node’s …","","","Initialize Node-wide logging via a channel to a logging …","","","","","","","","","","","","","","An ApplicationConfiguration represents a unit of …","A serialized list of key-value pairs that are specified as …","CryptoConfiguration describes the configuration of a …","GrpcClientConfiguration describes the configuration of a …","GrpcServerConfiguration describes the configuration of a …","HttpClientConfiguration describes the configuration of an …","HttpServerConfiguration describes the configuration of an …","LogConfiguration describes the configuration of a logging …","Bundled signature of the SHA-256 hash of a Wasm module. …","NodeConfiguration indicates the configuration of a created …","RoughtimeClientConfiguration describes the configuration …","Information to identify a particular Roughtime server. …","StorageProxyConfiguration describes the configuration of a …","WebAssemblyConfiguration describes the configuration of a …","The address of the external storage provider.","The endpoint address for the gRPC server to listen on. …","The endpoint address for the HTTP server to listen on. …","The authority supported by this client. The authority must …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indication of what configuration the initial Node should …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connection parameters; default values will be used if any …","","The bundled signatures for validating Wasm module hashes.","","","","","","","","","","","","","","Nested message and enum types in <code>NodeConfiguration</code>.","","","","","The collection of Roughtime servers to query. A default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The URI component of a gRPC server endpoint. Must contain …","The name of an exported WebAssembly function to invoke as …","The name of one of the entries in the …","Map from Wasm module names to their bytecode …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Local copy of Tink key template definition, to prevent …","","","","","","Common response type for acquiring keyset handleseturns the enum value of <code>format</code>, or the default if the …","Returns the enum value of <code>format</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OutputPrefixType</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>KeysetFormat</code>, or <code>None</code> if <code>value</code> is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OutputPrefixType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>KeysetFormat</code>.","Nested message and enum types in <code>KeysetGenerateRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>output_prefix_type</code>, or the …","","","","","","","","","","","","","","","Sets <code>format</code> to the provided enum value.","Sets <code>format</code> to the provided enum value.","Sets <code>output_prefix_type</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","in format type.googleapis.com/packagename.messagename","","","contains specific serialized *KeyFormat proto","","","","","serialized KeyTemplate","","","","","","","","","","","","","","","","","","","","","","A gRPC invocation, consisting of exactly two channels: one …","A wrapper for receiving a <code>GrpcInvocation</code> from a channel.","A wrapper for sending a <code>GrpcInvocation</code> over a channel.","An HTTP invocation, consisting of exactly two channels: …","A wrapper for sending an <code>HttpInvocation</code> over a channel.","Source of an HTTP invocation, consisting of exactly two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Label represents information flowing through a Node or …","Policies related to identities, specified using a …","Tag represents a category of confidentiality or integrity …","Policies related to HTTPS communication.","Message representing top element of the principal lattice. …","Policies related to modules, referring to the signature of …","Policies related to modules, referring to the native …","The TLS authority (host:port) of the remote endpoint, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public key counterpart of the private key used to sign …","Public key counterpart of the private key that is used to …","","","","","","","Nested message and enum types in <code>Tag</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","The attestation for a single WebAssembly module, a SHA256 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time is UTC and is given as microseconds since the UNIX …ocal representation of the connection to an external …","","","","Get the current Roughtime value as a Duration since UNIX …","","Creates a <code>Roughtime</code> instance using the given configuration.","","","","Local representation of the connection to an external …","","","Delete the value associated with the given <code>name</code> from the …","","","Creates a <code>Storage</code> instance using the given configuration.","Read the value associated with the given <code>name</code> from the …","","","","Set the value associated with the given <code>name</code> from the …"],"i":[0,1,0,2,3,3,3,3,3,3,3,3,3,3,0,4,5,6,0,2,5,0,0,6,3,5,5,6,6,0,5,3,0,0,0,3,5,6,7,8,9,3,5,6,7,8,9,0,0,0,0,0,0,0,0,9,3,5,7,8,9,3,5,7,8,9,3,5,9,4,0,9,3,5,9,9,9,7,8,9,9,9,0,0,0,3,5,7,8,9,9,3,3,5,6,6,7,8,9,9,3,5,6,6,6,6,6,7,7,8,8,9,3,5,0,0,7,8,1,3,5,9,0,0,9,3,5,6,7,8,9,0,3,5,0,9,7,8,9,0,0,0,0,0,3,5,0,9,0,0,0,0,0,9,9,0,0,3,5,7,8,9,3,6,3,5,6,7,8,9,3,5,6,7,8,9,3,5,6,7,8,9,0,0,10,11,12,13,14,0,14,0,0,15,15,14,15,14,15,15,15,15,15,15,15,14,15,15,15,14,15,15,15,15,15,14,15,14,15,14,15,15,15,16,16,16,0,17,0,16,16,16,0,0,16,16,0,0,17,16,16,16,16,16,0,0,0,0,18,18,18,18,16,16,16,16,0,19,16,20,18,17,21,22,19,16,20,18,17,21,22,0,19,21,22,0,19,16,17,21,22,19,16,17,21,22,23,20,16,19,0,21,22,19,16,21,22,19,21,22,19,21,22,19,21,22,19,16,17,21,22,19,16,17,21,22,21,22,19,16,20,18,17,21,22,16,20,16,19,16,20,18,17,21,22,24,25,18,0,0,16,21,22,19,21,22,19,21,19,21,22,20,16,21,22,0,22,19,16,17,21,22,19,16,20,18,17,21,22,19,16,20,18,17,21,22,19,16,20,18,17,21,22,20,20,26,27,28,29,0,0,0,0,0,0,0,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,30,31,0,30,31,32,30,31,30,31,0,30,31,0,0,30,31,30,31,30,31,30,31,30,31,30,31,0,0,0,33,34,33,34,35,33,34,35,33,34,35,0,33,34,35,33,34,35,0,33,34,33,34,35,33,34,33,34,35,33,34,35,33,34,35,33,34,35,33,34,33,33,34,34,35,35,33,34,35,33,34,35,35,33,34,35,33,33,34,35,0,34,33,34,35,33,34,35,33,34,35,33,34,35,33,0,0,0,0,0,33,34,33,34,35,0,0,33,34,33,0,0,0,0,0,0,0,36,37,36,37,38,36,37,38,38,0,0,36,37,36,37,38,36,37,38,39,40,36,37,41,36,37,36,37,42,36,37,36,37,36,37,0,36,37,38,0,36,37,38,36,37,0,36,36,37,38,36,37,38,36,37,38,36,39,36,39,40,36,37,36,37,36,37,38,36,37,0,0,39,36,39,36,40,37,40,37,36,37,38,36,37,38,36,37,38,39,36,39,36,36,37,38,39,36,39,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,46,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,49,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,55,47,47,48,49,50,51,43,44,52,53,45,46,54,55,56,56,53,47,48,49,50,51,43,44,52,53,45,46,54,55,56,53,48,47,55,47,48,49,50,43,44,52,53,45,46,55,56,0,55,48,55,53,53,48,53,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,47,48,49,50,51,43,44,52,53,45,46,54,55,56,52,50,50,47,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,58,59,60,61,62,63,64,65,66,67,0,0,0,0,68,0,0,0,0,69,0,0,0,0,68,0,0,0,0,0,0,0,0,0,69,0,0,0,0,69,0,0,0,0,69,68,69,0,0,70,71,72,73,74,67,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,84,71,86,73,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,69,68,74,67,74,67,88,90,92,94,96,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,74,67,74,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,74,67,74,67,80,82,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,80,81,80,81,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,69,68,74,67,69,68,81,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,69,68,0,78,80,81,70,71,72,73,88,90,92,83,74,67,88,91,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,90,91,92,93,94,95,96,92,76,76,69,68,70,85,72,87,93,79,94,74,67,96,75,80,81,76,74,67,95,96,77,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,75,67,76,77,78,79,80,81,82,83,70,84,71,85,72,86,73,87,88,89,90,91,92,93,94,95,96,97,69,68,76,74,67,76,74,67,74,67,98,0,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,99,100,0,0,0,0,0,0,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,104,105,101,102,103,104,105,106,101,102,103,104,105,106,104,105,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,104,105,101,103,104,105,104,105,101,102,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,101,102,103,104,105,106,0,0,0,0,0,0,0,107,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,9,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,9,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,110,111,108,109,110,107,111,112,0,108,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,108,109,110,107,111,112,109,113,0,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,114,115,116,117,118,119,0,0,0,0,0,120,119,121,122,120,119,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,121,122,120,119,121,122,123,119,120,119,121,122,122,122,120,121,122,120,119,121,122,120,119,121,122,120,119,121,122,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,125,124,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,125,124,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,125,124,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,127,128,129,130,131,132,133,134,135,136,137,138,139,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,128,129,130,132,127,127,127,128,129,130,132,134,135,136,138,125,124,125,124,126,138,128,130,132,134,136,138,127,128,129,130,131,132,133,134,135,136,137,138,139,128,130,132,135,136,138,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,126,124,127,128,129,130,131,132,133,134,135,136,137,138,139,127,125,124,0,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,0,141,141,141,141,141,141,141,141,141,0,142,142,142,142,142,142,142,142,142,142,142],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["handle",6]],["result",4,[["oakstatus",4]]]],[[["str",15],["label",3]],["result",4,[["oakstatus",4]]]],[[["str",15],["label",3]],["result",4,[["oakstatus",4]]]],[[["handle",6]],["result",4,[["label",3],["oakstatus",4]]]],[[["borrow",8,[["readhandle",3]]],["vec",3],["vec",3]],["result",4,[["oakstatus",4]]]],[[["borrow",8,[["readhandle",3]]],["vec",3],["vec",3]],["result",4,[["oakstatus",4]]]],[[["borrow",8,[["writehandle",3]]]],["result",4,[["oakstatus",4]]]],[[["borrow",8,[["writehandle",3]]]],["result",4,[["oakstatus",4]]]],[[]],[[],["oakstatus",4]],[[],["channelreadstatus",4]],[[],["readhandle",3]],[[],["writehandle",3]],[[],["label",3]],[[]],[[]],[[]],[[]],[[]],[[["oakstatus",4]],["ordering",4]],[[["channelreadstatus",4]],["ordering",4]],null,[[]],null,[[["message",3]],["result",4,[["oakerror",4]]]],[[],["oakstatus",4]],[[],["channelreadstatus",4]],[[],["label",3]],[[],["option",4,[["label",3]]]],[[],["result",4,[["label",3]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[],["usize",15]],null,null,null,[[["oakstatus",4]],["bool",15]],[[["channelreadstatus",4]],["bool",15]],[[["readhandle",3]],["bool",15]],[[["writehandle",3]],["bool",15]],[[["label",3]],["bool",15]],[[["label",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["encodeerror",3]],["oakerror",4]],[[]],[[["oakstatus",4]],["oakerror",4]],[[["decodeerror",3]],["oakerror",4]],[[["error",3]],["oakerror",4]],[[["u64",15]],["readhandle",3]],[[]],[[["u64",15]],["writehandle",3]],[[]],[[]],[[["i32",15]],["option",4,[["oakstatus",4]]]],[[["i32",15]],["option",4,[["channelreadstatus",4]]]],null,null,null,null,[[],["result",6]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["readhandle",3]],["bool",15]],[[["writehandle",3]],["bool",15]],[[["label",3]],["bool",15]],null,[[["str",15],["nodeconfiguration",3],["label",3],["readhandle",3]],["result",4,[["oakstatus",4]]]],[[["str",15],["nodeconfiguration",3],["label",3],["readhandle",3]],["result",4,[["oakstatus",4]]]],[[],["result",4,[["label",3],["oakstatus",4]]]],[[],["result",4,[["label",3],["oakstatus",4]]]],[[["oakstatus",4]],["option",4,[["ordering",4]]]],[[["channelreadstatus",4]],["option",4,[["ordering",4]]]],null,[[],["label",3]],null,[[],["result",4,[["oakstatus",4]]]],[[["i32",15]],["result",4,[["oakstatus",4]]]],null,[[["commandhandler",8],["iterator",8]]],[[],["result",4]],[[],["vec",3,[["u8",15],["global",3]]]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["vec",3,[["channelreadstatus",4]]],["oakstatus",4]]]],[[],["result",4,[["vec",3,[["channelreadstatus",4]]],["oakstatus",4]]]],null,null,null,null,null,null,null,null,null,[[["keysethandle",6],["keysethandle",6],["keysetformat",4]],["result",6,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[]],[[]],[[["keysethandle",6]],["result",6,[["vec",3,[["u8",15]]]]]],[[["keysethandle",6],["u64",15]],["result",6,[["vec",3,[["u8",15]]]]]],[[["keysethandle",6]],["result",6,[["vec",3,[["u8",15]]]]]],[[["keysethandle",6]],["result",6,[["vec",3,[["u8",15]]]]]],[[["keysethandle",6]],["result",6,[["vec",3,[["u8",15]]]]]],[[["keysethandle",6]],["result",6,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[["keytemplate",3]],["result",6,[["keysethandle",6]]]],[[["str",15]],["result",6,[["keysethandle",6]]]],[[]],[[]],[[["str",15]],["result",6,[["keysethandle",6]]]],[[["cryptoconfiguration",3],["label",3]],["option",4,[["crypto",3]]]],[[["keysethandle",6]],["result",6,[["keysethandle",6]]]],[[["keysethandle",6]],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["keysethandle",6],["keysetformat",4]],["result",6,[["keysethandle",6]]]],[[["keysethandle",6]],["result",6]],[[["keysethandle",6]],["result",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["code",4],["str",15]],["status",3]],[[]],[[]],[[]],null,[[],["status",3]],[[],["code",4]],[[],["writemode",4]],[[],["grpcrequest",3]],[[],["grpcresponse",3]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[["result",6]],["result",4,[["oakerror",4]]]],[[["code",4]],["ordering",4]],null,[[["grpcresponse",3]],["result",6]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["status",3]],[[],["code",4]],[[],["grpcrequest",3]],[[],["grpcresponse",3]],null,[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["status",3]],["bool",15]],[[["code",4]],["bool",15]],[[["writemode",4]],["bool",15]],[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["code",4]]]],[[],["writehandle",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["channelresponsewriter",3]]],[[["channelresponsewriter",3]]],[[["channelresponsewriter",3]]],[[["str",15],["sender",3]],["result",6]],[[["str",15],["sender",3]],["result",6,[["receiver",3,[["grpcresponse",3]]]]]],[[["i32",15]],["bool",15]],null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,null,[[["status",3]],["bool",15]],[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["sender",3,[["grpcresponse",3]]]]],[[["code",4]],["option",4,[["ordering",4]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["writemode",4]],["result",4,[["oakerror",4]]]],[[["writemode",4]],["result",4,[["oakerror",4]]]],null,null,null,null,[[["str",15]],["result",4,[["sender",3,[["invocation",6]]],["oakstatus",4]]]],[[["str",15]],["result",4,[["receiver",3,[["invocation",6]]],["oakstatus",4]]]],[[["str",15],["sender",3,[["invocation",6]]]],["result",4,[["oakstatus",4]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["sender",3]],[[],["receiver",3]],[[]],[[]],[[],["sender",3]],[[],["receiver",3]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["sender",3]],["bool",15]],[[["receiver",3]],["bool",15]],[[],["vec",3,[["u64",15],["global",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],null,null,[[],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["handle",6]],[[["handle",6]],["bool",15]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["sender",3]],["bool",15]],[[["receiver",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["httprequest",3]],[[],["httpresponse",3]],[[],["headermap",3]],[[]],[[]],[[]],[[["label",3]],["result",4,[["oakstatus",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["httprequest",3]],[[],["httpresponse",3]],[[],["headermap",3]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["httprequest",3]],["bool",15]],[[["httpresponse",3]],["bool",15]],[[["headermap",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["request",3,[["vec",3,[["u8",15],["global",3]]]]]],["httprequest",3]],[[]],[[]],[[["response",3]],["httpresponse",3]],[[["headermap",3,[["headervalue",3]]]],["headermap",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,[[["httprequest",3]],["bool",15]],[[["httpresponse",3]],["bool",15]],[[["headermap",3]],["bool",15]],null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["str",15]],["result",4,[["sender",3,[["httpinvocation",3]]],["oakstatus",4]]]],null,null,null,null,null,null,null,null,null,[[["str",15]],["result",4,[["receiver",3,[["invocation",6]]],["oakstatus",4]]]],[[["str",15],["sender",3,[["invocation",6]]]],["result",4,[["oakstatus",4]]]],null,null,null,null,null,null,null,null,null,null,[[],["receiver",3]],[[],["sender",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15],["label",3]],["result",4,[["oakstatus",4]]]],[[["str",15],["label",3]],["result",4,[["oakstatus",4]]]],[[]],[[]],[[],["receiver",3]],[[],["sender",3]],[[],["message",3]],[[]],[[]],[[]],[[],["result",4,[["oakstatus",4]]]],[[],["result",4,[["oakstatus",4]]]],[[],["result",4,[["oakstatus",4]]]],[[],["result",4,[["oakstatus",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["receiver",3]],[[],["sender",3]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["str",15],["label",3],["str",15],["",26,[["encodable",8],["decodable",8]]]],["result",4,[["sender",3,[["",26,[["encodable",8],["decodable",8]]]]],["oakerror",4]]]],[[["receiver",3]],["bool",15]],[[["sender",3]],["bool",15]],[[["message",3]],["bool",15]],[[["oakstatus",4]],["error",3]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["invocation",6],["sender",3]],["result",6]],[[]],[[["readhandle",3]],["receiver",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[],["readhandle",3]],[[],["receiveriterator",3]],[[],["receiveriterator",3]],[[],["result",4,[["label",3],["oakerror",4]]]],[[],["result",4,[["label",3],["oakerror",4]]]],[[],["result",4,[["label",3],["oakerror",4]]]],[[],["result",4,[["label",3],["oakerror",4]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["receiver",3]],["bool",15]],[[["sender",3]],["bool",15]],[[["message",3]],["bool",15]],[[["readhandle",3]],["receiver",3]],[[["writehandle",3]],["sender",3]],[[["str",15],["label",3],["nodeconfiguration",3]],["result",4,[["sender",3,[["",26,[["encodable",8],["decodable",8]]]]],["oakstatus",4]]]],[[["str",15],["label",3],["nodeconfiguration",3]],["result",4,[["sender",3,[["",26,[["encodable",8],["decodable",8]]]]],["oakstatus",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",4,[["channelreadstatus",4],["oakstatus",4]]]],[[],["result",4,[["channelreadstatus",4],["oakstatus",4]]]],[[],["result",4,[["channelreadstatus",4],["oakstatus",4]]]],[[],["result",4,[["channelreadstatus",4],["oakstatus",4]]]],[[],["result",4,[["sender",3,[["logmessage",3]]],["oakstatus",4]]]],[[["sender",3,[["logmessage",3]]],["level",4]],["result",4,[["setloggererror",3]]]],[[["str",15]],["nodeconfiguration",3]],[[["str",15]],["nodeconfiguration",3]],[[["str",15]],["nodeconfiguration",3]],[[["str",15]],["nodeconfiguration",3]],[[],["nodeconfiguration",3]],[[["str",15],["str",15]],["nodeconfiguration",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["applicationconfiguration",3]],[[],["modulesignature",3]],[[],["nodeconfiguration",3]],[[],["webassemblyconfiguration",3]],[[],["logconfiguration",3]],[[],["storageproxyconfiguration",3]],[[],["grpcserverconfiguration",3]],[[],["grpcclientconfiguration",3]],[[],["roughtimeclientconfiguration",3]],[[],["httpserverconfiguration",3]],[[],["httpclientconfiguration",3]],[[],["cryptoconfiguration",3]],[[],["roughtimeserver",3]],[[],["configmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["message",3]],["result",4,[["oakerror",4]]]],[[],["applicationconfiguration",3]],[[],["modulesignature",3]],[[],["nodeconfiguration",3]],[[],["webassemblyconfiguration",3]],[[],["logconfiguration",3]],[[],["storageproxyconfiguration",3]],[[],["grpcserverconfiguration",3]],[[],["grpcclientconfiguration",3]],[[],["roughtimeclientconfiguration",3]],[[],["httpserverconfiguration",3]],[[],["httpclientconfiguration",3]],[[],["cryptoconfiguration",3]],[[],["roughtimeserver",3]],[[],["configmap",3]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["applicationconfiguration",3]],["bool",15]],[[["modulesignature",3]],["bool",15]],[[["nodeconfiguration",3]],["bool",15]],[[["webassemblyconfiguration",3]],["bool",15]],[[["logconfiguration",3]],["bool",15]],[[["storageproxyconfiguration",3]],["bool",15]],[[["grpcserverconfiguration",3]],["bool",15]],[[["grpcclientconfiguration",3]],["bool",15]],[[["roughtimeclientconfiguration",3]],["bool",15]],[[["httpserverconfiguration",3]],["bool",15]],[[["httpclientconfiguration",3]],["bool",15]],[[["cryptoconfiguration",3]],["bool",15]],[[["roughtimeserver",3]],["bool",15]],[[["configmap",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,null,null,null,[[["applicationconfiguration",3]],["bool",15]],[[["modulesignature",3]],["bool",15]],[[["nodeconfiguration",3]],["bool",15]],[[["webassemblyconfiguration",3]],["bool",15]],[[["storageproxyconfiguration",3]],["bool",15]],[[["grpcserverconfiguration",3]],["bool",15]],[[["grpcclientconfiguration",3]],["bool",15]],[[["roughtimeclientconfiguration",3]],["bool",15]],[[["httpserverconfiguration",3]],["bool",15]],[[["httpclientconfiguration",3]],["bool",15]],[[["roughtimeserver",3]],["bool",15]],[[["configmap",3]],["bool",15]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["configtype",4]],[[]],[[]],[[],["usize",15]],[[["configtype",4]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["configtype",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["keysetbindrequest",3]],["result",6,[["keysetbindresponse",3]]]],[[["keysetbindrequest",3]],["result",6,[["keysetbindresponse",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keytemplate",3]],[[],["keysetgeneraterequest",3]],[[],["keysetresponse",3]],[[],["keysetpublicrequest",3]],[[],["keysetunbindrequest",3]],[[],["keysetbindrequest",3]],[[],["keysetbindresponse",3]],[[],["kmsproxyrequest",3]],[[],["aeadencryptrequest",3]],[[],["aeadencryptresponse",3]],[[],["aeaddecryptrequest",3]],[[],["aeaddecryptresponse",3]],[[],["deterministicaeadencryptrequest",3]],[[],["deterministicaeadencryptresponse",3]],[[],["deterministicaeaddecryptrequest",3]],[[],["deterministicaeaddecryptresponse",3]],[[],["verifymacrequest",3]],[[],["verifymacresponse",3]],[[],["computemacrequest",3]],[[],["computemacresponse",3]],[[],["computeprfrequest",3]],[[],["computeprfresponse",3]],[[],["signaturesignrequest",3]],[[],["signaturesignresponse",3]],[[],["signatureverifyrequest",3]],[[],["signatureverifyresponse",3]],[[],["outputprefixtype",4]],[[],["keysetformat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["outputprefixtype",4]],["ordering",4]],[[["keysetformat",4]],["ordering",4]],[[["computemacrequest",3]],["result",6,[["computemacresponse",3]]]],[[["computemacrequest",3]],["result",6,[["computemacresponse",3]]]],[[["computeprfrequest",3]],["result",6,[["computeprfresponse",3]]]],[[["computeprfrequest",3]],["result",6,[["computeprfresponse",3]]]],null,null,null,null,null,[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["aeaddecryptrequest",3]],["result",6,[["aeaddecryptresponse",3]]]],[[["aeaddecryptrequest",3]],["result",6,[["aeaddecryptresponse",3]]]],[[["deterministicaeaddecryptrequest",3]],["result",6,[["deterministicaeaddecryptresponse",3]]]],[[["deterministicaeaddecryptrequest",3]],["result",6,[["deterministicaeaddecryptresponse",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["outputprefixtype",4]],[[],["keysetformat",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["aeadencryptrequest",3]],["result",6,[["aeadencryptresponse",3]]]],[[["aeadencryptrequest",3]],["result",6,[["aeadencryptresponse",3]]]],[[["deterministicaeadencryptrequest",3]],["result",6,[["deterministicaeadencryptresponse",3]]]],[[["deterministicaeadencryptrequest",3]],["result",6,[["deterministicaeadencryptresponse",3]]]],null,null,[[["keytemplate",3]],["bool",15]],[[["keysetgeneraterequest",3]],["bool",15]],[[["keysetresponse",3]],["bool",15]],[[["keysetpublicrequest",3]],["bool",15]],[[["keysetunbindrequest",3]],["bool",15]],[[["keysetbindrequest",3]],["bool",15]],[[["keysetbindresponse",3]],["bool",15]],[[["kmsproxyrequest",3]],["bool",15]],[[["aeadencryptrequest",3]],["bool",15]],[[["aeadencryptresponse",3]],["bool",15]],[[["aeaddecryptrequest",3]],["bool",15]],[[["aeaddecryptresponse",3]],["bool",15]],[[["deterministicaeadencryptrequest",3]],["bool",15]],[[["deterministicaeadencryptresponse",3]],["bool",15]],[[["deterministicaeaddecryptrequest",3]],["bool",15]],[[["deterministicaeaddecryptresponse",3]],["bool",15]],[[["verifymacrequest",3]],["bool",15]],[[["verifymacresponse",3]],["bool",15]],[[["computemacrequest",3]],["bool",15]],[[["computemacresponse",3]],["bool",15]],[[["computeprfrequest",3]],["bool",15]],[[["computeprfresponse",3]],["bool",15]],[[["signaturesignrequest",3]],["bool",15]],[[["signaturesignresponse",3]],["bool",15]],[[["signatureverifyrequest",3]],["bool",15]],[[["signatureverifyresponse",3]],["bool",15]],[[["outputprefixtype",4]],["bool",15]],[[["keysetformat",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keysetformat",4]],[[],["keysetformat",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["outputprefixtype",4]]]],[[["i32",15]],["option",4,[["keysetformat",4]]]],[[["keysetgeneraterequest",3]],["result",6,[["keysetresponse",3]]]],[[["keysetgeneraterequest",3]],["result",6,[["keysetresponse",3]]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,[[["kmsproxyrequest",3]],["result",6,[["keysetresponse",3]]]],[[["kmsproxyrequest",3]],["result",6,[["keysetresponse",3]]]],null,null,[[["keytemplate",3]],["bool",15]],[[["keysetgeneraterequest",3]],["bool",15]],[[["keysetresponse",3]],["bool",15]],[[["keysetpublicrequest",3]],["bool",15]],[[["keysetunbindrequest",3]],["bool",15]],[[["keysetbindrequest",3]],["bool",15]],[[["keysetbindresponse",3]],["bool",15]],[[["kmsproxyrequest",3]],["bool",15]],[[["aeadencryptrequest",3]],["bool",15]],[[["aeadencryptresponse",3]],["bool",15]],[[["aeaddecryptrequest",3]],["bool",15]],[[["aeaddecryptresponse",3]],["bool",15]],[[["deterministicaeadencryptrequest",3]],["bool",15]],[[["deterministicaeadencryptresponse",3]],["bool",15]],[[["deterministicaeaddecryptrequest",3]],["bool",15]],[[["deterministicaeaddecryptresponse",3]],["bool",15]],[[["verifymacrequest",3]],["bool",15]],[[["computemacrequest",3]],["bool",15]],[[["computemacresponse",3]],["bool",15]],[[["computeprfrequest",3]],["bool",15]],[[["computeprfresponse",3]],["bool",15]],[[["signaturesignrequest",3]],["bool",15]],[[["signaturesignresponse",3]],["bool",15]],[[["signatureverifyrequest",3]],["bool",15]],null,[[],["outputprefixtype",4]],null,[[["outputprefixtype",4]],["option",4,[["ordering",4]]]],[[["keysetformat",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,[[["keysetpublicrequest",3]],["result",6,[["keysetresponse",3]]]],[[["keysetpublicrequest",3]],["result",6,[["keysetresponse",3]]]],null,[[["str",15]],["option",4,[["invocable",8]]]],[[["keysetformat",4]]],[[["keysetformat",4]]],[[["outputprefixtype",4]]],[[["signaturesignrequest",3]],["result",6,[["signaturesignresponse",3]]]],[[["signaturesignrequest",3]],["result",6,[["signaturesignresponse",3]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["keysetunbindrequest",3]],["result",6,[["keysetresponse",3]]]],[[["keysetunbindrequest",3]],["result",6,[["keysetresponse",3]]]],null,[[["signatureverifyrequest",3]],["result",6,[["signatureverifyresponse",3]]]],[[["signatureverifyrequest",3]],["result",6,[["signatureverifyresponse",3]]]],[[["verifymacrequest",3]],["result",6,[["verifymacresponse",3]]]],[[["verifymacrequest",3]],["result",6,[["verifymacresponse",3]]]],null,null,null,[[]],[[]],[[],["templateid",4]],[[]],[[]],[[],["usize",15]],[[["templateid",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["templateid",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[],["result",4,[["request",3,[["vec",3,[["u8",15]]]]],["oakerror",4]]]],[[],["result",4,[["response",3,[["vec",3,[["u8",15]]]]],["oakerror",4]]]],null,null,null,null,[[["response",3]],["result",4,[["oakerror",4]]]],[[["request",3,[["vec",3,[["u8",15]]]]]],["result",4,[["oakerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tag",3]],[[],["webassemblymoduletag",3]],[[],["webassemblymodulesignaturetag",3]],[[],["tlsendpointtag",3]],[[],["publickeyidentitytag",3]],[[],["top",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["tag",3]],[[],["webassemblymoduletag",3]],[[],["webassemblymodulesignaturetag",3]],[[],["tlsendpointtag",3]],[[],["publickeyidentitytag",3]],[[],["top",3]],[[],["result",4,[["tag",3]]]],[[],["result",4,[["webassemblymoduletag",3]]]],[[],["result",4,[["webassemblymodulesignaturetag",3]]]],[[],["result",4,[["tlsendpointtag",3]]]],[[],["result",4,[["publickeyidentitytag",3]]]],[[],["result",4,[["top",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["tag",3]],["bool",15]],[[["webassemblymoduletag",3]],["bool",15]],[[["webassemblymodulesignaturetag",3]],["bool",15]],[[["tlsendpointtag",3]],["bool",15]],[[["publickeyidentitytag",3]],["bool",15]],[[["top",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["tag",3]],["bool",15]],[[["webassemblymoduletag",3]],["bool",15]],[[["webassemblymodulesignaturetag",3]],["bool",15]],[[["tlsendpointtag",3]],["bool",15]],[[["publickeyidentitytag",3]],["bool",15]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["tag",4]],[[]],[[],["result",4,[["tag",4]]]],[[]],[[],["usize",15]],[[["tag",4]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["tag",4]],["bool",15]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["getroughtimerequest",3]],[[],["roughtime",3]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["getroughtimerequest",3]],["bool",15]],[[["roughtime",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["getroughtimerequest",3]],["result",6,[["roughtime",3]]]],[[["getroughtimerequest",3]],["result",6,[["roughtime",3]]]],[[]],[[]],[[]],[[]],[[["roughtime",3]],["bool",15]],null,[[["str",15]],["option",4,[["invocable",8]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["storagechannelbeginrequest",3]],["result",6,[["storagechannelbeginresponse",3]]]],[[["storagechannelbeginrequest",3]],["result",6,[["storagechannelbeginresponse",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["storageitem",3]],[[],["storagechannelreadrequest",3]],[[],["storagechannelreadresponse",3]],[[],["storagechannelwriterequest",3]],[[],["storagechannelwriteresponse",3]],[[],["storagechanneldeleterequest",3]],[[],["storagechanneldeleteresponse",3]],[[],["storagechannelbeginrequest",3]],[[],["storagechannelbeginresponse",3]],[[],["storagechannelcommitrequest",3]],[[],["storagechannelcommitresponse",3]],[[],["storagechannelrollbackrequest",3]],[[],["storagechannelrollbackresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["storagechannelbeginrequest",3]],["result",6,[["storagechannelcommitresponse",3]]]],[[["storagechannelbeginrequest",3]],["result",6,[["storagechannelcommitresponse",3]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["storagechanneldeleterequest",3]],["result",6,[["storagechanneldeleteresponse",3]]]],[[["storagechanneldeleterequest",3]],["result",6,[["storagechanneldeleteresponse",3]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["storageitem",3]],["bool",15]],[[["storagechannelreadrequest",3]],["bool",15]],[[["storagechannelreadresponse",3]],["bool",15]],[[["storagechannelwriterequest",3]],["bool",15]],[[["storagechannelwriteresponse",3]],["bool",15]],[[["storagechanneldeleterequest",3]],["bool",15]],[[["storagechanneldeleteresponse",3]],["bool",15]],[[["storagechannelbeginrequest",3]],["bool",15]],[[["storagechannelbeginresponse",3]],["bool",15]],[[["storagechannelcommitrequest",3]],["bool",15]],[[["storagechannelcommitresponse",3]],["bool",15]],[[["storagechannelrollbackrequest",3]],["bool",15]],[[["storagechannelrollbackresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["storageitem",3]],["bool",15]],[[["storagechannelreadrequest",3]],["bool",15]],[[["storagechannelreadresponse",3]],["bool",15]],[[["storagechannelwriterequest",3]],["bool",15]],[[["storagechanneldeleterequest",3]],["bool",15]],[[["storagechannelbeginrequest",3]],["bool",15]],[[["storagechannelbeginresponse",3]],["bool",15]],[[["storagechannelcommitrequest",3]],["bool",15]],[[["storagechannelrollbackrequest",3]],["bool",15]],[[["storagechannelreadrequest",3]],["result",6,[["storagechannelreadresponse",3]]]],[[["storagechannelreadrequest",3]],["result",6,[["storagechannelreadresponse",3]]]],[[["storagechannelrollbackrequest",3]],["result",6,[["storagechannelrollbackresponse",3]]]],[[["storagechannelrollbackrequest",3]],["result",6,[["storagechannelrollbackresponse",3]]]],[[["str",15]],["option",4,[["invocable",8]]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["storagechannelwriterequest",3]],["result",6,[["storagechannelwriteresponse",3]]]],[[["storagechannelwriterequest",3]],["result",6,[["storagechannelwriteresponse",3]]]],null,[[]],[[]],[[],["oakrng",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["u32",15]],[[],["u64",15]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["result",6,[["duration",3]]]],[[]],[[["roughtimeclientconfiguration",3]],["option",4,[["roughtime",3]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["result",6]],[[]],[[]],[[["storageproxyconfiguration",3]],["option",4,[["storage",3]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["result",6]]],"p":[[8,"CommandHandler"],[8,"WasmEntrypoint"],[4,"OakStatus"],[8,"WithInit"],[4,"ChannelReadStatus"],[4,"OakError"],[3,"ReadHandle"],[3,"WriteHandle"],[3,"Label"],[13,"ProtobufDecodeError"],[13,"ProtobufEncodeError"],[13,"OakStatus"],[13,"IoError"],[4,"KeysetFormat"],[3,"Crypto"],[4,"Code"],[4,"WriteMode"],[4,"ServerMethod"],[3,"Status"],[3,"ChannelResponseWriter"],[3,"GrpcRequest"],[3,"GrpcResponse"],[6,"Invocation"],[8,"ServerNode"],[8,"Invocable"],[13,"UnaryUnary"],[13,"UnaryStream"],[13,"StreamUnary"],[13,"StreamStream"],[3,"Sender"],[3,"Receiver"],[8,"HandleVisit"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"HeaderMap"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[8,"ReceiverExt"],[8,"SenderExt"],[8,"Decodable"],[8,"Encodable"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"HttpServerConfiguration"],[3,"HttpClientConfiguration"],[3,"ApplicationConfiguration"],[3,"ModuleSignature"],[3,"NodeConfiguration"],[3,"WebAssemblyConfiguration"],[3,"LogConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"CryptoConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[4,"ConfigType"],[13,"WasmConfig"],[13,"LogConfig"],[13,"StorageConfig"],[13,"GrpcServerConfig"],[13,"GrpcClientConfig"],[13,"RoughtimeClientConfig"],[13,"HttpServerConfig"],[13,"HttpClientConfig"],[13,"CryptoConfig"],[3,"OakCryptoClient"],[4,"KeysetFormat"],[4,"OutputPrefixType"],[3,"AeadEncryptRequest"],[3,"AeadDecryptRequest"],[3,"DeterministicAeadEncryptRequest"],[3,"DeterministicAeadDecryptRequest"],[8,"OakCrypto"],[3,"OakCryptoDispatcher"],[3,"KeyTemplate"],[3,"KeysetGenerateRequest"],[3,"KeysetResponse"],[3,"KeysetPublicRequest"],[3,"KeysetUnbindRequest"],[3,"KeysetBindRequest"],[3,"KeysetBindResponse"],[3,"KmsProxyRequest"],[3,"AeadEncryptResponse"],[3,"AeadDecryptResponse"],[3,"DeterministicAeadEncryptResponse"],[3,"DeterministicAeadDecryptResponse"],[3,"VerifyMacRequest"],[3,"VerifyMacResponse"],[3,"ComputeMacRequest"],[3,"ComputeMacResponse"],[3,"ComputePrfRequest"],[3,"ComputePrfResponse"],[3,"SignatureSignRequest"],[3,"SignatureSignResponse"],[3,"SignatureVerifyRequest"],[3,"SignatureVerifyResponse"],[4,"TemplateId"],[13,"TemplateData"],[13,"TemplateName"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[3,"TlsEndpointTag"],[3,"Tag"],[3,"WebAssemblyModuleTag"],[3,"WebAssemblyModuleSignatureTag"],[3,"PublicKeyIdentityTag"],[3,"Top"],[4,"Tag"],[13,"WebAssemblyModuleTag"],[13,"WebAssemblyModuleSignatureTag"],[13,"TlsEndpointTag"],[13,"PublicKeyIdentityTag"],[13,"TopTag"],[3,"RoughtimeServiceClient"],[3,"RoughtimeServiceDispatcher"],[3,"GetRoughtimeRequest"],[3,"Roughtime"],[8,"RoughtimeService"],[3,"StorageServiceClient"],[8,"StorageService"],[3,"StorageServiceDispatcher"],[3,"StorageItem"],[3,"StorageChannelReadRequest"],[3,"StorageChannelReadResponse"],[3,"StorageChannelWriteRequest"],[3,"StorageChannelWriteResponse"],[3,"StorageChannelDeleteRequest"],[3,"StorageChannelDeleteResponse"],[3,"StorageChannelBeginRequest"],[3,"StorageChannelBeginResponse"],[3,"StorageChannelCommitRequest"],[3,"StorageChannelCommitResponse"],[3,"StorageChannelRollbackRequest"],[3,"StorageChannelRollbackResponse"],[3,"OakRng"],[3,"Roughtime"],[3,"Storage"]]},\
"oak_abi":{"doc":"Type, constant and Wasm host function definitions for the …","t":[6,17,6,6,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,0,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,3,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["Handle","INVALID_HANDLE","NodeMain","NodeMainC","OAK_CHALLENGE","OAK_LABEL_GRPC_METADATA_KEY","OAK_LABEL_HTTP_JSON_KEY","OAK_LABEL_HTTP_PROTOBUF_KEY","OAK_SIGNED_CHALLENGE_GRPC_METADATA_KEY","OAK_SIGNED_CHALLENGE_HTTP_JSON_KEY","OAK_SIGNED_CHALLENGE_HTTP_PROTOBUF_KEY","SPACE_BYTES_PER_HANDLE","channel_close","channel_create","channel_create_with_downgrade","channel_label_read","channel_read","channel_read_with_downgrade","channel_write","channel_write_with_downgrade","handle_clone","label","node_create","node_create_with_downgrade","node_label_read","node_privilege_read","proto","random_get","wait_on_channels","wait_on_channels_with_downgrade","confidentiality_label","public_key_identity_tag","tls_endpoint_tag","top","web_assembly_module_signature_tag","web_assembly_module_tag","oak","ChannelReadStatus","ErrBadHandle","ErrBufferTooSmall","ErrChannelClosed","ErrChannelEmpty","ErrHandleSpaceTooSmall","ErrInternal","ErrInvalidArgs","ErrOutOfRange","ErrPermissionDenied","ErrTerminated","InvalidChannel","NotReady","OakStatus","Ok","Orphaned","PermissionDenied","ReadReady","Unspecified","application","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","fmt","from","from","from_i32","from_i32","hash","hash","identity","into","into","is_valid","is_valid","label","partial_cmp","partial_cmp","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ApplicationConfiguration","ConfigMap","CryptoConfiguration","GrpcClientConfiguration","GrpcServerConfiguration","HttpClientConfiguration","HttpServerConfiguration","LogConfiguration","ModuleSignature","NodeConfiguration","RoughtimeClientConfiguration","RoughtimeServer","StorageProxyConfiguration","WebAssemblyConfiguration","address","address","address","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config_type","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","host","initial_node_configuration","into","into","into","into","into","into","into","into","into","into","into","into","into","into","items","max_radius_microseconds","min_overlapping_intervals","module_hash","module_signatures","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","node_configuration","port","public_key","public_key_base64","server_retries","servers","signed_hash","timeout_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","wasm_entrypoint_name","wasm_module_name","wasm_modules","ConfigType","CryptoConfig","GrpcClientConfig","GrpcServerConfig","HttpClientConfig","HttpServerConfig","LogConfig","RoughtimeClientConfig","StorageConfig","WasmConfig","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","SignedChallenge","borrow","borrow_mut","clear","clone","clone_into","default","deserialize","encoded_len","eq","fmt","from","into","ne","public_key","serialize","signed_hash","to_owned","try_from","try_into","type_id","Label","PublicKeyIdentityTag","Tag","TlsEndpointTag","Top","WebAssemblyModuleSignatureTag","WebAssemblyModuleTag","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confidentiality_tags","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","flows_to","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","integrity_tags","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","public_key","public_key","public_untrusted","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","web_assembly_module_hash_sha_256","PublicKeyIdentityTag","Tag","TlsEndpointTag","TopTag","WebAssemblyModuleSignatureTag","WebAssemblyModuleTag","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","hash","into","merge","ne","serialize","to_owned","try_from","try_into","type_id","0","0","0","0","0"],"q":["oak_abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::label","","","","","","oak_abi::proto","oak_abi::proto::oak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::applicationoak_abi::proto::oak::application::node_configuration","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::application::node_configuration::ConfigType","","","","","","","","","oak_abi::proto::oak::identity","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::label::tag","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::label::tag::Tag","","","",""],"d":["Handle used to identify read or write channel halves.","Invalid handle value.","Expected Rust type for a Node entrypoint.","Expected type for a Node entrypoint that is exposed as a …","","The key used for protobuf encoded Label in gRPC metadata.","The HTTP header key used for JSON encoded Label in HTTP …","The HTTP header key used for protobuf encoded Label in …","The key used for protobuf encoded signed authentication …","The HTTP header key used for JSON encoded signed …","The HTTP header key used for protobuf encoded signed …","Number of bytes needed per-handle for channel readiness …","Closes the channel identified by <code>handle</code>.","Create a new unidirectional Channel.","The same as <code>channel_create</code>, but also applies the current …","Returns the label for the channel identified by <code>handle</code>.","Read a message from a channel.","The same as <code>channel_read</code>, but also applies the current Node…","Write a message to a channel.","The same as <code>channel_write</code>, but also applies the current …","Create a new distinct handle to the same channel as <code>handle</code>.","Labels represent the kinds of information that is allowed …","Creates a new Node instance running code identified by a …","The same as <code>node_create</code>, but also applies the current Node…","Returns the label of the current calling Node.","Returns a label indicating the downgrade privilege of the …","","Fill a buffer with random data.","Wait for channels to be ready for reading.","The same as <code>wait_on_channels</code>, but also applies the current …","Convenience function for creating labels with a single …","Creates a <code>Tag</code> having as principal the provided …","Creates a <code>Tag</code> having as principal the provided TLS …","Convenience function for creating the top tag.","Creates a <code>Tag</code> having as principal the provided WebAssembly …","Creates a <code>Tag</code> having as principal the provided WebAssembly …","","Single byte values used to indicate the read status of a …","Invalid handle provided.","Provided buffer was too small for operation (an output …","Channel has been closed.","Channel has no messages available to read.","Provided handle space was too small for operation (an …","Internal error.","Arguments invalid.","Argument out of valid range.","The node does not have sufficient permissions to perform …","Node terminated.","Channel handle does not identify the read half of a …","No pending messages available on channel.","Status values exchanged as i32 values across the Node Wasm …","Success.","Channel has no extant write halves (and is empty).","A node trying to access the channel does not have the …","Pending message available on channel.","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OakStatus</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>ChannelReadStatus</code>, or <code>None</code> if <code>value</code> …","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OakStatus</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ChannelReadStatus</code>.","","","","","","","","","","","","","An ApplicationConfiguration represents a unit of …","A serialized list of key-value pairs that are specified as …","CryptoConfiguration describes the configuration of a …","GrpcClientConfiguration describes the configuration of a …","GrpcServerConfiguration describes the configuration of a …","HttpClientConfiguration describes the configuration of an …","HttpServerConfiguration describes the configuration of an …","LogConfiguration describes the configuration of a logging …","Bundled signature of the SHA-256 hash of a Wasm module. …","NodeConfiguration indicates the configuration of a created …","RoughtimeClientConfiguration describes the configuration …","Information to identify a particular Roughtime server. …","StorageProxyConfiguration describes the configuration of a …","WebAssemblyConfiguration describes the configuration of a …","The address of the external storage provider.","The endpoint address for the gRPC server to listen on. …","The endpoint address for the HTTP server to listen on. …","The authority supported by this client. The authority must …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indication of what configuration the initial Node should …","","","","","","","","","","","","","","","","","Connection parameters; default values will be used if any …","","The bundled signatures for validating Wasm module hashes.","","","","","","","","","","","","","","Nested message and enum types in <code>NodeConfiguration</code>.","","","","","The collection of Roughtime servers to query. A default …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The URI component of a gRPC server endpoint. Must contain …","The name of an exported WebAssembly function to invoke as …","The name of one of the entries in the …","Map from Wasm module names to their bytecode …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Response from the client to a signing challenge. The …","","","","","","","","","","","","","","Public key as a binary DER-encoded <code>SubjectPublicKeyInfo</code> …","","","","","","","Label represents information flowing through a Node or …","Policies related to identities, specified using a …","Tag represents a category of confidentiality or integrity …","Policies related to HTTPS communication.","Message representing top element of the principal lattice. …","Policies related to modules, referring to the signature of …","Policies related to modules, referring to the native …","The TLS authority (host:port) of the remote endpoint, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the label from bytes.","","","","","","","","","","","","","","","","","","","","","","Compare two labels according to the lattice structure: L_0 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public key counterpart of the private key used to sign …","Public key counterpart of the private key that is used to …","Return the least privileged label.","","Convert a label to bytes.","","","","","","","Nested message and enum types in <code>Tag</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The attestation for a single WebAssembly module, a SHA256 …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,0,1,2,2,2,1,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,0,1,2,1,2,0,1,2,1,2,1,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,6,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,9,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,15,7,7,8,9,10,11,3,4,12,13,5,6,14,15,16,16,13,13,8,7,15,7,8,9,10,3,4,12,13,5,6,15,16,0,15,8,15,13,13,8,13,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,12,10,10,7,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,19,20,21,22,23,24,25,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,28,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,30,31,32,28,33,32,33,29,29,29,30,31,32,28,33,34,0,30,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,31,35,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,37,38,39,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tag",3]],["label",3]],[[],["tag",3]],[[["str",15]],["tag",3]],[[],["tag",3]],[[],["tag",3]],[[],["tag",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["oakstatus",4]],[[],["channelreadstatus",4]],[[]],[[]],[[["oakstatus",4]],["ordering",4]],[[["channelreadstatus",4]],["ordering",4]],[[],["oakstatus",4]],[[],["channelreadstatus",4]],[[["oakstatus",4]],["bool",15]],[[["channelreadstatus",4]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["oakstatus",4]]]],[[["i32",15]],["option",4,[["channelreadstatus",4]]]],[[]],[[]],null,[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,[[["oakstatus",4]],["option",4,[["ordering",4]]]],[[["channelreadstatus",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["applicationconfiguration",3]],[[],["modulesignature",3]],[[],["nodeconfiguration",3]],[[],["webassemblyconfiguration",3]],[[],["logconfiguration",3]],[[],["storageproxyconfiguration",3]],[[],["grpcserverconfiguration",3]],[[],["grpcclientconfiguration",3]],[[],["roughtimeclientconfiguration",3]],[[],["httpserverconfiguration",3]],[[],["httpclientconfiguration",3]],[[],["cryptoconfiguration",3]],[[],["roughtimeserver",3]],[[],["configmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["applicationconfiguration",3]],["bool",15]],[[["modulesignature",3]],["bool",15]],[[["nodeconfiguration",3]],["bool",15]],[[["webassemblyconfiguration",3]],["bool",15]],[[["logconfiguration",3]],["bool",15]],[[["storageproxyconfiguration",3]],["bool",15]],[[["grpcserverconfiguration",3]],["bool",15]],[[["grpcclientconfiguration",3]],["bool",15]],[[["roughtimeclientconfiguration",3]],["bool",15]],[[["httpserverconfiguration",3]],["bool",15]],[[["httpclientconfiguration",3]],["bool",15]],[[["cryptoconfiguration",3]],["bool",15]],[[["roughtimeserver",3]],["bool",15]],[[["configmap",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["applicationconfiguration",3]],["bool",15]],[[["modulesignature",3]],["bool",15]],[[["nodeconfiguration",3]],["bool",15]],[[["webassemblyconfiguration",3]],["bool",15]],[[["storageproxyconfiguration",3]],["bool",15]],[[["grpcserverconfiguration",3]],["bool",15]],[[["grpcclientconfiguration",3]],["bool",15]],[[["roughtimeclientconfiguration",3]],["bool",15]],[[["httpserverconfiguration",3]],["bool",15]],[[["httpclientconfiguration",3]],["bool",15]],[[["roughtimeserver",3]],["bool",15]],[[["configmap",3]],["bool",15]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["configtype",4]],[[]],[[]],[[],["usize",15]],[[["configtype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["configtype",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["signedchallenge",3]],[[]],[[]],[[],["result",4]],[[],["usize",15]],[[["signedchallenge",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["signedchallenge",3]],["bool",15]],null,[[],["result",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["label",3]],[[],["tag",3]],[[],["webassemblymoduletag",3]],[[],["webassemblymodulesignaturetag",3]],[[],["tlsendpointtag",3]],[[],["publickeyidentitytag",3]],[[],["top",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["label",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["webassemblymoduletag",3]],["bool",15]],[[["webassemblymodulesignaturetag",3]],["bool",15]],[[["tlsendpointtag",3]],["bool",15]],[[["publickeyidentitytag",3]],["bool",15]],[[["top",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["label",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["webassemblymoduletag",3]],["bool",15]],[[["webassemblymodulesignaturetag",3]],["bool",15]],[[["tlsendpointtag",3]],["bool",15]],[[["publickeyidentitytag",3]],["bool",15]],null,null,[[]],[[],["result",4]],[[],["vec",3,[["u8",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["tag",4]],[[]],[[],["result",4]],[[]],[[],["usize",15]],[[["tag",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["tag",4]],["bool",15]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null],"p":[[4,"OakStatus"],[4,"ChannelReadStatus"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"HttpServerConfiguration"],[3,"HttpClientConfiguration"],[3,"ApplicationConfiguration"],[3,"ModuleSignature"],[3,"NodeConfiguration"],[3,"WebAssemblyConfiguration"],[3,"LogConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"CryptoConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[4,"ConfigType"],[13,"WasmConfig"],[13,"LogConfig"],[13,"StorageConfig"],[13,"GrpcServerConfig"],[13,"GrpcClientConfig"],[13,"RoughtimeClientConfig"],[13,"HttpServerConfig"],[13,"HttpClientConfig"],[13,"CryptoConfig"],[3,"SignedChallenge"],[3,"TlsEndpointTag"],[3,"Label"],[3,"Tag"],[3,"WebAssemblyModuleTag"],[3,"WebAssemblyModuleSignatureTag"],[3,"PublicKeyIdentityTag"],[3,"Top"],[4,"Tag"],[13,"WebAssemblyModuleTag"],[13,"WebAssemblyModuleSignatureTag"],[13,"TlsEndpointTag"],[13,"PublicKeyIdentityTag"],[13,"TopTag"]]},\
"oak_app_build":{"doc":"An utility for building an Oak application from a manifest …","t":[17,3,13,4,3,3,4,17,3,13,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,12,11,11,11,11,11,11,11,5,5,5,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,5,12,12,12,12],"n":["CACHE_DIRECTORY","External","External","FileLocation","InitialNodeConfig","Manifest","Module","OUTPUT_DIRECTORY","Opt","Path","Path","SignatureManifest","Url","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clone","clone_into","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","download_file_from_url","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_clap","get_module_cache_path","get_output_file_path","get_sha256","initial_node_configuration","into","into","into","into","into","into","into","load_file_from_location","load_module","main","manifest_path","modules","name","sha256","signature_manifests","signatures","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wasm_entrypoint_name","wasm_module_name","write_config_to_file","0","0","0","0"],"q":["oak_app_build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_app_build::FileLocation","","oak_app_build::Module",""],"d":["Directory used to save downloaded Wasm modules.","","","","","","","Directory used to save build artifacts.","Command line options for the Oak Application builder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Download file from <code>url</code>.","","","","","","","","","","","","","","","","Get path for caching a downloaded file in <code>CACHE_DIRECTORY</code>. …","Get path for the output application file in …","Computes SHA256 sum from <code>data</code> and returns it as a HEX …","","","","","","","","","Loads a file from the file path or URL specified in the …","Load Wasm module from file or URL if specified. If the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Serializes an application configuration from <code>app_config</code> …","","","",""],"i":[0,0,1,0,0,0,0,0,0,1,2,0,2,3,4,1,5,6,7,2,3,4,1,5,6,7,2,3,3,3,6,4,1,5,6,7,2,0,3,4,1,5,6,7,2,3,4,1,5,6,7,2,3,0,0,0,4,3,4,1,5,6,7,2,0,0,0,3,4,4,5,4,7,3,3,4,1,5,6,7,2,3,4,1,5,6,7,2,3,4,1,5,6,7,2,5,3,4,1,5,6,7,2,6,6,0,8,9,10,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["path",3],["str",15]],["pathbuf",3]],[[["path",3],["str",15]],["pathbuf",3]],[[],["string",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["filelocation",4]]],[[["path",3],["module",4]]],[[],["result",6]],null,null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["applicationconfiguration",3],["path",3]],["result",6]],null,null,null,null],"p":[[4,"Module"],[4,"FileLocation"],[3,"Opt"],[3,"Manifest"],[3,"External"],[3,"InitialNodeConfig"],[3,"SignatureManifest"],[13,"Path"],[13,"Url"],[13,"Path"],[13,"External"]]},\
"oak_async":{"doc":"","t":[3,3,16,8,5,11,11,11,11,11,11,11,0,11,11,11,11,11,10,11,11,5,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ChannelRead","ChannelReadStream","Message","ReceiverAsync","block_on","borrow","borrow","borrow_mut","borrow_mut","drop","from","from","grpc","into","into","into_future","poll","poll_next","receive_async","receive_stream","receive_stream","run_command_loop","try_from","try_from","try_into","try_into","try_poll","try_poll_next","type_id","type_id","GrpcRequestStream","MultiWriter","OneshotWriter","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","close_error","close_error","drop","drop","from","from","from","into","into","into","into_inner","into_inner","poll_next","send","send","try_from","try_from","try_from","try_into","try_into","try_into","try_poll_next","type_id","type_id","type_id"],"q":["oak_async","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_async::grpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["<code>Future</code> representing an asynchronous read from a channel.","<code>Stream</code> representing a sequence of asynchronous reads from …","","Extension trait to allow asynchronous reads from a <code>Receiver</code>…","Block the current thread until the provided <code>Future</code> has …","","","","","","","","gRPC related types for asynchronous processing.","","","","","","Asynchronously receive a message.","Asynchronously receive multiple messages.","Asynchronously receive multiple messages.","Process the stream of messages coming in on <code>receiver</code> using …","","","","","","","","","A streaming gRPC client request.","Writes multiple messages to a gRPC response channel, …","Writes exactly one message on a gRPC response channel, …","","","","","","","Closes the channel with the given error code and message.","Closes the channel with the given error code and message.","Close the channel with an <code>Unknown</code> status if no message was …","Close the channel with an <code>Ok</code> status.","","","","","","","Consumes this writer, returning a <code>ChannelResponseWriter</code> in …","Consumes this writer, returning a <code>ChannelResponseWriter</code> in …","","Send the response, automatically closing the channel.","Send a response to the channel.","","","","","","","","","",""],"i":[0,0,1,0,0,2,3,2,3,2,2,3,0,2,3,2,2,3,1,1,1,0,2,3,2,3,2,3,2,3,0,0,0,4,5,6,4,5,6,4,5,4,5,4,5,6,4,5,6,4,5,6,4,5,4,5,6,4,5,6,6,4,5,6],"f":[null,null,null,null,[[["future",8]],["result",4,[["oakstatus",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[],["channelread",3]],[[],["channelreadstream",3]],[[],["channelreadstream",3]],[[["receiver",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[["code",4],["asref",8,[["str",15]]]],["result",4,[["oakerror",4]]]],[[["code",4],["asref",8,[["str",15]]]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["channelresponsewriter",3]],[[],["channelresponsewriter",3]],[[["pin",3],["context",3]],["poll",4,[["option",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4,[["oakerror",4]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[8,"ReceiverAsync"],[3,"ChannelRead"],[3,"ChannelReadStream"],[3,"OneshotWriter"],[3,"MultiWriter"],[3,"GrpcRequestStream"]]},\
"oak_attestation_common":{"doc":"","t":[0,5,0,0,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,12],"n":["certificate","get_sha256","keying_material","report","AddTeeExtension","CertificateAuthority","No","Yes","borrow","borrow","borrow_mut","borrow_mut","create","eq","from","from","get_private_key_pem","get_root_certificate_pem","into","into","key_pair","ne","root_certificate","sign_certificate","try_from","try_from","try_into","try_into","type_id","type_id","0","Assertion","KeyingMaterial","KeyingMaterialBundle","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_keying_material","clone","clone","clone_into","clone_into","deserialize","deserialize","eq","export","from","from","from","from_string","generate","into","into","into","ne","serialize","serialize","server_keying_material","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify","AttestationInfo","Report","TEE_EXTENSION_OID","borrow","borrow","borrow_mut","borrow_mut","certificate","data","default","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from_string","into","into","measurement","ne","ne","new","platform_version","report","serialize","serialize","signature","svn","to_extension","to_string","try_from","try_from","try_into","try_into","type_id","type_id","verify","version"],"q":["oak_attestation_common","","","","oak_attestation_common::certificate","","","","","","","","","","","","","","","","","","","","","","","","","","oak_attestation_common::certificate::AddTeeExtension","oak_attestation_common::keying_material","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_attestation_common::report","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Computes a SHA-256 digest of <code>input</code> and returns it in a …","","","Indicator whether to add a custom TEE extension to a …","Convenience structure for generating X.509 certificates. …","","Enum value contains a PEM encoded TEE Provider’s X.509 …","","","","","Generates a root X.509 certificate and a corresponding …","","","","Get RSA key pair encoded in PEM format. …","Get a root X.509 certificate encoded in PEM format. …","","","","","","Generates an X.509 certificate based on the certificate …","","","","","","","","Assertion used for remote attestation.","Value uniquely derived from the TLS master secret that is …","Convenience structure for exporting keying material with …","","","","","","","","","","","","","","","","","","","","Generates assertion by putting <code>keying_material</code> into a TEE …","","","","","","","","","","","","","","","","","","","","Verify remote attestation assertion by verifying the TEE …","Convenience struct for representing X.509 TEE extensions …","Placeholder implementation of TEE report for remote …","","","","","","Provider’s PEM encoded X.509 certificate that signs TEE …","Arbitrary data to put into the TEE report.","","","","","","","","","","","","","","TEE measurement, i.e. VM hash.","","","Placeholder function for collecting TEE measurement of …","The installed version of firmware.","TEE report.","","","Signature of this report.","Security version number of SNP firmware.","Serializes <code>AttestationInfo</code> into a custom <code>X509Extension</code>.","","","","","","","","Verifies that <code>AttestationInfo::report</code> is signed by …","Version number of this attestation report."],"i":[0,0,0,0,0,0,1,1,2,1,2,1,2,1,2,1,2,2,2,1,2,1,2,2,2,1,2,1,2,1,3,0,0,0,4,5,6,4,5,6,6,5,6,5,6,4,5,5,6,4,5,6,4,4,4,5,6,5,4,5,6,5,6,4,4,5,6,4,5,6,4,5,6,4,0,0,0,7,8,7,8,8,7,7,8,7,8,7,8,7,8,7,8,8,7,8,7,7,8,7,7,8,7,8,7,7,8,8,7,8,7,8,7,8,8,7],"f":[null,[[],["vec",3,[["u8",15]]]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["addteeextension",4]],["result",6]],[[["addteeextension",4]],["bool",15]],[[]],[[]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[]],[[]],null,[[["addteeextension",4]],["bool",15]],null,[[["x509req",3],["addteeextension",4]],["result",6,[["x509",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["keyingmaterial",3]],[[],["keyingmaterialbundle",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["keyingmaterial",3]],["bool",15]],[[["session",8]],["result",6]],[[]],[[]],[[]],[[["str",15]],["result",6]],[[["keyingmaterial",3]],["result",6]],[[]],[[]],[[]],[[["keyingmaterial",3]],["bool",15]],[[],["result",4]],[[],["result",4]],null,[[]],[[]],[[],["result",6,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["keyingmaterial",3]],["result",6]],null,null,null,[[]],[[]],[[]],[[]],null,null,[[],["report",3]],[[],["attestationinfo",3]],[[],["result",4]],[[],["result",4]],[[["report",3]],["bool",15]],[[["attestationinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],["result",6]],[[]],[[]],null,[[["report",3]],["bool",15]],[[["attestationinfo",3]],["bool",15]],[[]],null,null,[[],["result",4]],[[],["result",4]],null,null,[[],["result",6,[["x509extension",3]]]],[[],["result",6,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],null],"p":[[4,"AddTeeExtension"],[3,"CertificateAuthority"],[13,"Yes"],[3,"Assertion"],[3,"KeyingMaterial"],[3,"KeyingMaterialBundle"],[3,"Report"],[3,"AttestationInfo"]]},\
"oak_client":{"doc":"Helper library for connecting to Oak from clients.","t":[0,5,0,5,5,5,3,0,11,11,11,11,11,5,11,11,11,0,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["attestation","create_tls_channel","interceptors","create_attested_grpc_channel","create_attested_https_client","create_tls_attestation_config","CombinedInterceptor","auth","borrow","borrow_mut","call","clone","clone_into","combine","from","into","into_request","label","to_owned","try_from","try_into","type_id","vzip","AuthInterceptor","borrow","borrow_mut","call","clone","clone_into","create","from","into","into_request","to_owned","try_from","try_into","type_id","vzip","LabelInterceptor","borrow","borrow_mut","call","clone","clone_into","create","from","into","into_request","to_owned","try_from","try_into","type_id","vzip"],"q":["oak_client","","","oak_client::attestation","","","oak_client::interceptors","","","","","","","","","","","","","","","","","oak_client::interceptors::auth","","","","","","","","","","","","","","","oak_client::interceptors::label","","","","","","","","","","","","","",""],"d":["","Creates a TLS channel for connecting to Oak.","","Creates a gRPC channel to a TEE service specified by [<code>uri</code>] …","Creates an HTTPS client which checks that X.509 TEE …","Creates client TLS configuration with a custom X.509 …","This struct is created by the <code>combine</code> method. See its …","","","","","","","Combines the two provided interceptor, executing the first …","","","","","","","","","","Intercepts gRPC requests and authenticates the client with …","","","","","","","","","","","","","","","Intercepts gRPC requests and adds the same <code>label</code> as a gRPC …","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,[[["uri",3]]],null,[[["uri",3]]],[[]],[[],["result",6,[["clientconfig",3]]]],null,null,[[]],[[]],[[["request",3]],["result",4,[["request",3],["status",3]]]],[[],["combinedinterceptor",3]],[[]],[[["interceptor",8],["interceptor",8]],["combinedinterceptor",3,[["interceptor",8],["interceptor",8]]]],[[]],[[]],[[],["request",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["request",3]],["result",4,[["request",3],["status",3]]]],[[],["authinterceptor",3]],[[]],[[["keypair",3]]],[[]],[[]],[[],["request",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["request",3]],["result",4,[["request",3],["status",3]]]],[[],["labelinterceptor",3]],[[]],[[["label",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"CombinedInterceptor"],[3,"AuthInterceptor"],[3,"LabelInterceptor"]]},\
"oak_derive":{"doc":"","t":[24],"n":["HandleVisit"],"q":["oak_derive"],"d":["Automatically derives the <code>HandleVisit</code> trait for structs …"],"i":[0],"f":[null],"p":[]},\
"oak_functions":{"doc":"SDK functionality that provides idiomatic Rust wrappers …","t":[5,14,5,5,5,5,5,5,5,5],"n":["alloc","log","read_request","report_event","report_metric","result_from_status","storage_get_item","tf_model_infer","write_log_message","write_response"],"q":["oak_functions","","","","","","","","",""],"d":["","Logs a debug message.","Reads and returns the user request.","Reports an event for a count-based metrics bucket.","Reports a metric value for a sum-based metrics bucket.","Convert a status returned from a host function call to a …","Looks up an item from the in-memory lookup store.","Uses the TensorFlow model to perform inference for the …","Writes a debug log message.","Write the response."],"i":[0,0,0,0,0,0,0,0,0,0],"f":[[[["u32",15]]],null,[[],["result",4,[["vec",3,[["u8",15]]],["oakstatus",4]]]],[[["asref",8,[["str",15]]]],["result",4,[["oakstatus",4]]]],[[["asref",8,[["str",15]]],["i64",15]],["result",4,[["oakstatus",4]]]],[[["i32",15]],["result",4,[["oakstatus",4]]]],[[],["result",4,[["option",4,[["vec",3,[["u8",15]]]]],["oakstatus",4]]]],[[],["result",4,[["inference",3],["oakstatus",4]]]],[[["asref",8,[["str",15]]]],["result",4,[["oakstatus",4]]]],[[],["result",4,[["oakstatus",4]]]]],"p":[]},\
"oak_functions_abi":{"doc":"Type, constant and Wasm host function definitions for the …","t":[5,5,5,0,5,5,5,5,5,5,13,13,13,13,13,4,13,13,13,4,3,3,13,13,13,13,13,3,13,13,4,13,13,13,3,3,3,3,4,13,13,13,13,13,13,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["channel_read","channel_wait","channel_write","proto","read_request","report_metric","storage_get_item","tf_model_infer","write_log_message","write_response","BadRequest","ChannelEmpty","ChannelEndpointClosed","ChannelEndpointDisconnected","ChannelFull","ChannelHandle","ChannelHandleInvalid","ChannelInvalidArgs","ChannelOk","ChannelStatus","ConfigurationInfo","Entry","ErrBadTensorFlowModelInput","ErrInternal","ErrInvalidArgs","ErrStorageItemNotFound","ErrTensorFlowModelNotFound","Inference","InternalServerError","LookupData","OakStatus","Ok","PolicySizeViolation","PolicyTimeViolation","PrivateMetricsConfig","Request","Response","ServerPolicy","StatusCode","Success","Testing","Unspecified","Unspecified","Unspecified","Unspecified","batch_size","body","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","constant_processing_time_ms","constant_response_size_bytes","create","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","epsilon","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","from_i32","from_i32","hash","hash","hash","hash","inference_vec","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","is_valid","is_valid","key","length","metrics","ml_inference","ne","ne","ne","ne","ne","ne","ne","partial_cmp","partial_cmp","partial_cmp","partial_cmp","policy","set_status","shape","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","wasm_hash"],"q":["oak_functions_abi","","","","","","","","","","oak_functions_abi::protod":["Allocates a buffer on the callers memory to write a …","Waits until at least one of the channels from the channel …","Writes a message, i.e., <code>src_buf_len</code> bytes, from <code>scr_buf_ptr</code>…","","See <code>read_request</code>.","See <code>report_metric</code>.","See <code>storage_get_item</code>.","See <code>tf_model_infer</code>.","See <code>write_log_message</code>.","See <code>write_response</code>.","Indicates a problem with the request. Similar to HTTP 400 …","Channel is empty.","The sending endpoint of a channel is closed.","The receiving endpoint of a channel is disconnected.","Channel is full.","A ChannelHandle corresonds to a channel. The Endpoint …","ChannelNumber not in range of ChannelHandle and or if no …","Writing message from channel to Wasm memory failed.","Success.","A read, write, or wait on a channel returns a …","Configuration information that should be provided to the …","An individual entry to be made available for lookup to an …","Error when running the TensorFlow model, due to bad input …","Internal error.","Arguments invalid.","Lookup storage item not found.","TensorFlow model not found.","The inference from a TensorFlow model, containing an …","Indicates other internal errors at the server. Similar to …","Handle for an extension to look up a key in the lookup …","Status values exchanged as i32 values across the Node Wasm …","Success.","Indicates violation of the response size limit specified …","Indicates violation of the response processing-time limit …","Configuration for differentially private metrics.","Represents a request sent to an Oak Functions application. …","Represents the response from an Oak Functions application. …","","Status codes for the response.","Indicates success of the operation. Similar to HTTP 200 …","Handle for an extension used for testing Wasm modules.","","","","","The number of requests that will be aggregated into each …","Returns the body of the response, excluding any trailing …","The body of the request.","The body of the response generated by the Wasm module, in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A fixed response time, in milliseconds.","A fixed size for responses returned by the trusted runtime.","Creates a new instance of Response.","","","","","","","","","","","","","","","","","","","The privacy budget.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>ChannelStatus</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>ChannelHandle</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>OakStatus</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>StatusCode</code>, or <code>None</code> if <code>value</code> is not a …","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>ChannelStatus</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ChannelHandle</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>OakStatus</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>StatusCode</code>.","","The effective length of the body, excluding any trailing …","Server-side configuration for differentially private …","Whether machine learning inference using a TensorFlow …","","","","","","","","","","","","The validated server-side policy.","Sets <code>status</code> to the provided enum value.","","Returns the enum value of <code>status</code>, or the default if the …","Status code indicating the success or failure of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Hash of the loaded Wasm module."],"i":[0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,0,2,2,2,0,0,0,3,3,3,3,3,0,1,4,0,3,1,1,0,0,0,0,0,1,4,2,4,3,1,5,6,7,6,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,11,7,6,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,4,3,11,7,6,1,2,4,3,1,10,10,6,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,11,7,6,5,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,2,4,3,11,7,6,1,2,4,3,1,2,4,3,1,8,8,9,10,5,2,4,3,11,7,6,1,2,4,3,1,11,6,9,9,8,9,10,5,11,7,6,2,4,3,1,9,6,8,6,6,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,4,3,11,7,6,1,8,9,10,5,2,4,3,11,7,6,1,11,9],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4,[["tryfrominterror",3]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inference",3]],[[],["configurationinfo",3]],[[],["serverpolicy",3]],[[],["privatemetricsconfig",3]],[[],["channelstatus",4]],[[],["channelhandle",4]],[[],["oakstatus",4]],[[],["entry",3]],[[],["request",3]],[[],["response",3]],[[],["statuscode",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channelstatus",4]],["ordering",4]],[[["channelhandle",4]],["ordering",4]],[[["oakstatus",4]],["ordering",4]],[[["statuscode",4]],["ordering",4]],null,null,[[["statuscode",4],["vec",3,[["u8",15]]]]],[[]],[[]],[[]],[[]],[[],["channelstatus",4]],[[],["channelhandle",4]],[[],["oakstatus",4]],[[]],[[]],[[]],[[],["statuscode",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[["inference",3]],["bool",15]],[[["configurationinfo",3]],["bool",15]],[[["serverpolicy",3]],["bool",15]],[[["privatemetricsconfig",3]],["bool",15]],[[["channelstatus",4]],["bool",15]],[[["channelhandle",4]],["bool",15]],[[["oakstatus",4]],["bool",15]],[[["entry",3]],["bool",15]],[[["request",3]],["bool",15]],[[["response",3]],["bool",15]],[[["statuscode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["oakstatus",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["channelstatus",4]]]],[[["i32",15]],["option",4,[["channelhandle",4]]]],[[["i32",15]],["option",4,[["oakstatus",4]]]],[[["i32",15]],["option",4,[["statuscode",4]]]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,null,null,null,[[["inference",3]],["bool",15]],[[["configurationinfo",3]],["bool",15]],[[["serverpolicy",3]],["bool",15]],[[["privatemetricsconfig",3]],["bool",15]],[[["entry",3]],["bool",15]],[[["request",3]],["bool",15]],[[["response",3]],["bool",15]],[[["channelstatus",4]],["option",4,[["ordering",4]]]],[[["channelhandle",4]],["option",4,[["ordering",4]]]],[[["oakstatus",4]],["option",4,[["ordering",4]]]],[[["statuscode",4]],["option",4,[["ordering",4]]]],null,[[["statuscode",4]]],null,[[],["statuscode",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[4,"StatusCode"],[4,"ChannelStatus"],[4,"OakStatus"],[4,"ChannelHandle"],[3,"PrivateMetricsConfig"],[3,"Response"],[3,"Request"],[3,"Inference"],[3,"ConfigurationInfo"],[3,"ServerPolicy"],[3,"Entry"]]},\
"oak_functions_client":{"doc":"","t":[3,0,11,11,11,11,11,11,11,0,11,11,11,11,6,5,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Client","attestation","borrow","borrow_mut","from","into","into_request","invoke","new","proto","try_from","try_into","type_id","vzip","ConfigurationVerifier","into_server_identity_verifier","StreamingRequest","StreamingResponse","body","body","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","ne","ne","streaming_session_client","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StreamingSessionClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","into","into_request","new","send_gzip","stream","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["oak_functions_client","","","","","","","","","","","","","","oak_functions_client::attestation","","oak_functions_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_client::proto::streaming_session_client","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Creates a <code>ServerIdentityVerifier</code> from the given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","","","","Compress requests with <code>gzip</code>.","Creates a message stream for session key negotiation and …","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,0,1,1,1,1,0,0,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,2,3,2,3,2,3,2,3,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,[[]],[[]],[[]],[[]],[[],["request",3]],[[["request",3]]],[[["str",15],["configurationverifier",6]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["configurationverifier",6]],["serveridentityverifier",6]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["streamingrequest",3]],[[],["streamingresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["streamingrequest",3]],["bool",15]],[[["streamingresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["streamingrequest",3]],["bool",15]],[[["streamingresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[],["streamingsessionclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["streamingsessionclient",3,[["interceptedservice",3]]]]],"p":[[3,"Client"],[3,"StreamingRequest"],[3,"StreamingResponse"],[3,"StreamingSessionClient"]]},\
"oak_functions_load_test":{"doc":"","t":[17,17,17,5],"n":["REQUEST","TOTAL_REQUESTS","URL","main"],"q":["oak_functions_load_test","","",""],"d":["","","",""],"i":[0,0,0,0],"f":[null,null,null,[[],["result",6]]],"p":[]},\
"oak_functions_loader":{"doc":"","t":[0,0,0,0,0,0,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,13,13,13,3,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,4,13,3,3,3,13,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,17,6,6,6,6,4,6,6,3,8,13,8,3,13,8,3,3,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,5,11,11,11,11,11,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["grpc","logger","lookup","lookup_data","metrics","server","create_and_start_grpc_server","create_wasm_handler","Logger","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","for_test","from","into","into_any","into_any_arc","into_any_rc","into_request","log_public","log_sensitive","new","to_owned","try_from","try_into","type_id","vzip","LookupExtension","LookupFactory","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","create","from","from","get_metadata","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","invoke","new_boxed_extension_factory","storage_get_item","terminate","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","File","GcpMetadataToken","Http","LookupData","LookupDataAuth","LookupDataSource","None","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","fmt","fmt","for_test","from","from","from","get","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","is_empty","len","new_empty","parse_lookup_entries","refresh","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","auth","url","BucketConfig","Count","PrivateMetricsAggregator","PrivateMetricsConfig","PrivateMetricsProxyFactory","Sum","add_laplace_noise","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","batch_size","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buckets","clone","clone_into","create","deserialize","deserialize","epsilon","fmt","fmt","from","from","from","from","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","new","new_boxed_extension_factory","report_metrics","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","max","min","ABI_USIZE","AbiChannelHandle","AbiMessage","AbiPointer","AbiPointerOffset","BoxedExtension","BoxedExtensionFactory","BoxedUwabiExtension","Endpoint","ExtensionFactory","Native","OakApiNativeExtension","Policy","Uwabi","UwabiExtension","WasmHandler","WasmState","alloc","alloc_and_write_buffer_to_wasm_memory","apply_policy","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_read","channel_write","clone","clone","clone_into","clone_into","constant_processing_time","constant_response_size_bytes","create","create","deserialize","fmt","fmt","format_bytes","from","from","from","from","from","get_channel_handle","get_endpoint_mut","get_memory","get_metadata","handle_invoke","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","invoke","invoke_index","read_buffer_from_wasm_memory","read_request","resolve_func","set_endpoint","terminate","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","vzip","write_buffer_to_wasm_memory","write_log_message","write_response","write_u32_to_wasm_memory","0","0"],"q":["oak_functions_loader","","","","","","oak_functions_loader::grpc","","oak_functions_loader::logger","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup_data::LookupDataSource","","","oak_functions_loader::metrics","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::metrics::BucketConfig","","oak_functions_loader::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::server::BoxedExtension",""],"d":["gRPC server for Oak Functions.","","","","","","Starts a gRPC server on the given address, serving the <code>main</code>…","Creates a <code>WasmHandler</code> with the given Wasm module, lookup …","A simple logger that splits logging between writing logs …","","","","","","","","Creates a new logger for testing using the debug …","","","","","","","Logs a message that contains only public, non-sensitive …","Logs the message at the specified <code>Level</code>, but only if the …","Creates a new logger with the specified maximum <code>LevelFilter</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Corresponds to the host ABI function <code>storage_get_item</code>.","","","","","","","","","","","","","An in-memory lookup store instance that can refresh its …","","","","","","","","","","","","","","","","","","","","","","","","Creates an instance of LookupData populated with the given …","","","","Convenience getter for an individual entry that reduces …","","","","","","","","","","","","","","","","","","Creates a new empty <code>LookupData</code> instance that can refresh …","","Refreshes the internal entries of this struct from the …","","","","","","","","","","","","","","","","","","Configuration for metrics buckets.","A bucket used for counting of events. This is equivalent …","Aggregator for count- and sum-based differentially private …","Configuration for differentially-private metrics reporting.","","A bucket used for summing integer values in a range. …","Adds Laplacian noise with parameter <code>beta</code> scaled by <code>scale</code> …","","","","","","","","","The number of requests that will be aggregated into each …","","","","","","","","","The labels and configurations of buckets for which metrics …","","","","","","The privacy budget. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Reports new metrics for a single request that should be …","","","","","","","","","","","","","","","","","","","","","Wasm type identifier for position/offset values in linear …","","","","","A BoxedExtension can either be a …","","","","","","Trait for implementing extensions, to implement new native …","Similar to <code>ServerPolicy</code>, but it is used for reading the …","","Trait for implementing an extension which relies on UWABI.","","<code>WasmState</code> holds runtime values for a particular execution …","","Writes the given <code>buffer</code> by allocating <code>buffer.len()</code> Wasm …","Runs the given function and applies the given security …","","","","","","","","","","","","","","","","","","","","","","","","","","","A fixed response time. See …","See <code>Policy::constant_response_size_bytes</code>","","","","","","Converts a binary sequence to a string if it is a valid …","","","","","","Get the channel handle to address this extension.","Get the endpoint.","Helper function to get memory.","Metadata about this Extension, including the exported host …","","","","","","","","","","","","","","","","","","","","","","","","","","Similar to <code>invoke_index</code> in <code>wasmi::Externals</code>, but may …","Invocation of a host function specified by its registered …","Reads the buffer starting at address <code>buf_ptr</code> with length …","Corresponds to the host ABI function <code>read_request</code>.","","Set the endpoint if it has not been set before.","Performs any cleanup or terminating behavior necessary …","","","","","","","","","","","","","","","","","","","","","","","","Writes the buffer <code>source</code> at the address <code>dest</code> of the Wasm …","Corresponds to the host ABI function <code>write_log_message</code>.","Corresponds to the host ABI function <code>write_response</code>.","Writes the u32 <code>value</code> at the <code>address</code> of the Wasm memory.","",""],"i":[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,3,2,3,2,2,3,2,3,2,3,2,3,2,3,2,3,0,2,2,3,2,3,2,3,2,3,4,5,4,0,0,0,5,6,5,4,6,5,4,6,5,4,6,5,4,5,4,5,4,5,5,5,4,6,6,5,4,6,6,5,4,6,5,4,6,5,4,6,5,4,6,5,4,6,6,6,0,6,5,4,6,5,4,6,5,4,6,5,4,6,5,4,7,8,8,0,9,0,0,0,9,0,10,11,12,9,10,11,12,9,12,10,11,12,9,10,11,12,9,12,9,9,11,12,9,12,12,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,10,9,10,11,12,9,10,11,12,9,10,11,12,9,12,10,11,12,9,13,13,0,0,0,0,0,0,0,0,0,0,14,0,0,14,0,0,0,15,15,0,14,15,16,17,18,14,15,16,17,18,14,15,16,17,18,14,15,16,17,18,15,15,16,17,16,17,16,16,19,17,16,16,18,0,14,15,16,17,18,20,20,15,21,17,14,15,16,17,18,14,15,16,17,18,14,16,17,18,14,15,16,17,18,14,15,16,17,18,21,15,15,15,15,20,21,16,17,14,15,16,17,18,14,15,16,17,18,14,15,16,17,18,16,14,15,16,17,18,15,15,15,15,22,23],"f":[null,null,null,null,null,null,[[["socketaddr",4],["wasmhandler",3],["vec",3,[["u8",15]]],["serverpolicy",3],["configurationinfo",3],["future",8],["logger",3]]],[[["vec",3,[["boxedextensionfactory",6]]],["logger",3]],["result",6,[["wasmhandler",3]]]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["logger",3]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[["level",4],["str",15]]],[[["level",4],["str",15]]],[[["levelfilter",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",6,[["boxedextension",4]]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[["wasmstate",3],["runtimeargs",3]],["result",4,[["result",4,[["oakstatus",4]]],["trap",3]]]],[[["arc",3,[["lookupdata",3]]],["logger",3]],["result",6,[["boxedextensionfactory",6]]]],[[["wasmstate",3],["lookupextension",3],["abipointer",6],["abipointeroffset",6],["abipointer",6],["abipointer",6]],["result",4,[["oakstatus",4]]]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lookupdataauth",4]],[[],["lookupdatasource",4]],[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["hashmap",3,[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]]]],[[]],[[]],[[]],[[],["option",4,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["usize",15]],[[["option",4,[["lookupdatasource",4]]],["logger",3]],["lookupdata",3]],[[["buf",8]],["result",6,[["hashmap",3,[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[["stdrng",3],["f64",15],["i64",15],["f64",15]],["i64",15]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["bucketconfig",4]],[[]],[[],["result",6,[["boxedextension",4]]]],[[],["result",4]],[[],["result",4]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["privatemetricsconfig",3]],["result",6]],[[["privatemetricsconfig",3],["logger",3]],["result",6,[["boxedextensionfactory",6]]]],[[["hashmap",3,[["string",3],["i64",15]]]],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["abipointer",6]],[[["vec",3,[["u8",15]]],["abipointer",6],["abipointer",6]],["result",4,[["oakstatus",4]]]],[[["serverpolicy",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abichannelhandle",6],["abipointer",6],["abipointer",6]],["result",4,[["channelstatus",4]]]],[[["abichannelhandle",6],["abipointer",6],["abipointeroffset",6]],["result",4,[["channelstatus",4]]]],[[],["policy",3]],[[],["wasmhandler",3]],[[]],[[]],null,null,[[],["result",6,[["boxedextension",4]]]],[[["vec",3,[["boxedextensionfactory",6]]],["logger",3]],["result",6]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[],["channelhandle",4]],[[],["option",4,[["endpoint",3]]]],[[],["memoryref",3]],[[]],[[["request",3]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["wasmstate",3],["runtimeargs",3]],["result",4,[["result",4,[["oakstatus",4]]],["trap",3]]]],[[["usize",15],["runtimeargs",3]],["result",4,[["option",4,[["runtimevalue",4]]],["trap",3]]]],[[["abipointer",6],["abipointeroffset",6]],["result",4,[["vec",3,[["u8",15]]],["oakstatus",4]]]],[[["abipointer",6],["abipointer",6]],["result",4,[["oakstatus",4]]]],[[["str",15],["signature",3]],["result",4,[["funcref",3],["error",4]]]],[[["endpoint",3]]],[[],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6,[["serverpolicy",3]]]],[[]],[[]],[[]],[[]],[[]],[[["abipointer",6]],["result",4,[["oakstatus",4]]]],[[["abipointer",6],["abipointeroffset",6]],["result",4,[["oakstatus",4]]]],[[["abipointer",6],["abipointeroffset",6]],["result",4,[["oakstatus",4]]]],[[["u32",15],["abipointer",6]],["result",4,[["oakstatus",4]]]],null,null],"p":[[3,"Logger"],[3,"LookupExtension"],[3,"LookupFactory"],[4,"LookupDataSource"],[4,"LookupDataAuth"],[3,"LookupData"],[13,"File"],[13,"Http"],[4,"BucketConfig"],[3,"PrivateMetricsAggregator"],[3,"PrivateMetricsProxyFactory"],[3,"PrivateMetricsConfig"],[13,"Sum"],[4,"BoxedExtension"],[3,"WasmState"],[3,"Policy"],[3,"WasmHandler"],[3,"Endpoint"],[8,"ExtensionFactory"],[8,"UwabiExtension"],[8,"OakApiNativeExtension"],[13,"Native"],[13,"Uwabi"]]},\
"oak_functions_sdk_abi_test":{"doc":"Oak Functions ABI test.","t":[5],"n":["main"],"q":["oak_functions_sdk_abi_test"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"oak_https_attestation":{"doc":"HTTPS Attestation Service implementation.","t":[3,12,11,11,11,11,11,11,11,12,12,12,11,5,5,5,0,12,11,11,11,11,13,4,13,3,12,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,12,11,5,5,11,12,11,11,11,11,11,11,11,11,11],"n":["Opt","backend_uri","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","https_certificate","https_listen_address","https_private_key","into","load_certificate","load_private_key","main","server","tee_certificate","to_owned","try_from","try_into","type_id","Attested","ConnectionStatus","NotAttested","Proxy","backend_uri","borrow","borrow","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","connection_status","from","from","generate_server_assertion","get_connection_status","into","into","keying_material_bundle","new","process_request","run_server","set_attested_connection_status","tee_certificate","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify_client_assertion"],"q":["oak_https_attestation","","","","","","","","","","","","","","","","","","","","","","oak_https_attestation::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","HTTPS server that terminates TLS connections and works as …","URI of the backend application to proxy HTTP requests to.","","","","","<code>hyper::Client</code> used to connect to the backend application.","","","","","Status of the current TLS session. <code>Proxy</code> doesn’t proxy …","","","","","","","Client and server keying material exported from current …","","Proxies HTTPS requests to an HTTP server specified by …","Run HTTPS proxy server that implements HTTPS Attestation …","Sets <code>Proxy::connection_status</code> to <code>ConnectionStatus::Attested</code>…","PEM encoded X.509 certificate that signs TEE firmware key.","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,2,0,2,0,3,2,3,2,3,3,2,3,2,3,3,2,3,3,3,2,3,3,3,0,0,3,3,2,3,2,3,2,3,2,3,3],"f":[null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],null,null,null,[[]],[[["str",15]],["result",6,[["certificate",3]]]],[[["str",15]],["result",6,[["privatekey",3]]]],[[],["result",6]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[],["connectionstatus",4]],[[],["proxy",3]],[[]],[[]],null,[[]],[[]],[[],["result",6,[["string",3]]]],[[],["connectionstatus",4]],[[]],[[]],null,[[["uri",3],["client",3,[["httpconnector",3]]],["vec",3,[["u8",15]]],["keyingmaterialbundle",3]]],[[["arc",3,[["proxy",3]]],["request",3,[["body",3]]]]],[[["str",15],["privatekey",3],["certificate",3],["vec",3,[["u8",15]]],["uri",3]]],[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["request",3,[["body",3]]]]]],"p":[[3,"Opt"],[4,"ConnectionStatus"],[3,"Proxy"]]},\
"oak_io":{"doc":"Shared data structures and functionality for inter-node …","t":[8,8,13,13,13,13,13,13,13,13,13,13,6,3,13,3,4,4,13,13,13,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,14,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,24,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,10,11,11,11,11,11,11,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Decodable","Encodable","ErrBadHandle","ErrBufferTooSmall","ErrChannelClosed","ErrChannelEmpty","ErrHandleSpaceTooSmall","ErrInternal","ErrInvalidArgs","ErrOutOfRange","ErrPermissionDenied","ErrTerminated","Handle","InitWrapper","IoError","Message","OakError","OakStatus","OakStatus","Ok","ProtobufDecodeError","ProtobufEncodeError","Receiver","Sender","Unspecified","as_proto_handle","as_proto_handle","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bytes","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","command_receiver","decode","decode","default","default","default","encode","encode","encoded_len","encoded_len","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","from","from","from","from","from","from","from","from","from","from","from","from_i32","handle","handle","handle","handle_visit_blanket_impl","handles","hash","init","into","into","into","into","into","into","into_inner","is_valid","ne","ne","ne","ne","new","new","partial_cmp","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","0","0","0","0","HandleVisit","HandleVisit","ReadHandle","Receiver","Sender","WriteHandle","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","drop","drop","encoded_len","encoded_len","eq","eq","eq","eq","extract_handles","fmt","fmt","fmt","fmt","fold","from","from","from","from","from","from","handle","handle","id","id","inject_handles","into","into","into","into","ne","ne","ne","ne","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["oak_io","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_io::OakError","","","","oak_io::handle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A trait for objects that can be decoded from bytes + …","A trait for objects that can be encoded as bytes + handles.","Invalid handle provided.","Provided buffer was too small for operation (an output …","Channel has been closed.","Channel has no messages available to read.","Provided handle space was too small for operation (an …","Internal error.","Arguments invalid.","Argument out of valid range.","The node does not have sufficient permissions to perform …","Node terminated.","Handle used to identify read or write channel halves.","A wrapper struct that holds an init message, plus the …","","A simple holder for bytes + handles, using internally …","Generic Oak error.","Status values exchanged as i32 values across the Node Wasm …","","Success.","","","Wrapper for a handle to the read half of a channel, …","Wrapper for a handle to the send half of a channel, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OakStatus</code>, or <code>None</code> if <code>value</code> is not a …","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OakStatus</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Visit all handles present in a type.","Automatically derives the <code>HandleVisit</code> trait for structs …","Wrapper for a handle to the read half of a channel.","Receiver handle for an Oak channel. This type is sent over …","Sender handle for an Oak channel. This type is sent over …","Wrapper for a handle to the send half of a channel.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return all handles in <code>T</code>.","","","","","Invokes the provided closure on every handle contained in …","","","","","","","","","","","Inject handles into a message.","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,0,0,2,0,0,0,2,1,2,2,0,0,1,3,4,1,2,3,4,5,6,1,2,3,4,5,6,5,3,4,1,3,4,5,6,1,3,4,5,6,1,6,7,6,1,3,4,8,6,3,4,1,3,4,5,6,1,1,2,2,3,4,5,6,3,4,1,2,2,2,2,2,3,3,4,5,6,1,0,3,4,0,5,1,6,1,2,3,4,5,6,3,1,3,4,5,6,3,4,1,1,3,4,5,6,1,2,1,2,3,4,5,6,1,2,3,4,5,6,1,2,3,4,5,6,9,10,11,12,0,0,0,0,0,0,13,14,15,16,13,14,15,16,13,14,13,14,15,16,13,14,15,16,13,14,15,16,13,14,13,14,15,16,0,13,14,15,16,17,13,14,15,15,16,16,15,16,13,14,0,13,14,15,16,13,14,15,16,13,14,15,16,13,14,15,16,13,14,15,16,13,14,15,16],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["receiver",3]],[[],["sender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["oakstatus",4]],[[],["receiver",3]],[[],["sender",3]],[[],["message",3]],[[],["initwrapper",3]],[[]],[[]],[[]],[[]],[[]],[[["oakstatus",4]],["ordering",4]],null,[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["oakstatus",4]],[[],["receiver",3]],[[],["sender",3]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["oakstatus",4]],["bool",15]],[[["receiver",3]],["bool",15]],[[["sender",3]],["bool",15]],[[["message",3]],["bool",15]],[[["initwrapper",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["oakstatus",4]]],[[["error",3]]],[[["encodeerror",3]]],[[["decodeerror",3]]],[[["readhandle",3]]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["oakstatus",4]]]],null,null,null,null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["readhandle",3]],[[["i32",15]],["bool",15]],[[["receiver",3]],["bool",15]],[[["sender",3]],["bool",15]],[[["message",3]],["bool",15]],[[["initwrapper",3]],["bool",15]],[[["readhandle",3]]],[[["writehandle",3]]],[[["oakstatus",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["sender",3]],[[],["receiver",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["sender",3]],["bool",15]],[[["receiver",3]],["bool",15]],[[["readhandle",3]],["bool",15]],[[["writehandle",3]],["bool",15]],[[],["vec",3,[["handle",6]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[["handle",6]]],[[]],[[]],[[["handle",6]]],null,null,null,null,[[],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[["sender",3]],["bool",15]],[[["receiver",3]],["bool",15]],[[["readhandle",3]],["bool",15]],[[["writehandle",3]],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"OakStatus"],[4,"OakError"],[3,"Receiver"],[3,"Sender"],[3,"Message"],[3,"InitWrapper"],[8,"Decodable"],[8,"Encodable"],[13,"ProtobufDecodeError"],[13,"ProtobufEncodeError"],[13,"OakStatus"],[13,"IoError"],[3,"Sender"],[3,"Receiver"],[3,"ReadHandle"],[3,"WriteHandle"],[8,"HandleVisit"]]},\
"oak_loader":{"doc":"A utility binary to run Oak Runtime.","t":[5,0,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,11,11,12,11,11,11,11,11,11,5,5,5,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,12,12,5,12,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["main","options","ConfigEntry","Opt","application","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clap","clone","clone","clone_into","clone_into","config_files","create_app_config","create_grpc_config","create_http_config","create_permissions_config","create_runtime_config","create_secure_server_config","create_sign_table","eq","equivalent","filename","fmt","fmt","from","from","from_clap","from_str","get_default_root_tls_certs","get_oidc_client_info","get_root_tls_certificate_or_default","get_tls_identity","grpc_tls_certificate","grpc_tls_private_key","http_tls_certificate","http_tls_private_key","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","introspect_port","key","kms_credentials","metrics_port","ne","no_introspect","no_metrics","oidc_client","parse_config_map","permissions","proxy_root_tls_certificate","proxy_uri","root_tls_certificate","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["oak_loader","","oak_loader::options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Main execution point for the Oak loader.","Helper functions to parse input arguments and create an …","A specification of a configuration entry as human readable …","Command line options for the Oak loader.","","","","","","","","","","","","","","","","Parse application configuration into an instance of …","Create the overall <code>oak_runtime::GrpcConfiguration</code> from the …","Create the overall <code>oak_runtime::HttpConfiguration</code> from the …","Parse permissions configuration into an instance of …","Parse input options and create a <code>RuntimeConfiguration</code>.","Create <code>oak_runtime::SecureServerConfiguration</code> containing …","Create a signature table for Oak runtime. Returns an …","","","","","","","","","","Gets the default root TLS certificates from the embedded …","Parse OpenID Connect client configuration file into a …","If <code>oak-unsafe</code> is enabled, reads root TLS certificate from …","Creates <code>Identity</code> from the TLS certificate and private key …","","","","","","","","","","","","","","","","","","","","","","","Parse a collection of configuration entries and return the …","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,2,1,2,1,2,1,2,1,1,2,1,2,1,0,0,0,0,0,0,0,2,2,2,1,2,1,2,1,2,0,0,0,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,1,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2],"f":[[[],["result",6]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["opt",3]],[[],["configentry",3]],[[]],[[]],null,[[["opt",3]],["result",6,[["applicationconfiguration",3]]]],[[["opt",3]]],[[["opt",3]],["result",6,[["httpconfiguration",3]]]],[[["opt",3]],["result",6,[["permissionsconfiguration",3]]]],[[]],[[["opt",3]]],[[["applicationconfiguration",3]],["result",6,[["signaturetable",3]]]],[[["configentry",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[],["vec",3,[["u8",15]]]],[[["opt",3]],["result",6,[["option",4,[["clientinfo",3]]]]]],[[["opt",3]],["result",6,[["certificate",3]]]],[[["opt",3]]],null,null,null,null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],null,null,null,null,[[["configentry",3]],["bool",15]],null,null,null,[[],["result",6,[["configmap",3]]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Opt"],[3,"ConfigEntry"]]},\
"oak_proxy_attestation":{"doc":"","t":[0,3,3,3,3,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","GetRootCertificateRequest","GetRootCertificateResponse","GetSignedCertificateRequest","GetSignedCertificateResponse","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate_request","clear","clear","clear","clear","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_request","into_request","into_request","into_request","ne","ne","ne","proxy_attestation_client","proxy_attestation_server","root_certificate","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","ProxyAttestationClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_root_certificate","get_signed_certificate","into","into_request","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","ProxyAttestation","ProxyAttestationServer","borrow","borrow_mut","call","call","clone","clone_into","fmt","from","get_root_certificate","get_signed_certificate","into","into_request","new","poll_ready","poll_ready","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["oak_proxy_attestation","oak_proxy_attestation::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_proxy_attestation::proto::proxy_attestation_client","","","","","","","","","","","","","","","","","","","","","oak_proxy_attestation::proto::proxy_attestation_server","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","Service for signing X.509 certificates. …","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Get root X.509 certificate used by the Proxy Attestation …","Get signed X.509 certificate based on the provided …","","","","Compress requests with <code>gzip</code>.","","","","","","","Generated trait containing gRPC methods that should be …","Service for signing X.509 certificates. …","","","","","","","","","Get root X.509 certificate used by the Proxy Attestation …","Get signed X.509 certificate based on the provided …","","","","","","","","","","",""],"i":[0,0,0,0,0,1,2,3,4,1,2,3,4,2,1,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,4,0,0,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,6,6,6,6,6,6,6,6,7,7,6,6,6,6,6,6,6,6,6,6,6],"f":[null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[],["getsignedcertificaterequest",3]],[[],["getsignedcertificateresponse",3]],[[],["getrootcertificaterequest",3]],[[],["getrootcertificateresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["getsignedcertificaterequest",3]],["bool",15]],[[["getsignedcertificateresponse",3]],["bool",15]],[[["getrootcertificaterequest",3]],["bool",15]],[[["getrootcertificateresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["getsignedcertificaterequest",3]],["bool",15]],[[["getsignedcertificateresponse",3]],["bool",15]],[[["getrootcertificateresponse",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["proxyattestationclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["proxyattestationclient",3,[["interceptedservice",3]]]],null,null,[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[["request",3,[["getrootcertificaterequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["request",3,[["getsignedcertificaterequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[],["request",3]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["interceptedservice",3]]],"p":[[3,"GetSignedCertificateRequest"],[3,"GetSignedCertificateResponse"],[3,"GetRootCertificateRequest"],[3,"GetRootCertificateResponse"],[3,"ProxyAttestationClient"],[3,"ProxyAttestationServer"],[8,"ProxyAttestation"]]},\
"oak_proxy_attestation_bin":{"doc":"Proxy Attestation Service implementation.","t":[3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11],"n":["Opt","Proxy","borrow","borrow","borrow_mut","borrow_mut","certificate_authority","clap","clone","clone_into","create","from","from","from_clap","get_root_certificate","get_signed_certificate","grpc_listen_address","grpc_tls_certificate","grpc_tls_private_key","into","into","into_request","into_request","main","tee_certificate","tee_certificate","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["oak_proxy_attestation_bin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","Sends back root X.509 certificate in PEM format. …","Creates a signed X.509 certificate based on the …","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,2,1,2,1,2,2,2,1,1,2,2,1,1,2,2,2,1,2,1,2,0,1,2,2,1,2,1,2,1,2,1,2],"f":[null,null,[[]],[[]],[[]],[[]],null,[[],["app",3]],[[],["opt",3]],[[]],[[["vec",3,[["u8",15]]]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[["request",3,[["getrootcertificaterequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["request",3,[["getsignedcertificaterequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["result",6]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Proxy"],[3,"Opt"]]},\
"oak_remote_attestation":{"doc":"","t":[0,0,0,0,0,17,3,17,13,17,17,3,4,17,17,17,17,17,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,6,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,3,13,3,13,8,3,13,17,4,17,17,8,3,13,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,10,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,3,3,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,12,11,11],"n":["crypto","handshaker","message","proto","report","AEAD_ALGORITHM_KEY_LENGTH","AeadEncryptor","CLIENT_KEY_PURPOSE","Client","KEY_AGREEMENT_ALGORITHM_KEY_LENGTH","KEY_DERIVATION_SALT","KeyNegotiator","KeyNegotiatorType","NONCE_LENGTH","SERVER_KEY_PURPOSE","SHA256_HASH_LENGTH","SIGNATURE_LENGTH","SIGNING_ALGORITHM_KEY_LENGTH","Server","SignatureVerifier","Signer","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","create","create","create_encryptor","decrypt","encrypt","from","from","from","from","from","get_random","get_sha256","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","new","public_key","public_key","sign","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","verify","vzip","vzip","vzip","vzip","vzip","AttestationBehavior","ClientHandshaker","Encryptor","ServerHandshaker","ServerIdentityVerifier","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contains_peer_attestation","contains_self_attestation","create_attestation_info","create_bidirectional_attestation","create_client_hello","create_peer_attestation","create_self_attestation","decrypt","encrypt","fmt","from","from","from","from","get_encryptor","get_encryptor","get_expected_tee_measurement","get_signer","get_tee_certificate","into","into","into","into","into_request","into_request","into_request","into_request","is_aborted","is_aborted","is_completed","is_completed","new","new","new","next_step","next_step","serialize_protobuf","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verify_attestation_info","vzip","vzip","vzip","vzip","ClientHello","ClientHello","ClientIdentity","ClientIdentity","Deserializable","EncryptedData","EncryptedData","MAXIMUM_MESSAGE_SIZE","MessageWrapper","PROTOCOL_VERSION","REPLAY_PROTECTION_ARRAY_LENGTH","Serializable","ServerIdentity","ServerIdentity","additional_info","attestation_info","attestation_info","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear_transcript_signature","clear_transcript_signature","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","data","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize_message","ephemeral_public_key","ephemeral_public_key","eq","eq","eq","eq","eq","fmt","fmt","from","from","from","from","from","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","ne","ne","ne","ne","ne","new","new","new","new","nonce","random","random","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_transcript_signature","set_transcript_signature","signing_public_key","signing_public_key","to_owned","to_owned","to_owned","to_owned","transcript_signature","transcript_signature","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","version","vzip","vzip","vzip","vzip","vzip","0","0","0","0","AttestationInfo","AttestationReport","borrow","borrow","borrow_mut","borrow_mut","certificate","clear","clear","clone","clone","clone_into","clone_into","data","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","measurement","ne","ne","new","platform_version","report","signature","svn","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","version","vzip","vzip"],"q":["oak_remote_attestation","","","","","oak_remote_attestation::crypto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation::handshaker","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation::message","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_remote_attestation::message::MessageWrapper","","","","oak_remote_attestation::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Implementation of Authenticated Encryption with Associated …","Purpose string used for deriving client session keys with …","Defines a key negotiator which provides client session key …","","Salt used for key derivation with HKDF. …","Implementation of the X25519 Elliptic Curve Diffie-Hellman …","Defines the type of key negotiator and the set of session …","Length of the encryption nonce. <code>ring::aead</code> uses 96-bit …","Purpose string used for deriving server session keys with …","","IEEE-P1363 encoded ECDSA-P256 signature length. …","OpenSSL ECDSA-P256 key public key length, which is …","Defines a key negotiator which provides server session key …","","","","","","","","","","","","","","","","","Derives session keys from self and peer public keys and …","Decrypts and authenticates <code>data</code> using [<code>AeadEncryptor::key</code>].","Encrypts <code>data</code> using [<code>AeadEncryptor::key</code>].","","","","","","Generates a random vector of <code>size</code> bytes.","Computes a SHA-256 digest of <code>input</code> and returns it in a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Verifies the signature validity.","","","","","","Defines the behavior of the remote attestation protocol. …","Client of the remote attestation protocol handshake.","","Server of the remote attestation protocol handshake.","","","","","","","","","","","","Generates attestation info with a TEE report. TEE report …","Represents an attestation process, where current machine …","Initializes the remote attestation handshake by creating a …","Represents an attestation process, where current machine …","Represents an attestation process, where current machine …","","","","","","","","","","","","","","","","","","","","","","","","","Creates <code>ClientHandshaker</code> with […","Creates <code>ServerHandshaker</code> with […","","Processes incoming <code>message</code> and returns a serialized remote …","Processes incoming <code>message</code> and returns a serialized remote …","","","","","","","","","","","","","","Verifies the validity of the attestation info:","","","","","Initial message that starts remote attestation handshake.","","Client identity message containing remote attestation …","","","Message containing data encrypted using a session key.","","Maximum handshake message size is set to be equal to 1KiB.","Convenience struct that wraps attestation messages.","Remote attestation protocol version.","Length (in bytes) of the random vector sent in messages …","","Server identity message containing remote attestation …","","Additional info to be checked when verifying the identity. …","Information used for remote attestation such as a TEE …","Information used for remote attestation such as a TEE …","","","","","","","","","","","","","","","","","","","","","Data encrypted using the session key.","","","","","","","","","","Deserializes an attestation message from a serialized […","Public key needed to establish a session key.","Public key needed to establish a session key.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Random nonce (initialization vector) used for …","Random vector sent in messages for preventing replay …","Random vector sent in messages for preventing replay …","","","","","","","","","","","","Public key used to sign transcripts.","Public key used to sign transcripts.","","","","","Signature of the SHA-256 hash of all previously sent and …","Signature of the SHA-256 hash of all previously sent and …","","","","","","","","","","","","","","","","Remote attestation protocol version.","","","","","","","","","","","","","","","","","","","","","","","Arbitrary data to put into the TEE report.","","","","","","","","","","","","","","","TEE measurement, i.e. VM hash.","","","Placeholder function for collecting TEE measurement of …","The installed version of firmware.","","Signature of this report.","Security version number of SNP firmware.","","","","","","","","","Version number of this attestation report.","",""],"i":[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,2,3,4,5,1,2,3,4,5,1,1,1,3,4,3,2,2,2,3,4,5,1,0,0,2,3,4,5,1,2,3,4,5,1,5,3,4,4,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,5,2,3,4,5,1,0,0,0,0,0,6,7,8,9,6,7,8,9,9,9,0,9,6,9,9,8,8,9,6,7,8,9,6,7,9,9,9,6,7,8,9,6,7,8,9,6,7,6,7,6,7,8,6,7,0,6,7,8,9,6,7,8,9,6,7,8,9,0,6,7,8,9,0,10,0,10,0,0,10,0,0,0,0,0,0,10,11,11,12,10,13,11,12,14,10,13,11,12,14,11,12,13,11,12,14,13,11,12,14,14,15,13,13,11,11,12,12,14,14,0,11,12,10,13,11,12,14,10,14,10,13,11,12,14,10,13,11,12,14,10,13,11,12,14,10,13,11,12,14,13,11,12,14,14,13,11,16,13,13,11,11,12,12,14,14,11,12,11,12,13,11,12,14,11,12,10,13,11,12,14,10,13,11,12,14,10,13,11,12,14,11,10,13,11,12,14,17,18,19,20,0,0,21,22,21,22,22,21,22,21,22,21,22,21,21,22,21,22,21,22,21,22,21,22,21,22,21,22,21,21,22,21,21,22,21,21,21,22,21,22,21,22,21,22,21,21,22],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keynegotiatortype",4]],[[]],[[["keynegotiatortype",4]],["result",6]],[[],["result",6]],[[],["result",6,[["aeadencryptor",3]]]],[[["encrypteddata",3]],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",6,[["encrypteddata",3]]]],[[]],[[]],[[]],[[]],[[]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[]],[[],["result",6]],[[],["result",6]],[[],["result",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[["signer",3]],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",6]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[]],[[],["result",6]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["result",6,[["encryptor",3]]]],[[],["result",6,[["encryptor",3]]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["attestationbehavior",3],["serveridentityverifier",6]]],[[["attestationbehavior",3],["vec",3,[["u8",15]]]]],[[["aeadencryptor",3]]],[[],["result",6,[["option",4,[["vec",3,[["u8",15]]]]]]]],[[],["result",6,[["option",4,[["vec",3,[["u8",15]]]]]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["clienthello",3]],[[],["serveridentity",3]],[[],["clientidentity",3]],[[],["encrypteddata",3]],[[]],[[]],[[]],[[]],null,[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",6]],[[],["result",6]],[[],["result",4]],[[],["result",6,[["messagewrapper",4]]]],null,null,[[["messagewrapper",4]],["bool",15]],[[["clienthello",3]],["bool",15]],[[["serveridentity",3]],["bool",15]],[[["clientidentity",3]],["bool",15]],[[["encrypteddata",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["messagewrapper",4]],["bool",15]],[[["clienthello",3]],["bool",15]],[[["serveridentity",3]],["bool",15]],[[["clientidentity",3]],["bool",15]],[[["encrypteddata",3]],["bool",15]],[[]],[[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]],[[["vec",3,[["u8",15]]]]],[[["vec",3,[["u8",15]]]]],null,null,null,[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",4]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[],["attestationreport",3]],[[],["attestationinfo",3]],[[]],[[]],null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["attestationreport",3]],["bool",15]],[[["attestationinfo",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,[[["attestationreport",3]],["bool",15]],[[["attestationinfo",3]],["bool",15]],[[]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]]],"p":[[4,"KeyNegotiatorType"],[3,"AeadEncryptor"],[3,"KeyNegotiator"],[3,"Signer"],[3,"SignatureVerifier"],[3,"ClientHandshaker"],[3,"ServerHandshaker"],[3,"Encryptor"],[3,"AttestationBehavior"],[4,"MessageWrapper"],[3,"ServerIdentity"],[3,"ClientIdentity"],[3,"ClientHello"],[3,"EncryptedData"],[8,"Deserializable"],[8,"Serializable"],[13,"ClientHello"],[13,"ServerIdentity"],[13,"ClientIdentity"],[13,"EncryptedData"],[3,"AttestationReport"],[3,"AttestationInfo"]]},\
"oak_runtime":{"doc":"Oak Runtime implementation","t":[12,3,3,4,3,3,4,13,13,13,3,3,4,13,4,3,3,3,3,3,13,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,5,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,11,12,12,12,11,11,11,11,11,12,12,12,11,0,12,12,12,11,12,11,11,12,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,12,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,17,17,17,17,13,13,6,13,13,13,13,3,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["0","AuxServer","ChannelHalf","ChannelHalfDirection","GrpcConfiguration","HttpConfiguration","LabelReadStatus","NeedsCapacity","NeedsCapacity","NeedsCapacity","NodeId","NodePrivilege","NodeReadStatus","Read","ReadStatus","Runtime","RuntimeConfiguration","RuntimeProxy","SecureServerConfiguration","SignatureTable","Success","Success","Success","Write","app_config","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_close","channel_create","channel_create_with_downgrade","channel_direction","channel_read","channel_read_with_downgrade","channel_try_read_message","channel_try_read_message_with_downgrade","channel_write","channel_write_with_downgrade","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","config","config_map","construct_debug_id","create_runtime","current","default","default","default","default","default","default","direction","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gather_metrics","get_channel_debug_id","get_channel_id","get_channel_label","get_messages","get_serialized_channel_label","get_serialized_node_label","get_serialized_node_privilege","grpc_client_root_tls_certificate","grpc_config","grpc_server_tls_identity","handle_clone","hash","hash","http_client_root_tls_certificate","http_config","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","introspect_port","introspection_event","is_terminating","is_terminating","join_handle","kms_credentials","metrics_data","metrics_data","metrics_port","name","ne","new","new","node_create","node_create_with_downgrade","node_id","node_name","oidc_client_info","partial_cmp","permissions","permissions_config","runtime","secure_server_configuration","set_as_current","sign_table","start_runtime","stop","termination_notification_sender","time","tls","tls_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","values","visit_halves","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wait_on_channels","wait_on_channels_with_downgrade","wake_waiters","0","0","0","0","1","0","0","1","oidc_utils","Claims","ClientInfo","TokenError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client_id","client_secret","clone","clone","clone_into","clone_into","deserialize","deserialize","exchange_code_for_token","fmt","fmt","fmt","fmt","from","from","from","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","new","parse_client_info_json","source","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","configure_and_run","PermissionsConfiguration","allow_egress_https_authorities","allow_grpc_client","allow_grpc_server_nodes","allow_http_client","allow_http_server_nodes","allow_insecure_http_egress","allow_log_nodes","allowed_creation","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deserialize","fmt","from","into","into_any","into_any_arc","into_any_rc","into_request","to_owned","try_from","try_into","type_id","vzip","Base64Error","DEFAULT_MAX_RADIUS_MICROSECONDS","DEFAULT_MIN_OVERLAPPING_INTERVALS","DEFAULT_SERVER_RETRIES","DEFAULT_TIMEOUT_SECONDS","InvalidSignature","IoError","MicrosSinceEpoch","MidPointTooSmall","NotEnoughOverlappingIntervals","RadiusTooLarge","RoughenoughError","RoughtimeClient","RoughtimeError","RoughtimeServer","TimeoutError","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","fmt","fmt","from","from","from","from","from","from","get_default_servers","get_roughtime","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","new","new","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","0","0","actual","expected","Certificate","TlsConfig","as_any","as_any","as_any_mut","as_any_mut","as_bits","as_ref","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","encode_hex","encode_hex_upper","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","new","parse","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["oak_runtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_runtime::LabelReadStatus","","oak_runtime::NodeReadStatus","","","oak_runtime::ReadStatus","","","oak_runtime::auth","oak_runtime::auth::oidc_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_runtime::config","oak_runtime::permissions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_runtime::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_runtime::time::RoughtimeError","","","","","oak_runtime::tls","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Information for managing an associated server.","A reference to one half of a <code>Channel</code>","The direction of a <code>ChannelHalf</code>.","Configuration options related to gRPC pseudo-Nodes.","Configuration options related to HTTP pseudo-Nodes.","Helper type to indicate whether retrieving a serialized …","","","","A unique internal identifier for a Node or pseudo-Node …","The downgrading (declassification + endorsement) privilege …","Helper types to indicate whether a channel read operation …","","","Runtime structure for configuring and running a set of Oak …","Configuration options that govern the behaviour of the …","A proxy object that binds together a reference to the …","Configuration options for secure HTTP and gRPC …","Configuration options table related to Wasm module …","","","","","Application configuration.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Authentication functionality.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","See <code>Runtime::channel_close</code>.","Calls <code>Runtime::channel_create</code> without using the Node’s …","Calls <code>Runtime::channel_create</code> using the Node’s privilege.","Return the direction of an ABI handle.","Calls <code>Runtime::channel_read</code> without using the Node’s …","Calls <code>Runtime::channel_read</code> using the Node’s privilege.","Calls <code>Runtime::channel_try_read_message</code> without the Node’…","Calls <code>Runtime::channel_try_read_message</code> using the Node’s …","Calls <code>Runtime::channel_write</code> without using the Node’s …","Calls <code>Runtime::channel_write</code> using the Node’s privilege.","","","","","","","","","","","","","","","","","","","","","","Functionality covering configuration of a Runtime instance.","Start-of-day configuration to feed to the running …","Returns a unique debug_id consisting out of the provided …","Creates a <code>Runtime</code> instance with a single initial Node …","Gets the instance for the current thread.","","","","","","","","","Dropping an auxiliary server involves notifying it that it …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the accumulated metrics for the <code>Runtime</code>.","Returns a unique debug_id used to identify the channel in …","Get the ID of the underlying channel.  For …","See <code>Runtime::get_channel_label</code>.","Get read-only access to the channel’s messages.  For …","See <code>Runtime::get_serialized_channel_label</code>.","See <code>Runtime::get_serialized_node_label</code>.","See <code>Runtime::get_serialized_node_privilege</code>.","PEM formatted root TLS certificate to use for all gRPC …","","TLS identity to use for all gRPC Server Nodes.","Calls <code>Runtime::handle_clone</code>.","","","PEM formatted root TLS certificate to use for all HTTP …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Port to run an introspection server on, if provided.","no-op implementation, introspection events are a debugging …","Return whether the <code>Runtime</code> is terminating.","See <code>Runtime::is_terminating</code>.","","Credentials filename for KMS integration, if provided.","","","Port to run a metrics server on, if provided.","","","Constructor for <code>ChannelHalf</code> keeps the underlying <code>Channel</code>’…","","Calls <code>Runtime::node_create_and_register</code> without using the …","Calls <code>Runtime::node_create_and_register</code> using the Node’s …","","","OpenID Connect Authentication client information.","","","Permissions configuration.","","Security options for server pseudo-nodes.","Binds this instance to the current thread.","Table that contains signatures and public keys …","Configures and runs the protobuf specified …","Signal termination to a <code>Runtime</code> and wait for its Node …","","Roughtime client implementation to provide a source of …","","TLS identity to use for all HTTP Server Nodes.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Map from Oak module hashes to corresponding signatures.","Visit all channel halves that are reachable via this …","","","","","","","","","","","","","","","","Calls <code>Runtime::wait_on_channels</code> without using the Node’s …","Calls <code>Runtime::wait_on_channels</code> using the Node’s …","Wake any threads waiting on the underlying channel.","","","","","","","","","OpenID Connect utilities for exchanging authorisation …","Claims encoded into the identity token. Reference: …","The OpenID Connect client ID and client secret contained …","Represents a token validation error.","","","","","","","","","","","","","The client ID.","The client secret.","","","","","","","Exchanges an authorisation code for an ID token and …","","","","","","","","","","","","","","","","","","","","","","","","Parses the content of the downloaded OpenID Connect client …","","","","","","","","","","","","","","","","","Configures a <code>Runtime</code> from the given <code>RuntimeConfiguration</code> …","Provides a declarative description of the features that …","List of the allowed authorities (of the form …","Checks if creating a GrpcClient node with the given …","Whether to enable the use of GrpcServerNode.","Checks if creating an HttpClient node with the given …","Whether to enable the use of HttpServerNode.","Whether to enable creating an HTTP client for insecure …","Whether to enable the use of LogNode.","Check if this permissions configuration allows creating a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time is given as microseconds since the UNIX epoch …","","","","","A client for requesting Roughtime from multiple servers.","Possible errors returned by the Roughtime client.","Specifies the details of a Roughtime server.","","","","","","","","","","","","","","Creates a new Roughtime client with the default settings.","","","","","","","","","Gets the default Roughtime servers in the ecosystem.","Gets the Roughtime from multiple servers.","","","","","","","","","","","","","","","","Creates a new instance.","Creates a new Roughtime client.","","","","","","","","","","","","","","","","","","","Represents a PEM formatted certificate.","Represents TLS identity to use for HTTP server …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that the input byte vector represents a valid PEM …","","","","","","","","","",""],"i":[1,0,0,0,0,0,0,2,3,4,0,0,0,5,0,0,0,0,0,0,2,3,4,5,6,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,0,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,10,10,10,10,10,10,10,10,10,10,7,5,10,6,11,12,13,14,15,1,7,5,10,6,11,12,13,14,15,1,1,0,6,0,10,10,6,11,12,13,14,15,7,7,8,9,5,1,5,1,7,5,12,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,9,7,7,10,7,10,10,10,11,14,11,10,5,1,13,14,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,6,9,9,10,8,6,10,9,6,8,1,7,15,10,10,10,10,11,1,0,6,10,6,10,6,10,9,8,0,0,13,7,5,10,6,11,12,13,14,15,1,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,12,7,7,2,8,9,5,10,6,11,12,13,14,15,1,3,4,10,10,7,16,17,18,19,19,20,21,21,0,0,0,0,22,23,24,22,23,24,22,23,24,22,23,24,23,23,23,24,23,24,22,23,0,22,23,24,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,22,23,24,24,0,24,23,24,24,22,23,24,22,23,24,22,23,24,22,23,24,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,26,0,0,0,0,26,26,0,26,26,26,26,0,0,0,26,27,28,26,27,28,26,27,28,26,27,28,26,28,26,26,27,28,26,26,26,26,0,28,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,27,28,26,29,30,31,32,32,0,0,33,34,33,34,33,33,33,34,33,34,33,34,33,34,34,33,33,33,34,33,34,33,34,33,34,33,34,33,34,34,33,33,34,33,34,33,34,33,34,33,34],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["handle",6]],["result",4,[["oakstatus",4]]]],[[["str",15],["label",3]],["result",4,[["oakstatus",4]]]],[[["str",15],["label",3]],["result",4,[["oakstatus",4]]]],[[["handle",6]],["result",4,[["channelhalfdirection",4],["oakstatus",4]]]],[[["handle",6]],["result",4,[["option",4,[["nodemessage",3]]],["oakstatus",4]]]],[[["handle",6]],["result",4,[["option",4,[["nodemessage",3]]],["oakstatus",4]]]],[[["handle",6],["usize",15],["usize",15]],["result",4,[["option",4,[["nodereadstatus",4]]],["oakstatus",4]]]],[[["handle",6],["usize",15],["usize",15]],["result",4,[["option",4,[["nodereadstatus",4]]],["oakstatus",4]]]],[[["handle",6],["nodemessage",3]],["result",4,[["oakstatus",4]]]],[[["handle",6],["nodemessage",3]],["result",4,[["oakstatus",4]]]],[[]],[[],["channelhalfdirection",4]],[[],["runtimeproxy",3]],[[],["runtimeconfiguration",3]],[[],["grpcconfiguration",3]],[[],["signaturetable",3]],[[],["httpconfiguration",3]],[[],["secureserverconfiguration",3]],[[],["nodeprivilege",3]],[[],["nodeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["nodeid",3]],["ordering",4]],null,null,[[["str",15],["nodeid",3]],["string",3]],[[["applicationconfiguration",3],["permissionsconfiguration",3],["secureserverconfiguration",3],["signaturetable",3],["option",4,[["pathbuf",3]]]],["runtimeproxy",3]],[[]],[[],["runtimeconfiguration",3]],[[],["grpcconfiguration",3]],[[],["signaturetable",3]],[[],["httpconfiguration",3]],[[],["secureserverconfiguration",3]],[[],["nodeprivilege",3]],null,[[]],[[]],[[]],[[["channelhalfdirection",4]],["bool",15]],[[["nodeid",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["vec",3,[["metricfamily",3]]]],[[],["string",3]],[[],["u64",15]],[[["handle",6]],["result",4,[["label",3],["oakstatus",4]]]],[[],["rwlockreadguard",3,[["vecdeque",3,[["message",3]]]]]],[[["handle",6],["usize",15]],["result",4,[["labelreadstatus",4],["oakstatus",4]]]],[[["usize",15]],["result",4,[["labelreadstatus",4],["oakstatus",4]]]],[[["usize",15]],["result",4,[["labelreadstatus",4],["oakstatus",4]]]],null,null,null,[[["handle",6]],["result",4,[["handle",6],["oakstatus",4]]]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[["eventdetails",4]]],[[],["bool",15]],[[],["bool",15]],null,null,[[],["metrics",3]],null,null,null,[[["nodeid",3]],["bool",15]],[[["arc",3,[["channel",3]]],["channelhalfdirection",4]]],[[["hashset",3,[["tag",3]]],["hashset",3,[["tag",3]]]]],[[["str",15],["nodeconfiguration",3],["label",3],["handle",6]],["result",4,[["oakstatus",4]]]],[[["str",15],["nodeconfiguration",3],["label",3],["handle",6]],["result",4,[["oakstatus",4]]]],null,null,null,[[["nodeid",3]],["option",4,[["ordering",4]]]],null,null,null,null,[[]],null,[[["runtimeconfiguration",3]],["result",4,[["handle",6],["oakstatus",4]]]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["vec",3,[["channelreadstatus",4]]],["oakstatus",4]]]],[[],["result",4,[["vec",3,[["channelreadstatus",4]]],["oakstatus",4]]]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["clientinfo",3]],[[],["tokenerror",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["str",15],["str",15],["str",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["str",15]],["tokenerror",3]],[[["str",15]],["result",4,[["clientinfo",3],["box",3,[["error",8]]]]]],[[],["option",4,[["error",8]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["runtimeconfiguration",3]],["result",4,[["arc",3,[["runtime",3]]],["oakerror",4]]]],null,null,[[["grpcclientconfiguration",3]],["result",6,[["bool",15]]]],null,[[["httpclientconfiguration",3]],["bool",15]],null,null,null,[[["nodeconfiguration",3]],["result",6,[["bool",15]]]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["permissionsconfiguration",3]],[[]],[[],["permissionsconfiguration",3]],[[],["result",4]],[[["formatter",3]],["result",6]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["error",4]]],[[["decodeerror",4]]],[[["error",3]]],[[]],[[],["vec",3,[["roughtimeserver",3]]]],[[],["result",4,[["microssinceepoch",6],["roughtimeerror",4]]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["str",15],["str",15],["u16",15],["str",15]]],[[["vec",3,[["roughtimeserver",3]]],["usize",15],["u32",15],["u64",15],["usize",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["bitslice",3]],[[]],[[]],[[]],[[]],[[]],[[],["certificate",3]],[[],["tlsconfig",3]],[[]],[[]],[[],["tlsconfig",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[["str",15],["str",15]],["option",4]],[[["vec",3,[["u8",15]]]],["result",6,[["certificate",3]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"NodeId"],[4,"ReadStatus"],[4,"NodeReadStatus"],[4,"LabelReadStatus"],[4,"ChannelHalfDirection"],[3,"RuntimeConfiguration"],[3,"ChannelHalf"],[3,"AuxServer"],[3,"Runtime"],[3,"RuntimeProxy"],[3,"GrpcConfiguration"],[3,"SignatureTable"],[3,"HttpConfiguration"],[3,"SecureServerConfiguration"],[3,"NodePrivilege"],[13,"Success"],[13,"NeedsCapacity"],[13,"Success"],[13,"NeedsCapacity"],[13,"Success"],[13,"NeedsCapacity"],[3,"Claims"],[3,"ClientInfo"],[3,"TokenError"],[3,"PermissionsConfiguration"],[4,"RoughtimeError"],[3,"RoughtimeServer"],[3,"RoughtimeClient"],[13,"Base64Error"],[13,"IoError"],[13,"RoughenoughError"],[13,"NotEnoughOverlappingIntervals"],[3,"Certificate"],[3,"TlsConfig"]]},\
"oak_services":{"doc":"Type, constant and Wasm host function definitions for the …","t":[0,0,0,5,0,0,0,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,0,0,3,3,3,3,13,3,3,3,3,13,3,3,3,3,13,3,3,3,4,3,3,3,3,3,13,4,13,3,3,3,3,13,13,13,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,12,12,12,12,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["grpc","http","proto","encap_request","google","oak","rpc","Aborted","AlreadyExists","Cancelled","Code","DataLoss","DeadlineExceeded","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","OutOfRange","PermissionDenied","ResourceExhausted","Status","Unauthenticated","Unavailable","Unimplemented","Unknown","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","code","default","default","details","encoded_len","eq","eq","fmt","fmt","from","from","from_i32","hash","into","into","is_valid","message","ne","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","crypto","encap","log","roughtime","AeadDecryptRequest","AeadDecryptResponse","AeadEncryptRequest","AeadEncryptResponse","Binary","ComputeMacRequest","ComputeMacResponse","ComputePrfRequest","ComputePrfResponse","Crunchy","DeterministicAeadDecryptRequest","DeterministicAeadDecryptResponse","DeterministicAeadEncryptRequest","DeterministicAeadEncryptResponse","Json","KeyTemplate","KeysetBindRequest","KeysetBindResponse","KeysetFormat","KeysetGenerateRequest","KeysetPublicRequest","KeysetResponse","KeysetUnbindRequest","KmsProxyRequest","Legacy","OutputPrefixType","Raw","SignatureSignRequest","SignatureSignResponse","SignatureVerifyRequest","SignatureVerifyResponse","Tink","UnknownFormat","UnknownPrefix","VerifyMacRequest","VerifyMacResponse","associated_data","associated_data","associated_data","associated_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","ciphertext","ciphertext","ciphertext","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data","data","data","data","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encrypted_keyset","encrypted_keyset","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","hash","hash","inner_keyset_handle","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","keyset_generate_request","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","kms_identifier","mac_value","mac_value","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","output_length","output_prefix_type","output_prefix_type","partial_cmp","partial_cmp","plaintext","plaintext","plaintext","plaintext","prf_value","private_keyset_handle","private_keyset_handle","public_keyset_handle","set_format","set_format","set_output_prefix_type","signature","signature","template_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_url","value","TemplateData","TemplateId","TemplateName","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","fold","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","GrpcRequest","GrpcResponse","HeaderMap","HeaderValue","HttpRequest","HttpResponse","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","default","default","default","default","default","default","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","from","from","from","from","from","from","from","from","from","headers","headers","headers","into","into","into","into","into","into","into_iter","last","last","method","method_name","ne","ne","ne","ne","ne","ne","req_msg","rsp_msg","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uri","values","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","GetRoughtimeRequest","Roughtime","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","default","default","encode","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","fold","fold","from","from","into","into","ne","roughtime_usec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_services","","","oak_services::grpc","oak_services::proto","","oak_services::proto::google","oak_services::proto::google::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak","","","","oak_services::proto::oak::cryptooak_services::proto::oak::crypto::keyset_generate_request","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak::crypto::keyset_generate_request::TemplateId","","oak_services::proto::oak::encap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak::roughtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Encapsulate a protocol buffer message in a GrpcRequest …","","","","The operation was aborted, typically due to a concurrency …","The entity that a client attempted to create (e.g., file …","The operation was cancelled, typically by the caller.","The canonical error codes for Google APIs.","Unrecoverable data loss or corruption.","The deadline expired before the operation could complete. …","The operation was rejected because the system is not in a …","Internal errors.  This means that some invariants expected …","The client specified an invalid argument.  Note that this …","Some requested entity (e.g., file or directory) was not …","Not an error; returned on success","The operation was attempted past the valid range.  E.g., …","The caller does not have permission to execute the …","Some resource has been exhausted, perhaps a per-user …","The <code>Status</code> type defines a logical error model that is …","The request does not have valid authentication credentials …","The service is currently unavailable.  This is most likely …","The operation is not implemented or is not …","Unknown error.  For example, this error may be returned …","","","","","","","","","","","The status code, which should be an enum value of […","","","A list of messages that carry the error details.  There is …","","","","","","","","Converts an <code>i32</code> to a <code>Code</code>, or <code>None</code> if <code>value</code> is not a valid …","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Code</code>.","A developer-facing error message, which should be in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Local copy of Tink key template definition, to prevent …","","","","","","Common response type for acquiring keyset handleseturns the enum value of <code>format</code>, or the default if the …","Returns the enum value of <code>format</code>, or the default if the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OutputPrefixType</code>, or <code>None</code> if <code>value</code> is …","Converts an <code>i32</code> to a <code>KeysetFormat</code>, or <code>None</code> if <code>value</code> is not …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OutputPrefixType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>KeysetFormat</code>.","Nested message and enum types in <code>KeysetGenerateRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>output_prefix_type</code>, or the …","","","","","","","","","","","","Sets <code>format</code> to the provided enum value.","Sets <code>format</code> to the provided enum value.","Sets <code>output_prefix_type</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","in format type.googleapis.com/packagename.messagename","contains specific serialized *KeyFormat proto","serialized KeyTemplate","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around a HashMap representing the headers in …","Each header name in an HTTP request or HTTP response may …","Protocol buffer encoding representing an HTTP request.","Protocol buffer encoding representing an HTTP response.","The body of the request.","The body of the response.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The HTTP request headers.","The HTTP response headers.","","","","","","","","Convert into an iterator over (http::header::HeaderName, …","","The last field indicates that this is definitely the final …","The HTTP request method used.","","","","","","","","The body of the request. Usually a serialized protobuf …","The body of the response. Usually a serialized protobuf …","","The HTTP status code.","","","","","","","","","","","","","","","","","","","","","","","","","The URI (including scheme and authority) to which the …","","","","","Logging levels as defined in …","A convenience message that may be used as init message by …","This message defines the data that is passed as a log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the …","The verbosity level of the message.","The line containing the message.","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time is UTC and is given as microseconds since the UNIX …","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,2,1,2,1,2,2,1,2,1,1,2,2,1,2,2,2,1,2,1,2,1,1,1,2,1,1,2,2,1,2,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,3,0,0,0,0,4,0,0,0,0,3,0,0,0,0,0,0,0,0,0,4,0,4,0,0,0,0,4,3,4,0,0,5,6,7,8,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,17,6,19,8,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,4,3,21,23,25,27,29,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,13,15,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,13,14,13,14,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,4,3,4,3,14,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,4,3,0,11,13,14,5,6,7,8,21,23,25,16,21,24,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,23,24,25,26,27,28,29,25,9,9,4,3,5,18,7,20,26,12,27,29,13,14,9,28,29,10,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,9,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,33,0,0,0,0,0,0,34,35,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,36,37,34,35,38,39,36,37,34,35,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,36,37,34,34,35,35,38,38,39,34,35,38,36,37,34,35,38,39,38,36,37,34,36,36,37,34,35,38,39,36,37,37,35,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,34,39,40,40,40,0,0,0,40,40,40,41,42,40,41,42,40,41,42,41,42,40,41,42,40,40,41,42,41,42,40,41,42,41,42,41,42,40,41,41,42,40,41,42,40,41,42,40,40,40,41,42,40,40,41,41,41,42,41,41,42,40,41,41,42,40,41,42,40,41,42,40,41,42,40,0,0,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,44,44,43,44,43,44,43,44,43,44],"f":[null,null,null,[[["str",15]],["option",4,[["grpcrequest",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["status",3]],[[],["code",4]],[[]],[[]],[[["code",4]],["ordering",4]],null,[[]],[[],["code",4]],null,[[],["usize",15]],[[["status",3]],["bool",15]],[[["code",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["code",4]]]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],null,[[["status",3]],["bool",15]],[[["code",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keytemplate",3]],[[],["keysetgeneraterequest",3]],[[],["keysetresponse",3]],[[],["keysetpublicrequest",3]],[[],["keysetunbindrequest",3]],[[],["keysetbindrequest",3]],[[],["keysetbindresponse",3]],[[],["kmsproxyrequest",3]],[[],["aeadencryptrequest",3]],[[],["aeadencryptresponse",3]],[[],["aeaddecryptrequest",3]],[[],["aeaddecryptresponse",3]],[[],["deterministicaeadencryptrequest",3]],[[],["deterministicaeadencryptresponse",3]],[[],["deterministicaeaddecryptrequest",3]],[[],["deterministicaeaddecryptresponse",3]],[[],["verifymacrequest",3]],[[],["verifymacresponse",3]],[[],["computemacrequest",3]],[[],["computemacresponse",3]],[[],["computeprfrequest",3]],[[],["computeprfresponse",3]],[[],["signaturesignrequest",3]],[[],["signaturesignresponse",3]],[[],["signatureverifyrequest",3]],[[],["signatureverifyresponse",3]],[[],["outputprefixtype",4]],[[],["keysetformat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["outputprefixtype",4]],["ordering",4]],[[["keysetformat",4]],["ordering",4]],null,null,null,null,null,[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["outputprefixtype",4]],[[],["keysetformat",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,[[["keytemplate",3]],["bool",15]],[[["keysetgeneraterequest",3]],["bool",15]],[[["keysetresponse",3]],["bool",15]],[[["keysetpublicrequest",3]],["bool",15]],[[["keysetunbindrequest",3]],["bool",15]],[[["keysetbindrequest",3]],["bool",15]],[[["keysetbindresponse",3]],["bool",15]],[[["kmsproxyrequest",3]],["bool",15]],[[["aeadencryptrequest",3]],["bool",15]],[[["aeadencryptresponse",3]],["bool",15]],[[["aeaddecryptrequest",3]],["bool",15]],[[["aeaddecryptresponse",3]],["bool",15]],[[["deterministicaeadencryptrequest",3]],["bool",15]],[[["deterministicaeadencryptresponse",3]],["bool",15]],[[["deterministicaeaddecryptrequest",3]],["bool",15]],[[["deterministicaeaddecryptresponse",3]],["bool",15]],[[["verifymacrequest",3]],["bool",15]],[[["verifymacresponse",3]],["bool",15]],[[["computemacrequest",3]],["bool",15]],[[["computemacresponse",3]],["bool",15]],[[["computeprfrequest",3]],["bool",15]],[[["computeprfresponse",3]],["bool",15]],[[["signaturesignrequest",3]],["bool",15]],[[["signaturesignresponse",3]],["bool",15]],[[["signatureverifyrequest",3]],["bool",15]],[[["signatureverifyresponse",3]],["bool",15]],[[["outputprefixtype",4]],["bool",15]],[[["keysetformat",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keysetformat",4]],[[],["keysetformat",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["outputprefixtype",4]]]],[[["i32",15]],["option",4,[["keysetformat",4]]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["keytemplate",3]],["bool",15]],[[["keysetgeneraterequest",3]],["bool",15]],[[["keysetresponse",3]],["bool",15]],[[["keysetpublicrequest",3]],["bool",15]],[[["keysetunbindrequest",3]],["bool",15]],[[["keysetbindrequest",3]],["bool",15]],[[["keysetbindresponse",3]],["bool",15]],[[["kmsproxyrequest",3]],["bool",15]],[[["aeadencryptrequest",3]],["bool",15]],[[["aeadencryptresponse",3]],["bool",15]],[[["aeaddecryptrequest",3]],["bool",15]],[[["aeaddecryptresponse",3]],["bool",15]],[[["deterministicaeadencryptrequest",3]],["bool",15]],[[["deterministicaeadencryptresponse",3]],["bool",15]],[[["deterministicaeaddecryptrequest",3]],["bool",15]],[[["deterministicaeaddecryptresponse",3]],["bool",15]],[[["verifymacrequest",3]],["bool",15]],[[["computemacrequest",3]],["bool",15]],[[["computemacresponse",3]],["bool",15]],[[["computeprfrequest",3]],["bool",15]],[[["computeprfresponse",3]],["bool",15]],[[["signaturesignrequest",3]],["bool",15]],[[["signaturesignresponse",3]],["bool",15]],[[["signatureverifyrequest",3]],["bool",15]],null,[[],["outputprefixtype",4]],null,[[["outputprefixtype",4]],["option",4,[["ordering",4]]]],[[["keysetformat",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,[[["keysetformat",4]]],[[["keysetformat",4]]],[[["outputprefixtype",4]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[],["templateid",4]],[[]],[[]],[[],["usize",15]],[[["templateid",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["templateid",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcrequest",3]],[[],["grpcresponse",3]],[[],["httprequest",3]],[[],["httpresponse",3]],[[],["headermap",3]],[[],["headervalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["httprequest",3]],["bool",15]],[[["httpresponse",3]],["bool",15]],[[["headermap",3]],["bool",15]],[[["headervalue",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["request",3,[["vec",3,[["u8",15]]]]]],["httprequest",3]],[[]],[[["response",3]]],[[]],[[]],[[["headermap",3,[["headervalue",3]]]]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["httprequest",3]],["bool",15]],[[["httpresponse",3]],["bool",15]],[[["headermap",3]],["bool",15]],[[["headervalue",3]],["bool",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["getroughtimerequest",3]],[[],["roughtime",3]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["getroughtimerequest",3]],["bool",15]],[[["roughtime",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["roughtime",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Code"],[3,"Status"],[4,"KeysetFormat"],[4,"OutputPrefixType"],[3,"AeadEncryptRequest"],[3,"AeadDecryptRequest"],[3,"DeterministicAeadEncryptRequest"],[3,"DeterministicAeadDecryptRequest"],[3,"KeyTemplate"],[3,"KeysetGenerateRequest"],[3,"KeysetResponse"],[3,"KeysetPublicRequest"],[3,"KeysetUnbindRequest"],[3,"KeysetBindRequest"],[3,"KeysetBindResponse"],[3,"KmsProxyRequest"],[3,"AeadEncryptResponse"],[3,"AeadDecryptResponse"],[3,"DeterministicAeadEncryptResponse"],[3,"DeterministicAeadDecryptResponse"],[3,"VerifyMacRequest"],[3,"VerifyMacResponse"],[3,"ComputeMacRequest"],[3,"ComputeMacResponse"],[3,"ComputePrfRequest"],[3,"ComputePrfResponse"],[3,"SignatureSignRequest"],[3,"SignatureSignResponse"],[3,"SignatureVerifyRequest"],[3,"SignatureVerifyResponse"],[4,"TemplateId"],[13,"TemplateData"],[13,"TemplateName"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"HeaderMap"],[3,"HeaderValue"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"],[3,"GetRoughtimeRequest"],[3,"Roughtime"]]},\
"oak_sign":{"doc":"","t":[17,3,17,17,17,3,11,11,11,11,11,11,11,11,11,5,11,5,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,12,5,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5],"n":["HASH_TAG","KeyPair","PRIVATE_KEY_TAG","PUBLIC_KEY_TAG","SIGNATURE_TAG","SignatureBundle","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create","decode_public_key_der","default","encode_public_key_der","eq","fmt","fmt","from","from","from","from_pem","from_pem_file","generate","get_sha256","get_sha256_hex","hash","into","into","key_pair_pkcs_8","parse","public_key_der","public_key_der","read_pem_file","sign","signed_hash","to_owned","to_owned","to_pem_file","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","write_pem_file"],"q":["oak_sign","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Convenience struct that encapsulates …","","","","","","","","","","","","","Signs a SHA-256 hash of the <code>input</code> using <code>private_key</code>.","Decodes the public key as a binary DER-encoded …","","Encodes the public key as a binary DER-encoded …","","","","","","","Parses public key, signature and SHA-256 hash encoded …","Parses public key, signature and SHA-256 hash encoded from …","Generates a Ed25519 key pair.","Computes a SHA-256 digest of <code>input</code> and returns it in a …","Computes a SHA-256 digest of <code>bytes</code> and returns it in a hex …","","","","Returns a PKCS#8 v2 encoded key pair.","Parses a Ed25519 key pair from a PKCS#8 v2 encoded …","Returns the public key as a binary DER-encoded …","Public key as a binary DER-encoded <code>SubjectPublicKeyInfo</code> …","","","","","","","","","","","","","Verifies the signature validity.","","",""],"i":[0,0,0,0,0,0,1,2,1,2,1,2,1,2,2,0,2,0,1,1,2,1,2,2,2,2,1,0,0,2,1,2,1,1,1,2,0,1,2,1,2,2,1,2,1,2,1,2,2,1,2,0],"f":[null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["signaturebundle",3]],[[]],[[]],[[["keypair",3]],["result",6,[["signaturebundle",3]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["signaturebundle",3]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["modulesignature",3]]],[[],["result",6,[["signaturebundle",3]]]],[[["str",15]],["result",6,[["signaturebundle",3]]]],[[],["result",6,[["keypair",3]]]],[[],["vec",3,[["u8",15]]]],[[],["string",3]],null,[[]],[[]],[[],["vec",3,[["u8",15]]]],[[],["result",6,[["keypair",3]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],null,[[["str",15]],["result",6,[["vec",3,[["u8",15]]]]]],[[],["vec",3,[["u8",15]]]],null,[[]],[[]],[[["str",15]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6]],[[]],[[]],[[["str",15],["str",15]],["result",6]]],"p":[[3,"KeyPair"],[3,"SignatureBundle"]]},\
"oak_sign_bin":{"doc":"An utility binary to sign files using Ed25519. …","t":[4,3,13,3,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Command","Generate","Generate","Opt","Sign","Sign","Verify","Verify","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clap","clap","clap","clap","clap","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","input_file","input_string","into","into","into","into","into","main","private_key","private_key","public_key","signature_file","signature_file","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","0","0","0"],"q":["oak_sign_bin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_sign_bin::Command","",""],"d":["Available commands for <code>oak_sign</code>.","","","Command line options for <code>oak_sign</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Main execution point for <code>oak_sign</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,0,0,1,0,1,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,2,1,3,4,5,2,1,3,4,5,4,4,2,1,3,4,5,0,3,4,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,2,1,3,4,5,6,7,8],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["opt",3]],[[],["command",4]],[[],["generate",3]],[[],["sign",3]],[[],["verify",3]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",6]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null],"p":[[4,"Command"],[3,"Opt"],[3,"Generate"],[3,"Sign"],[3,"Verify"],[13,"Generate"],[13,"Sign"],[13,"Verify"]]},\
"oak_tests":{"doc":"Test utilities to help with unit testing of Oak SDK code.","t":[13,4,13,11,11,11,11,5,5,11,11,11,11,11,11,5,5,5,5,5,5,5,11,11,11,11],"n":["Debug","Profile","Release","as_any","as_any_mut","borrow","borrow_mut","channel_and_interceptor","compile_rust_wasm","from","into","into_any","into_any_arc","into_any_rc","into_request","private_channel_and_interceptor","public_channel_and_interceptor","run_single_module","run_single_module_default","run_single_module_with_config","runtime_config","runtime_config_wasm","try_from","try_into","type_id","vzip"],"q":["oak_tests","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Build a labeled channel and interceptor suitable for …","Uses cargo to compile a Rust manifest to Wasm bytes.","","","","","","","Build a channel and a label interceptor suitable for …","Build a public-untrusted channel and interceptor suitable …","Convenience helper to build and run a single-Node …","Convenience helper to build and run a single-Node …","Convenience helper to build and run a single-Node …","Build the configuration needed to launch a test Runtime …","Build the configuration needed to launch a test Runtime …","","","",""],"i":[1,0,1,1,1,1,1,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1],"f":[null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[["label",3]]],[[["str",15],["profile",4]],["result",6,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[["keypair",3]]],[[]],[[["str",15],["permissionsconfiguration",3]],["result",4,[["arc",3,[["runtime",3]]],["oakerror",4]]]],[[["permissionsconfiguration",3]],["result",4,[["arc",3,[["runtime",3]]],["oakerror",4]]]],[[["str",15],["configmap",3],["permissionsconfiguration",3]],["result",4,[["arc",3,[["runtime",3]]],["oakerror",4]]]],[[["str",15],["configmap",3],["permissionsconfiguration",3]],["runtimeconfiguration",3]],[[["hashmap",3,[["string",3],["vec",3,[["u8",15]]]]],["str",15],["str",15],["configmap",3],["permissionsconfiguration",3],["signaturetable",3]],["runtimeconfiguration",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[4,"Profile"]]},\
"oak_tls_attestation":{"doc":"TLS Attestation Service implementation.","t":[3,12,11,11,11,11,11,11,11,12,11,5,0,12,11,11,11,11,3,3,12,11,11,11,11,12,11,11,11,11,11,11,12,5,5,11,11,11,11,11,11],"n":["Opt","backend_uri","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","https_listen_address","into","main","server","tee_certificate","to_owned","try_from","try_into","type_id","HyperAcceptor","Identity","acceptor","borrow","borrow","borrow_mut","borrow_mut","certificate","create","from","from","into","into","poll_accept","private_key","proxy","run_server","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_tls_attestation","","","","","","","","","","","","","","","","","","oak_tls_attestation::server","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Convenience structure for representing TLS identities that …","","","","","","","Generates private key and TLS certificate that contains …","","","","","","","Proxies HTTPS requests to an HTTP server specified by <code>uri</code>.","Runs HTTPS proxy server that provides self-signed TLS …","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,2,3,2,3,2,3,3,3,2,3,2,2,3,0,0,3,2,3,2,3,2],"f":[null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],null,[[]],[[],["result",6]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],[[]],[[]],[[]],null,[[["vec",3,[["u8",15]]]],["result",6]],[[]],[[]],[[]],[[]],[[["pin",3],["context",3]],["poll",4,[["option",4,[["result",4]]]]]],null,[[["request",3,[["body",3]]],["client",3,[["httpconnector",3]]],["uri",3]]],[[["str",15],["uri",3],["vec",3,[["u8",15]]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Opt"],[3,"HyperAcceptor"],[3,"Identity"]]},\
"oak_utils":{"doc":"","t":[3,3,3,11,11,11,11,11,11,12,12,5,5,11,11,11,12,12,12,11,11,11,5,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11],"n":["CodegenOptions","ExternPath","ProtoOptions","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_client","build_server","compile_protos","compile_protos_with_options","default","default","default","derive_handle_visit","experimental_async","extern_paths","from","from","from","generate_grpc_code","generate_services","into","into","into","new","out_dir_override","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["oak_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Options for building gRPC code.","","Options for generating Protocol buffer Rust types.","","","","","","","Specify whether to build client related code.","Specify whether to build server related code.","Build Rust code corresponding to a set of protocol buffer …","Like <code>compile_protos</code>, but allows for configuring options …","","","","Automatically derive the <code>HandleVisit</code> trait from the Oak …","Enable service code generated for the async SDK.","Specify externally provided Protobuf packages or types.","","","","Generate gRPC code from Protobuf using <code>tonic</code> library.","Generate Oak-specific service code for inter-node …","","","","","","","","","","","","","",""],"i":[0,0,0,1,2,3,1,2,3,2,2,0,0,1,2,3,1,1,2,1,2,3,0,1,1,2,3,3,1,1,2,3,1,2,3,1,2,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[["protooptions",3]]],[[],["protooptions",3]],[[],["codegenoptions",3]],[[],["externpath",3]],null,null,null,[[]],[[]],[[]],[[["str",15],["codegenoptions",3]],["result",6]],null,[[]],[[]],[[]],[[["str",15],["str",15]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ProtoOptions"],[3,"CodegenOptions"],[3,"ExternPath"]]},\
"private_set_intersection":{"doc":"","t":[5,5],"n":["oak_main","router"],"q":["private_set_intersection",""],"d":["",""],"i":[0,0],"f":[[[["u64",15]]],[[["u64",15]]]],"p":[]},\
"private_set_intersection_client":{"doc":"","t":[0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","GetIntersectionRequest","GetIntersectionResponse","SubmitSetRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","ne","ne","ne","private_set_intersection_client","set_id","set_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","values","vzip","vzip","vzip","PrivateSetIntersectionClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_intersection","into","into_request","new","send_gzip","submit_set","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["private_set_intersection_client","private_set_intersection_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","private_set_intersection_client::proto::private_set_intersection_client","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Request the final private set intersection specified by …","","","","Compress requests with <code>gzip</code>.","Submit a private set that will be contributed to the set …","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,1,2,1,2,3,1,2,3,1,2,3,1,2,3,1,3,1,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["submitsetrequest",3]],[[],["getintersectionrequest",3]],[[],["getintersectionresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["submitsetrequest",3]],["bool",15]],[[["getintersectionrequest",3]],["bool",15]],[[["getintersectionresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["submitsetrequest",3]],["bool",15]],[[["getintersectionrequest",3]],["bool",15]],[[["getintersectionresponse",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["privatesetintersectionclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["privatesetintersectionclient",3,[["interceptedservice",3]]]]],"p":[[3,"SubmitSetRequest"],[3,"GetIntersectionRequest"],[3,"GetIntersectionResponse"],[3,"PrivateSetIntersectionClient"]]},\
"private_set_intersection_grpc":{"doc":"","t":[0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","GetIntersectionRequest","GetIntersectionResponse","SubmitSetRequest","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","into","into","into","into_request","into_request","into_request","ne","ne","ne","private_set_intersection_client","set_id","set_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","values","vzip","vzip","vzip","PrivateSetIntersectionClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_intersection","into","into_request","new","send_gzip","submit_set","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["private_set_intersection_grpc","private_set_intersection_grpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","private_set_intersection_grpc::proto::private_set_intersection_client","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Request the final private set intersection specified by …","","","","Compress requests with <code>gzip</code>.","Submit a private set that will be contributed to the set …","","","","","",""],"i":[0,0,0,0,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,0,1,2,1,2,3,1,2,3,1,2,3,1,2,3,1,3,1,2,3,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["submitsetrequest",3]],[[],["getintersectionrequest",3]],[[],["getintersectionresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["submitsetrequest",3]],["bool",15]],[[["getintersectionrequest",3]],["bool",15]],[[["getintersectionresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["submitsetrequest",3]],["bool",15]],[[["getintersectionrequest",3]],["bool",15]],[[["getintersectionresponse",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["privatesetintersectionclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["privatesetintersectionclient",3,[["interceptedservice",3]]]]],"p":[[3,"SubmitSetRequest"],[3,"GetIntersectionRequest"],[3,"GetIntersectionResponse"],[3,"PrivateSetIntersectionClient"]]},\
"private_set_intersection_handler":{"doc":"Private Set Intersection example for Project Oak.","t":[3,17,11,11,11,11,11,11,11,5,11,11,0,11,11,11,11,12,3,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["Handler","SET_THRESHOLD","borrow","borrow_mut","create","default","from","get_intersection","handle_command","handler","into","invoke","proto","submit_set","try_from","try_into","type_id","0","GetIntersectionRequest","GetIntersectionResponse","PrivateSetIntersection","PrivateSetIntersectionClient","PrivateSetIntersectionDispatcher","SubmitSetRequest","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","decode","decode","decode","default","default","default","encode","encode","encode","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","fold","fold","fold","from","from","from","from","from","get_intersection","get_intersection","into","into","into","into","into","ne","ne","ne","server_method","set_id","set_id","submit_set","submit_set","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","values","values"],"q":["private_set_intersection_handler","","","","","","","","","","","","","","","","","private_set_intersection_handler::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Maximum number of contributed private sets.","","","","","","","Handle incoming gRPC events for a <code>ServerNode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,0,1,1,0,1,1,1,1,2,0,0,0,0,0,0,3,2,4,5,6,3,2,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,4,5,6,3,2,4,5,6,7,2,3,2,4,5,6,4,5,6,3,4,5,7,2,4,5,6,3,2,4,5,6,3,2,4,5,6,3,2,4,5,6,4,6],"f":[null,null,[[]],[[]],[[]],[[],["handler",3]],[[]],[[["getintersectionrequest",3]],["result",6,[["getintersectionresponse",3]]]],[[["grpcinvocation",3]],["result",4,[["error",3]]]],[[["u64",15]]],[[]],[[["str",15],["channelresponsewriter",3]]],null,[[["submitsetrequest",3]],["result",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["submitsetrequest",3]],[[],["getintersectionrequest",3]],[[],["getintersectionresponse",3]],[[]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["submitsetrequest",3]],["bool",15]],[[["getintersectionrequest",3]],["bool",15]],[[["getintersectionresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["getintersectionrequest",3]],["result",6,[["getintersectionresponse",3]]]],[[["getintersectionrequest",3]],["result",6,[["getintersectionresponse",3]]]],[[]],[[]],[[]],[[]],[[]],[[["submitsetrequest",3]],["bool",15]],[[["getintersectionrequest",3]],["bool",15]],[[["getintersectionresponse",3]],["bool",15]],[[["str",15]],["option",4,[["invocable",8]]]],null,null,[[["submitsetrequest",3]],["result",6]],[[["submitsetrequest",3]],["result",6]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null],"p":[[3,"Handler"],[3,"PrivateSetIntersectionClient"],[3,"PrivateSetIntersectionDispatcher"],[3,"SubmitSetRequest"],[3,"GetIntersectionRequest"],[3,"GetIntersectionResponse"],[8,"PrivateSetIntersection"]]},\
"prost":{"doc":"","t":[3,3,8,11,11,11,11,10,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,11,11,10,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["DecodeError","EncodeError","Message","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","decode","decode","decode_length_delimited","decode_length_delimited","decode_length_delimiter","encode","encode","encode_length_delimited","encode_length_delimited","encode_length_delimited_to_vec","encode_length_delimited_to_vec","encode_length_delimiter","encode_to_vec","encode_to_vec","encoded_len","eq","eq","fmt","fmt","fmt","fmt","from","from","into","into","length_delimiter_len","merge","merge","merge_length_delimited","merge_length_delimited","ne","ne","remaining","required_capacity","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["prost","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["A Protobuf message decoding error.","A Protobuf message encoding error.","A Protocol Buffers message.","","","","","Clears the message, resetting all fields to their default.","","","","","Decodes an instance of the message from a buffer.","Decodes an instance of the message from a buffer.","Decodes a length-delimited instance of the message from …","Decodes a length-delimited instance of the message from …","Decodes a length delimiter from the buffer.","Encodes the message to a buffer.","Encodes the message to a buffer.","Encodes the message with a length-delimiter to a buffer.","Encodes the message with a length-delimiter to a buffer.","Encodes the message with a length-delimiter to a newly …","Encodes the message with a length-delimiter to a newly …","Encodes a length delimiter to the buffer.","Encodes the message to a newly allocated buffer.","Encodes the message to a newly allocated buffer.","Returns the encoded length of the message without a length …","","","","","","","","","","","Returns the encoded length of a length delimiter.","Decodes an instance of the message from a buffer, and …","Decodes an instance of the message from a buffer, and …","Decodes a length-delimited instance of the message from …","Decodes a length-delimited instance of the message from …","","","Returns the remaining length in the provided buffer at the …","Returns the required buffer capacity to encode the message.","","","","","","","","","",""],"i":[0,0,0,1,2,1,2,3,1,2,1,2,3,3,3,3,0,3,3,3,3,3,3,0,3,3,3,1,2,1,1,2,2,1,2,1,2,0,3,3,3,3,1,2,2,2,1,2,1,2,1,2,1,2,1,2],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["decodeerror",3]],[[],["encodeerror",3]],[[]],[[]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["usize",15],["decodeerror",3]]]],[[],["result",4,[["encodeerror",3]]]],[[],["result",4,[["encodeerror",3]]]],[[],["result",4,[["encodeerror",3]]]],[[],["result",4,[["encodeerror",3]]]],[[],["vec",3,[["u8",15]]]],[[],["vec",3,[["u8",15]]]],[[["usize",15]],["result",4,[["encodeerror",3]]]],[[],["vec",3,[["u8",15]]]],[[],["vec",3,[["u8",15]]]],[[],["usize",15]],[[["decodeerror",3]],["bool",15]],[[["encodeerror",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["decodeerror",3]]]],[[],["result",4,[["decodeerror",3]]]],[[["decodeerror",3]],["bool",15]],[[["encodeerror",3]],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"DecodeError"],[3,"EncodeError"],[8,"Message"]]},\
"prost_build":{"doc":"<code>prost-build</code> compiles <code>.proto</code> files into Rust.","t":[3,3,3,3,8,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,12,11,11,11,11,12,12,12,12,12,11,12,12,11,12,12,12,12,12,5,11,5,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Comments","Config","Method","Service","ServiceGenerator","append_with_indent","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btree_map","bytes","client_streaming","comments","comments","compile_protos","compile_protos","compile_well_known_types","default","disable_comments","extern_path","field_attribute","file_descriptor_set_path","finalize","finalize_package","fmt","fmt","fmt","fmt","from","from","from","from","generate","input_proto_type","input_type","into","into","into","into","leading","leading_detached","methods","name","name","new","options","options","out_dir","output_proto_type","output_type","package","proto_name","proto_name","protoc","protoc_arg","protoc_include","retain_enum_prefix","server_streaming","service_generator","trailing","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_attribute","type_id","type_id","type_id","type_id"],"q":["prost_build","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Comments on a Protobuf item.","Configuration options for Protobuf code generation.","A service method descriptor.","A service descriptor.","A service generator takes a service descriptor and …","Appends the comments to a buffer with indentation.","","","","","","","","","Configure the code generator to generate Rust <code>BTreeMap</code> …","Configure the code generator to generate Rust <code>bytes::Bytes</code> …","Identifies if client streams multiple client messages.","The service comments.","The method comments.","Compile <code>.proto</code> files into Rust files during a Cargo build.","Compile <code>.proto</code> files into Rust files during a Cargo build …","Configures the code generator to not use the <code>prost_types</code> …","","Configures the code generator to omit documentation …","Declare an externally provided Protobuf package or type.","Add additional attribute to matched fields.","When set, the <code>FileDescriptorSet</code> generated by <code>protoc</code> is …","Finalizes the generation process.","Finalizes the generation process for an entire protobuf …","","","","","","","","","Generates a Rust interface or implementation for a …","The input Protobuf type.","The input Rust type.","","","","","Leading comments.","Leading detached blocks of comments.","The service methods.","The service name in Rust style.","The name of the method in Rust style.","Creates a new code generator configuration with default …","The service options.","The method options.","Configures the output directory where generated Rust files …","The output Protobuf type.","The output Rust type.","The package name as it appears in the .proto file.","The service name as it appears in the .proto file.","The name of the method as it appears in the .proto file.","Returns the path to the <code>protoc</code> binary.","Add an argument to the <code>protoc</code> protobuf compilation …","Returns the path to the Protobuf include directory.","Configures the code generator to not strip the enum name …","Identifies if server streams multiple server messages.","Configures the code generator to use the provided service …","Trailing comments.","","","","","","","","","Add additional attribute to matched messages, enums and …","","","",""],"i":[0,0,0,0,0,1,2,1,3,4,2,1,3,4,2,2,4,3,4,0,2,2,2,2,2,2,2,5,5,2,1,3,4,2,1,3,4,5,4,4,2,1,3,4,1,1,3,3,4,2,3,4,2,4,4,3,3,4,0,2,0,2,4,2,1,2,1,3,4,2,1,3,4,2,2,1,3,4],"f":[null,null,null,null,null,[[["u8",15],["string",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["result",6]],[[],["result",6]],[[]],[[],["config",3]],[[]],[[]],[[]],[[]],[[["string",3]]],[[["str",15],["string",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["service",3],["string",3]]],null,null,[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["config",3]],null,null,[[]],null,null,null,null,null,[[],["pathbuf",3]],[[]],[[],["pathbuf",3]],[[]],null,[[["box",3,[["servicegenerator",8]]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Comments"],[3,"Config"],[3,"Service"],[3,"Method"],[8,"ServiceGenerator"]]},\
"prost_derive":{"doc":"","t":[24,24,24],"n":["Enumeration","Message","Oneof"],"q":["prost_derive","",""],"d":["","",""],"i":[0,0,0],"f":[null,null,null],"p":[]},\
"prost_types":{"doc":"Protocol Buffers well-known types.","t":[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,13,3,3,3,13,13,3,3,3,3,3,4,3,3,3,3,3,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,12,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,12,0,0,12,12,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,11,11,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,11,12,11,12,11,12,12,11,12,11,12,12,11,12,11,12,12,11,12,11,12,11,12,12,12,0,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,12,12,12,12,11,12,12,11,12,12,12,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,12,11,12,12,11,11,12,11,12,11,12,11,12,11,12,11,12,11,12,12,11,12,12,12,12,12,12,12,12,12,12,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,11,12,11,12,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,12,12,12,12,12,12,12,12,12,0,12,12,12,12,12,11,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,12,11,12,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,13,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,4,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,12,11,11,11,11,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,12,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Any","Api","DescriptorProto","Duration","Enum","EnumDescriptorProto","EnumOptions","EnumValue","EnumValueDescriptorProto","EnumValueOptions","ExtensionRangeOptions","Field","FieldDescriptorProto","FieldMask","FieldOptions","FileDescriptorProto","FileDescriptorSet","FileOptions","GeneratedCodeInfo","ListValue","MessageOptions","Method","MethodDescriptorProto","MethodOptions","Mixin","NullValue","NullValue","OneofDescriptorProto","OneofOptions","Option","Proto2","Proto3","ServiceDescriptorProto","ServiceOptions","SourceCodeInfo","SourceContext","Struct","Syntax","Timestamp","TimestampOutOfSystemRangeError","Type","UninterpretedOption","Value","aggregate_value","aggregate_value","allow_alias","allow_alias","annotation","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cardinality","cardinality","cc_enable_arenas","cc_enable_arenas","cc_generic_services","cc_generic_services","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","client_streaming","client_streaming","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","compiler","csharp_namespace","csharp_namespace","ctype","ctype","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_value","default_value","default_value","dependency","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","deprecated","descriptor_proto","double_value","double_value","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","enum_descriptor_proto","enum_type","enum_type","enumvalue","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extendee","extendee","extension","extension","extension_range","field","field","field_descriptor_proto","field_options","fields","fields","file","file_name","file_options","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","generated_code_info","go_package","go_package","hash","hash","idempotency_level","idempotency_level","identifier_value","identifier_value","input_type","input_type","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","java_generate_equals_and_hash","java_generate_equals_and_hash","java_generic_services","java_generic_services","java_multiple_files","java_multiple_files","java_outer_classname","java_outer_classname","java_package","java_package","java_string_check_utf8","java_string_check_utf8","json_name","json_name","json_name","jstype","jstype","kind","kind","kind","label","label","lazy","lazy","location","map_entry","map_entry","message_set_wire_format","message_set_wire_format","message_type","message_type","message_type","method","method_options","methods","mixins","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","name","nanos","nanos","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","negative_int_value","negative_int_value","nested_type","no_standard_descriptor_accessor","no_standard_descriptor_accessor","normalize","normalize","number","number","number","number","number","number","objc_class_prefix","objc_class_prefix","oneof_decl","oneof_index","oneof_index","oneof_index","oneofs","optimize_for","optimize_for","options","options","options","options","options","options","options","options","options","options","options","options","options","options","output_type","output_type","package","package","packed","packed","packed","partial_cmp","partial_cmp","paths","php_class_prefix","php_class_prefix","php_generic_services","php_generic_services","php_metadata_namespace","php_metadata_namespace","php_namespace","php_namespace","positive_int_value","positive_int_value","proto3_optional","proto3_optional","public_dependency","py_generic_services","py_generic_services","request_streaming","request_type_url","reserved_name","reserved_name","reserved_range","reserved_range","response_streaming","response_type_url","root","ruby_package","ruby_package","seconds","seconds","server_streaming","server_streaming","service","set_cardinality","set_ctype","set_idempotency_level","set_jstype","set_kind","set_label","set_optimize_for","set_syntax","set_syntax","set_syntax","set_syntax","set_type","source_code_info","source_code_info","source_context","source_context","source_context","string_value","string_value","swift_prefix","swift_prefix","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","syntax","timestamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","type_name","type_url","type_url","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","uninterpreted_option","value","value","value","value","values","version","weak","weak","weak_dependency","CodeGeneratorRequest","CodeGeneratorResponse","Version","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","code_generator_response","compiler_version","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","error","error","file","file_to_generate","fmt","fmt","fmt","from","from","from","into","into","into","major","major","minor","minor","ne","ne","ne","parameter","parameter","patch","patch","proto_file","suffix","suffix","supported_features","supported_features","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","Feature","File","None","Proto3Optional","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","content","content","default","default","encoded_len","eq","eq","fmt","fmt","from","from","from_i32","generated_code_info","hash","insertion_point","insertion_point","into","into","is_valid","name","name","ne","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","ExtensionRange","ReservedRange","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","end","end","end","end","eq","eq","fmt","fmt","from","from","into","into","ne","ne","options","start","start","start","start","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","EnumReservedRange","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","end","end","eq","fmt","from","into","ne","start","start","to_owned","try_from","try_into","type_id","Cardinality","Kind","Optional","Repeated","Required","TypeBool","TypeBytes","TypeDouble","TypeEnum","TypeFixed32","TypeFixed64","TypeFloat","TypeGroup","TypeInt32","TypeInt64","TypeMessage","TypeSfixed32","TypeSfixed64","TypeSint32","TypeSint64","TypeString","TypeUint32","TypeUint64","TypeUnknown","Unknown","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_i32","from_i32","hash","hash","into","into","is_valid","is_valid","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","Bool","Bytes","Double","Enum","Fixed32","Fixed64","Float","Group","Int32","Int64","Label","Message","Optional","Repeated","Required","Sfixed32","Sfixed64","Sint32","Sint64","String","Type","Uint32","Uint64","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_i32","from_i32","hash","hash","into","into","is_valid","is_valid","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CType","Cord","JsNormal","JsNumber","JsString","JsType","String","StringPiece","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","from","from","from_i32","from_i32","hash","hash","into","into","is_valid","is_valid","partial_cmp","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","CodeSize","LiteRuntime","OptimizeMode","Speed","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Annotation","begin","begin","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","end","end","eq","fmt","from","into","ne","path","source_file","source_file","to_owned","try_from","try_into","type_id","IdempotencyLevel","IdempotencyUnknown","Idempotent","NoSideEffects","borrow","borrow_mut","clone","clone_into","cmp","default","eq","fmt","from","from_i32","hash","into","is_valid","partial_cmp","to_owned","try_from","try_into","type_id","Location","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","leading_comments","leading_comments","leading_detached_comments","ne","path","span","to_owned","trailing_comments","trailing_comments","try_from","try_into","type_id","NamePart","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","is_extension","name_part","ne","to_owned","try_from","try_into","type_id","BoolValue","Kind","ListValue","NullValue","NumberValue","StringValue","StructValue","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","0","0","0","0"],"q":["prost_typesprost_types::compiler","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prost_types::compiler::code_generator_response","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prost_types::descriptor_proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prost_types::enum_descriptor_proto","","","","","","","","","","","","","","","","","","","","","prost_types::field","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prost_types::field_descriptor_proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prost_types::field_options","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","prost_types::file_options","","","","","","","","","","","","","","","","","","","","","","prost_types::generated_code_info","","","","","","","","","","","","","","","","","","","","","","","","prost_types::method_options","","","","","","","","","","","","","","","","","","","","","","prost_types::source_code_info","","","","","","","","","","","","","","","","","","","","","","","","prost_types::uninterpreted_option","","","","","","","","","","","","","","","","","","","prost_types::value","","","","","","","","","","","","","","","","","","","","","","","prost_types::value::Kind","","","","",""],"d":["<code>Any</code> contains an arbitrary serialized protocol buffer …","Api is a light-weight descriptor for an API Interface.","Describes a message type.","A Duration represents a signed, fixed-length span of time …","Enum type definition.","Describes an enum type.","","Enum value definition.","Describes a value within an enum.","","","A single field of a message type.","Describes a field within a message.","<code>FieldMask</code> represents a set of symbolic field paths, for …","","Describes a complete .proto file.","The protocol compiler can output a FileDescriptorSet …","","Describes the relationship between generated code and its …","<code>ListValue</code> is a wrapper around a repeated field of values.","","Method represents a method of an API interface.","Describes a method of a service.","","Declares an API Interface to be included in this …","<code>NullValue</code> is a singleton enumeration to represent the null …","Null value.","Describes a oneof.","","A protocol buffer option, which can be attached to a …","Syntax <code>proto2</code>.","Syntax <code>proto3</code>.","Describes a service.","","Encapsulates information about the original source file …","<code>SourceContext</code> represents information about the source of a …","<code>Struct</code> represents a structured data value, consisting of …","The syntax in which a protocol buffer element is defined.","A Timestamp represents a point in time independent of any …","Indicates that a <code>Timestamp</code> could not be converted to …","A protocol buffer message type.","A message representing a option the parser does not …","<code>Value</code> represents a dynamically typed value which can be …","Returns the value of <code>aggregate_value</code>, or the default value …","","Returns the value of <code>allow_alias</code>, or the default value if …","Set this option to true to allow mapping different tag …","An Annotation connects some span of text in generated code …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>cardinality</code>, or the default if …","The field cardinality.","Returns the value of <code>cc_enable_arenas</code>, or the default …","Enables the use of arenas for the proto messages in this …","Returns the value of <code>cc_generic_services</code>, or the default …","Should generic services be generated in each language?  “…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>client_streaming</code>, or the default …","Identifies if client streams multiple client messages","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>csharp_namespace</code>, or the default …","Namespace for generated classes; defaults to the package.","Returns the enum value of <code>ctype</code>, or the default if the …","The ctype option instructs the C++ code generator to use a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>default_value</code>, or the default value …","For numeric types, contains the original text …","The string value of the default value of this field. …","Names of files imported by this file.","Returns the value of <code>deprecated</code>, or the default value if …","Returns the value of <code>deprecated</code>, or the default value if …","Returns the value of <code>deprecated</code>, or the default value if …","Returns the value of <code>deprecated</code>, or the default value if …","Returns the value of <code>deprecated</code>, or the default value if …","Returns the value of <code>deprecated</code>, or the default value if …","Returns the value of <code>deprecated</code>, or the default value if …","Is this file deprecated? Depending on the target platform, …","Is this message deprecated? Depending on the target …","Is this field deprecated? Depending on the target …","Is this enum deprecated? Depending on the target platform, …","Is this enum value deprecated? Depending on the target …","Is this service deprecated? Depending on the target …","Is this method deprecated? Depending on the target …","Nested message and enum types in <code>DescriptorProto</code>.","Returns the value of <code>double_value</code>, or the default value if …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Nested message and enum types in <code>EnumDescriptorProto</code>.","","","Enum value definitions.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>extendee</code>, or the default value if …","For extensions, this is the name of the type being …","","","","Nested message and enum types in <code>Field</code>.","","Nested message and enum types in <code>FieldDescriptorProto</code>.","Nested message and enum types in <code>FieldOptions</code>.","The list of fields.","Unordered map of dynamically typed values.","","The path-qualified name of the .proto file that contained …","Nested message and enum types in <code>FileOptions</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>Syntax</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>NullValue</code>, or <code>None</code> if <code>value</code> is not a …","Nested message and enum types in <code>GeneratedCodeInfo</code>.","Returns the value of <code>go_package</code>, or the default value if …","Sets the Go package where structs generated from this …","","","Returns the enum value of <code>idempotency_level</code>, or the …","","Returns the value of <code>identifier_value</code>, or the default …","The value of the uninterpreted option, in whatever type …","Returns the value of <code>input_type</code>, or the default value if …","Input and output type names.  These are resolved in the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Syntax</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>NullValue</code>.","Returns the value of <code>java_generate_equals_and_hash</code>, or the …","This option does nothing.","Returns the value of <code>java_generic_services</code>, or the default …","","Returns the value of <code>java_multiple_files</code>, or the default …","If set true, then the Java code generator will generate a …","Returns the value of <code>java_outer_classname</code>, or the default …","If set, all the classes from the .proto file are wrapped …","Returns the value of <code>java_package</code>, or the default value if …","Sets the Java package where classes generated from this …","Returns the value of <code>java_string_check_utf8</code>, or the …","If set true, then the Java2 code generator will generate …","Returns the value of <code>json_name</code>, or the default value if …","JSON name of this field. The value is set by protocol …","The field JSON name.","Returns the enum value of <code>jstype</code>, or the default if the …","The jstype option determines the JavaScript type used for …","Returns the enum value of <code>kind</code>, or the default if the …","The field type.","The kind of value.","Returns the enum value of <code>label</code>, or the default if the …","","Returns the value of <code>lazy</code>, or the default value if <code>lazy</code> is …","Should this field be parsed lazily?  Lazy applies only to …","A Location identifies a piece of source code in a .proto …","Returns the value of <code>map_entry</code>, or the default value if …","Whether the message is an automatically generated map …","Returns the value of <code>message_set_wire_format</code>, or the …","Set true to use the old proto1 MessageSet wire format for …","Returns the value of <code>message_type</code>, or the default value if …","All top-level definitions in this file.","Oak <code>message_type</code> annotation.","","Nested message and enum types in <code>MethodOptions</code>.","The methods of this interface, in unspecified order.","Included interfaces. See Mixin.","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","file name, relative to root of source tree","","","","","","","","","The fully qualified message name.","The field name.","Enum type name.","Enum value name.","The option’s name. For protobuf built-in options …","The fully qualified name of this interface, including …","The simple name of this method.","The fully qualified name of the interface which is …","Signed fractions of a second at nanosecond resolution of …","Non-negative fractions of a second at nanosecond …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>negative_int_value</code>, or the default …","","","Returns the value of <code>no_standard_descriptor_accessor</code>, or …","Disables the generation of the standard “descriptor()” …","Normalizes the duration to a canonical format.","Normalizes the timestamp to a canonical format.","Returns the value of <code>number</code>, or the default value if <code>number</code>…","Returns the value of <code>number</code>, or the default value if <code>number</code>…","","","The field number.","Enum value number.","Returns the value of <code>objc_class_prefix</code>, or the default …","Sets the objective c class prefix which is prepended to …","","Returns the value of <code>oneof_index</code>, or the default value if …","If set, gives the index of a oneof in the containing type…","The index of the field type in <code>Type.oneofs</code>, for message or …","The list of types appearing in <code>oneof</code> definitions in this …","Returns the enum value of <code>optimize_for</code>, or the default if …","","","","","","","","","","The protocol buffer options.","The protocol buffer options.","Protocol buffer options.","Protocol buffer options.","Any metadata attached to the interface.","Any metadata attached to the method.","Returns the value of <code>output_type</code>, or the default value if …","","Returns the value of <code>package</code>, or the default value if …","e.g. “foo”, “foo.bar”, etc.","Returns the value of <code>packed</code>, or the default value if <code>packed</code>…","The packed option can be enabled for repeated primitive …","Whether to use alternative packed wire representation.","","","The set of field mask paths.","Returns the value of <code>php_class_prefix</code>, or the default …","Sets the php class prefix which is prepended to all php …","Returns the value of <code>php_generic_services</code>, or the default …","","Returns the value of <code>php_metadata_namespace</code>, or the …","Use this option to change the namespace of php generated …","Returns the value of <code>php_namespace</code>, or the default value …","Use this option to change the namespace of php generated …","Returns the value of <code>positive_int_value</code>, or the default …","","Returns the value of <code>proto3_optional</code>, or the default value …","If true, this is a proto3 “optional”. When a proto3 …","Indexes of the public imported files in the dependency …","Returns the value of <code>py_generic_services</code>, or the default …","","If true, the request is streamed.","A URL of the input message type.","Reserved field names, which may not be used by fields in …","Reserved enum value names, which may not be reused. A …","","Range of reserved numeric values. Reserved numeric values …","If true, the response is streamed.","The URL of the output message type.","If non-empty specifies a path under which inherited HTTP …","Returns the value of <code>ruby_package</code>, or the default value if …","Use this option to change the package of ruby generated …","Signed seconds of the span of time. Must be from …","Represents seconds of UTC time since Unix epoch …","Returns the value of <code>server_streaming</code>, or the default …","Identifies if server streams multiple server messages","","Sets <code>cardinality</code> to the provided enum value.","Sets <code>ctype</code> to the provided enum value.","Sets <code>idempotency_level</code> to the provided enum value.","Sets <code>jstype</code> to the provided enum value.","Sets <code>kind</code> to the provided enum value.","Sets <code>label</code> to the provided enum value.","Sets <code>optimize_for</code> to the provided enum value.","Sets <code>syntax</code> to the provided enum value.","Sets <code>syntax</code> to the provided enum value.","Sets <code>syntax</code> to the provided enum value.","Sets <code>syntax</code> to the provided enum value.","Sets <code>type</code> to the provided enum value.","Nested message and enum types in <code>SourceCodeInfo</code>.","This field contains optional information about the …","The source context.","The source context.","Source context for the protocol buffer service represented …","Returns the value of <code>string_value</code>, or the default value if …","","Returns the value of <code>swift_prefix</code>, or the default value if …","By default Swift generators will take the proto package …","Returns the value of <code>syntax</code>, or the default value if <code>syntax</code>…","Returns the enum value of <code>syntax</code>, or the default if the …","Returns the enum value of <code>syntax</code>, or the default if the …","Returns the enum value of <code>syntax</code>, or the default if the …","Returns the enum value of <code>syntax</code>, or the default if the …","The syntax of the proto file. The supported values are “…","The source syntax.","The source syntax.","The source syntax of the service.","The source syntax of this method.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>type</code>, or the default if the …","If type_name is set, this need not be set.  If both this …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of <code>type_name</code>, or the default value if …","For message and enum types, this is the name of the type.  …","A URL/resource name that uniquely identifies the type of …","The field type URL, without the scheme, for message or …","Nested message and enum types in <code>UninterpretedOption</code>.","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","The parser stores options it doesn’t recognize here. See …","Nested message and enum types in <code>Value</code>.","","Must be a valid serialized protocol buffer of the above …","The option’s value packed in an Any message. If the …","Repeated field of dynamically typed values.","A version string for this interface. If specified, must …","Returns the value of <code>weak</code>, or the default value if <code>weak</code> is …","For Google-internal migration only. Do not use.","Indexes of the weak imported files in the dependency list. …","An encoded CodeGeneratorRequest is written to the plugin’…","The plugin writes an encoded CodeGeneratorResponse to …","The version number of protocol compiler.","","","","","","","","","","","","","","","","Nested message and enum types in <code>CodeGeneratorResponse</code>.","The version number of protocol compiler.","","","","","","","","","","Returns the value of <code>error</code>, or the default value if <code>error</code> …","Error message.  If non-empty, code generation failed.  The …","","The .proto files that were explicitly listed on the …","","","","","","","","","","Returns the value of <code>major</code>, or the default value if <code>major</code> …","","Returns the value of <code>minor</code>, or the default value if <code>minor</code> …","","","","","Returns the value of <code>parameter</code>, or the default value if …","The generator parameter passed on the command-line.","Returns the value of <code>patch</code>, or the default value if <code>patch</code> …","","FileDescriptorProtos for all files in files_to_generate …","Returns the value of <code>suffix</code>, or the default value if <code>suffix</code>…","A suffix for alpha, beta or rc release, e.g., “alpha-1”…","Returns the value of <code>supported_features</code>, or the default …","A bitmask of supported features that the code generator …","","","","","","","","","","","","","Sync with code_generator.h.","Represents a single generated file.","","","","","","","","","","","","","Returns the value of <code>content</code>, or the default value if …","The file contents.","","","","","","","","","","Converts an <code>i32</code> to a <code>Feature</code>, or <code>None</code> if <code>value</code> is not a …","Information describing the file content being inserted. If …","","Returns the value of <code>insertion_point</code>, or the default value …","If non-empty, indicates that the named file should already …","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Feature</code>.","Returns the value of <code>name</code>, or the default value if <code>name</code> is …","The file name, relative to the output directory.  The name …","","","","","","","","","","","","Range of reserved tag numbers. Reserved tag numbers may …","","","","","","","","","","","","","","","Returns the value of <code>end</code>, or the default value if <code>end</code> is …","Returns the value of <code>end</code>, or the default value if <code>end</code> is …","Exclusive.","Exclusive.","","","","","","","","","","","","Returns the value of <code>start</code>, or the default value if <code>start</code> …","Returns the value of <code>start</code>, or the default value if <code>start</code> …","Inclusive.","Inclusive.","","","","","","","","","Range of reserved numeric values. Reserved values may not …","","","","","","","","Returns the value of <code>end</code>, or the default value if <code>end</code> is …","Inclusive.","","","","","","Returns the value of <code>start</code>, or the default value if <code>start</code> …","Inclusive.","","","","","Whether a field is optional, required, or repeated.","Basic field types.","For optional fields.","For repeated fields.","For required fields. Proto2 syntax only.","Field type bool.","Field type bytes.","Field type double.","Field type enum.","Field type fixed32.","Field type fixed64.","Field type float.","Field type group. Proto2 syntax only, and deprecated.","Field type int32.","Field type int64.","Field type message.","Field type sfixed32.","Field type sfixed64.","Field type sint32.","Field type sint64.","Field type string.","Field type uint32.","Field type uint64.","Field type unknown.","For fields with unknown cardinality.","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>Kind</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>Cardinality</code>, or <code>None</code> if <code>value</code> is not …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Kind</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Cardinality</code>.","","","","","","","","","","","","New in version 2.","0 is reserved for errors. Order is weird for historical …","","","","","Tag-delimited aggregate. Group type is deprecated and not …","Not ZigZag encoded.  Negative numbers take 10 bytes.  Use …","Not ZigZag encoded.  Negative numbers take 10 bytes.  Use …","","Length-delimited aggregate.","0 is reserved for errors","","","","","Uses ZigZag encoding.","Uses ZigZag encoding.","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>Type</code>, or <code>None</code> if <code>value</code> is not a valid …","Converts an <code>i32</code> to a <code>Label</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Type</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>Label</code>.","","","","","","","","","","","","","Use the default type.","Use JavaScript numbers.","Use JavaScript strings.","","Default mode.","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>CType</code>, or <code>None</code> if <code>value</code> is not a …","Converts an <code>i32</code> to a <code>JsType</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>CType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>JsType</code>.","","","","","","","","","","","etc.","Generate code using MessageLite and the lite runtime.","Generated classes can be optimized for speed or code size.","Generate complete code for parsing, serialization,","","","","","","","","","","Converts an <code>i32</code> to a <code>OptimizeMode</code>, or <code>None</code> if <code>value</code> is not …","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OptimizeMode</code>.","","","","","","","Returns the value of <code>begin</code>, or the default value if <code>begin</code> …","Identifies the starting offset in bytes in the generated …","","","","","","","","Returns the value of <code>end</code>, or the default value if <code>end</code> is …","Identifies the ending offset in bytes in the generated …","","","","","","Identifies the element in the original source .proto file. …","Returns the value of <code>source_file</code>, or the default value if …","Identifies the filesystem path to the original source …","","","","","Is this method side-effect-free (or safe in HTTP …","","idempotent, but may have side effects","implies idempotent","","","","","","","","","","Converts an <code>i32</code> to a <code>IdempotencyLevel</code>, or <code>None</code> if <code>value</code> is …","","","Returns <code>true</code> if <code>value</code> is a variant of <code>IdempotencyLevel</code>.","","","","","","","","","","","","","","","","","","Returns the value of <code>leading_comments</code>, or the default …","If this SourceCodeInfo represents a complete declaration, …","","","Identifies which part of the FileDescriptorProto was …","Always has exactly three or four elements: start line, …","","Returns the value of <code>trailing_comments</code>, or the default …","","","","","The name of the uninterpreted option.  Each string …","","","","","","","","","","","","","","","","","","","Represents a boolean value.","The kind of value.","Represents a repeated <code>Value</code>.","Represents a null value.","Represents a double value.","Represents a string value.","Represents a structured value.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0,3,3,4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,27,27,16,16,16,16,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,15,15,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,2,1,0,16,16,18,18,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,10,10,27,7,16,17,18,4,20,21,22,16,17,18,4,20,21,22,0,3,3,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,0,7,8,28,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,10,10,7,8,8,0,8,0,0,26,36,6,25,0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,40,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,34,35,36,37,38,1,39,39,40,2,1,0,16,16,2,1,22,22,3,3,15,15,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,2,1,16,16,16,16,16,16,16,16,16,16,16,16,10,10,27,18,18,27,27,37,10,10,18,18,23,17,17,17,17,18,7,18,14,0,31,31,7,8,10,11,12,13,14,15,7,8,10,11,12,13,14,15,3,26,27,28,29,30,31,32,33,34,39,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,3,3,8,17,17,34,39,10,13,10,13,27,29,16,16,8,10,10,27,26,16,16,7,8,10,11,12,13,14,15,26,27,28,29,31,32,15,15,7,7,18,18,27,2,1,35,16,16,16,16,16,16,16,16,3,3,10,10,7,16,16,32,32,8,12,8,12,32,32,33,16,16,34,39,15,15,7,27,18,22,18,27,10,16,26,28,31,32,10,0,7,26,28,31,3,3,16,16,7,26,28,31,32,7,26,28,31,32,40,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,10,10,6,7,8,9,10,11,12,13,14,15,16,17,18,19,4,20,21,22,3,23,5,24,25,26,27,28,29,30,2,31,32,33,34,35,36,37,38,1,39,40,10,10,24,27,0,9,16,17,18,19,4,20,21,22,0,12,24,30,38,31,18,18,7,0,0,0,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,0,42,41,42,43,41,42,43,41,42,43,43,43,43,42,41,42,43,41,42,43,41,42,43,41,41,41,41,41,42,43,42,42,41,41,42,41,41,43,43,41,42,43,41,42,43,41,42,43,41,42,43,0,0,44,44,45,44,45,44,45,45,44,45,44,44,45,45,45,44,45,45,44,45,44,45,44,44,45,44,45,45,45,44,44,45,45,45,44,45,44,45,44,45,44,45,44,0,0,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,47,46,46,47,46,47,46,47,46,47,46,47,46,47,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,49,49,49,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,50,49,51,51,51,51,51,51,51,51,51,51,0,51,52,52,52,51,51,51,51,51,0,51,51,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,51,52,0,53,54,54,54,0,53,53,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,53,54,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,0,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,60,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,61,62,63,64,65,66],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["cardinality",4]],null,[[],["bool",15]],null,[[],["bool",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[],["filedescriptorset",3]],[[],["filedescriptorproto",3]],[[],["descriptorproto",3]],[[],["extensionrangeoptions",3]],[[],["fielddescriptorproto",3]],[[],["oneofdescriptorproto",3]],[[],["enumdescriptorproto",3]],[[],["enumvaluedescriptorproto",3]],[[],["servicedescriptorproto",3]],[[],["methoddescriptorproto",3]],[[],["fileoptions",3]],[[],["messageoptions",3]],[[],["fieldoptions",3]],[[],["oneofoptions",3]],[[],["enumoptions",3]],[[],["enumvalueoptions",3]],[[],["serviceoptions",3]],[[],["methodoptions",3]],[[],["uninterpretedoption",3]],[[],["sourcecodeinfo",3]],[[],["generatedcodeinfo",3]],[[],["any",3]],[[],["sourcecontext",3]],[[],["type",3]],[[],["field",3]],[[],["enum",3]],[[],["enumvalue",3]],[[],["option",3]],[[],["syntax",4]],[[],["api",3]],[[],["method",3]],[[],["mixin",3]],[[],["duration",3]],[[],["fieldmask",3]],[[],["struct",3]],[[],["value",3]],[[],["listvalue",3]],[[],["nullvalue",4]],[[],["timestamp",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["syntax",4]],["ordering",4]],[[["nullvalue",4]],["ordering",4]],null,[[],["str",15]],null,[[],["ctype",4]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["syntax",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["nullvalue",4]],[[]],[[],["str",15]],null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[],["f64",15]],null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,null,null,[[["filedescriptorset",3]],["bool",15]],[[["filedescriptorproto",3]],["bool",15]],[[["descriptorproto",3]],["bool",15]],[[["extensionrangeoptions",3]],["bool",15]],[[["fielddescriptorproto",3]],["bool",15]],[[["oneofdescriptorproto",3]],["bool",15]],[[["enumdescriptorproto",3]],["bool",15]],[[["enumvaluedescriptorproto",3]],["bool",15]],[[["servicedescriptorproto",3]],["bool",15]],[[["methoddescriptorproto",3]],["bool",15]],[[["fileoptions",3]],["bool",15]],[[["messageoptions",3]],["bool",15]],[[["fieldoptions",3]],["bool",15]],[[["oneofoptions",3]],["bool",15]],[[["enumoptions",3]],["bool",15]],[[["enumvalueoptions",3]],["bool",15]],[[["serviceoptions",3]],["bool",15]],[[["methodoptions",3]],["bool",15]],[[["uninterpretedoption",3]],["bool",15]],[[["sourcecodeinfo",3]],["bool",15]],[[["generatedcodeinfo",3]],["bool",15]],[[["any",3]],["bool",15]],[[["sourcecontext",3]],["bool",15]],[[["type",3]],["bool",15]],[[["field",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["enumvalue",3]],["bool",15]],[[["option",3]],["bool",15]],[[["syntax",4]],["bool",15]],[[["api",3]],["bool",15]],[[["method",3]],["bool",15]],[[["mixin",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["fieldmask",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["value",3]],["bool",15]],[[["listvalue",3]],["bool",15]],[[["nullvalue",4]],["bool",15]],[[["timestamp",3]],["bool",15]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["duration",3]],["duration",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["systemtime",3]],["timestamp",3]],[[]],[[["i32",15]],["option",4,[["syntax",4]]]],[[["i32",15]],["option",4,[["nullvalue",4]]]],null,[[],["str",15]],null,[[]],[[]],[[],["idempotencylevel",4]],null,[[],["str",15]],null,[[],["str",15]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[],["bool",15]],null,[[],["bool",15]],null,[[],["bool",15]],null,[[],["str",15]],null,[[],["str",15]],null,[[],["bool",15]],null,[[],["str",15]],null,null,[[],["jstype",4]],null,[[],["kind",4]],null,null,[[],["label",4]],null,[[],["bool",15]],null,null,[[],["bool",15]],null,[[],["bool",15]],null,[[],["str",15]],null,null,null,null,null,null,[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["filedescriptorset",3]],["bool",15]],[[["filedescriptorproto",3]],["bool",15]],[[["descriptorproto",3]],["bool",15]],[[["extensionrangeoptions",3]],["bool",15]],[[["fielddescriptorproto",3]],["bool",15]],[[["oneofdescriptorproto",3]],["bool",15]],[[["enumdescriptorproto",3]],["bool",15]],[[["enumvaluedescriptorproto",3]],["bool",15]],[[["servicedescriptorproto",3]],["bool",15]],[[["methoddescriptorproto",3]],["bool",15]],[[["fileoptions",3]],["bool",15]],[[["messageoptions",3]],["bool",15]],[[["fieldoptions",3]],["bool",15]],[[["oneofoptions",3]],["bool",15]],[[["enumoptions",3]],["bool",15]],[[["enumvalueoptions",3]],["bool",15]],[[["serviceoptions",3]],["bool",15]],[[["methodoptions",3]],["bool",15]],[[["uninterpretedoption",3]],["bool",15]],[[["sourcecodeinfo",3]],["bool",15]],[[["generatedcodeinfo",3]],["bool",15]],[[["any",3]],["bool",15]],[[["sourcecontext",3]],["bool",15]],[[["type",3]],["bool",15]],[[["field",3]],["bool",15]],[[["enum",3]],["bool",15]],[[["enumvalue",3]],["bool",15]],[[["option",3]],["bool",15]],[[["api",3]],["bool",15]],[[["method",3]],["bool",15]],[[["mixin",3]],["bool",15]],[[["duration",3]],["bool",15]],[[["fieldmask",3]],["bool",15]],[[["struct",3]],["bool",15]],[[["value",3]],["bool",15]],[[["listvalue",3]],["bool",15]],[[["timestamp",3]],["bool",15]],[[],["i64",15]],null,null,[[],["bool",15]],null,[[]],[[]],[[],["i32",15]],[[],["i32",15]],null,null,null,null,[[],["str",15]],null,null,[[],["i32",15]],null,null,null,[[],["optimizemode",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,[[],["str",15]],null,[[],["bool",15]],null,null,[[["syntax",4]],["option",4,[["ordering",4]]]],[[["nullvalue",4]],["option",4,[["ordering",4]]]],null,[[],["str",15]],null,[[],["bool",15]],null,[[],["str",15]],null,[[],["str",15]],null,[[],["u64",15]],null,[[],["bool",15]],null,null,[[],["bool",15]],null,null,null,null,null,null,null,null,null,null,[[],["str",15]],null,null,null,[[],["bool",15]],null,null,[[["cardinality",4]]],[[["ctype",4]]],[[["idempotencylevel",4]]],[[["jstype",4]]],[[["kind",4]]],[[["label",4]]],[[["optimizemode",4]]],[[["syntax",4]]],[[["syntax",4]]],[[["syntax",4]]],[[["syntax",4]]],[[["type",4]]],null,null,null,null,null,[[]],null,[[],["str",15]],null,[[],["str",15]],[[],["syntax",4]],[[],["syntax",4]],[[],["syntax",4]],[[],["syntax",4]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["type",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["str",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["bool",15]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["version",3]],[[],["codegeneratorrequest",3]],[[],["codegeneratorresponse",3]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["version",3]],["bool",15]],[[["codegeneratorrequest",3]],["bool",15]],[[["codegeneratorresponse",3]],["bool",15]],[[],["str",15]],null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["i32",15]],null,[[],["i32",15]],null,[[["version",3]],["bool",15]],[[["codegeneratorrequest",3]],["bool",15]],[[["codegeneratorresponse",3]],["bool",15]],[[],["str",15]],null,[[],["i32",15]],null,null,[[],["str",15]],null,[[],["u64",15]],null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["file",3]],[[],["feature",4]],[[]],[[]],[[["feature",4]],["ordering",4]],[[],["str",15]],null,[[]],[[],["feature",4]],[[],["usize",15]],[[["file",3]],["bool",15]],[[["feature",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["feature",4]]]],null,[[]],[[],["str",15]],null,[[]],[[]],[[["i32",15]],["bool",15]],[[],["str",15]],null,[[["file",3]],["bool",15]],[[["feature",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["extensionrange",3]],[[],["reservedrange",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["i32",15]],[[],["i32",15]],null,null,[[["extensionrange",3]],["bool",15]],[[["reservedrange",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["extensionrange",3]],["bool",15]],[[["reservedrange",3]],["bool",15]],null,[[],["i32",15]],[[],["i32",15]],null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["enumreservedrange",3]],[[]],[[]],[[],["usize",15]],[[],["i32",15]],null,[[["enumreservedrange",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["enumreservedrange",3]],["bool",15]],[[],["i32",15]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["kind",4]],[[],["cardinality",4]],[[]],[[]],[[["kind",4]],["ordering",4]],[[["cardinality",4]],["ordering",4]],[[],["kind",4]],[[],["cardinality",4]],[[["kind",4]],["bool",15]],[[["cardinality",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["kind",4]]]],[[["i32",15]],["option",4,[["cardinality",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["kind",4]],["option",4,[["ordering",4]]]],[[["cardinality",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["type",4]],[[],["label",4]],[[]],[[]],[[["type",4]],["ordering",4]],[[["label",4]],["ordering",4]],[[],["type",4]],[[],["label",4]],[[["type",4]],["bool",15]],[[["label",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["type",4]]]],[[["i32",15]],["option",4,[["label",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["type",4]],["option",4,[["ordering",4]]]],[[["label",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["ctype",4]],[[],["jstype",4]],[[]],[[]],[[["ctype",4]],["ordering",4]],[[["jstype",4]],["ordering",4]],[[],["ctype",4]],[[],["jstype",4]],[[["ctype",4]],["bool",15]],[[["jstype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["ctype",4]]]],[[["i32",15]],["option",4,[["jstype",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],[[["ctype",4]],["option",4,[["ordering",4]]]],[[["jstype",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[],["optimizemode",4]],[[]],[[["optimizemode",4]],["ordering",4]],[[],["optimizemode",4]],[[["optimizemode",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["i32",15]],["option",4,[["optimizemode",4]]]],[[]],[[]],[[["i32",15]],["bool",15]],[[["optimizemode",4]],["option",4,[["ordering",4]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["i32",15]],null,[[]],[[]],[[]],[[],["annotation",3]],[[]],[[]],[[],["usize",15]],[[],["i32",15]],null,[[["annotation",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["annotation",3]],["bool",15]],null,[[],["str",15]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[],["idempotencylevel",4]],[[]],[[["idempotencylevel",4]],["ordering",4]],[[],["idempotencylevel",4]],[[["idempotencylevel",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[["i32",15]],["option",4,[["idempotencylevel",4]]]],[[]],[[]],[[["i32",15]],["bool",15]],[[["idempotencylevel",4]],["option",4,[["ordering",4]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["location",3]],[[]],[[]],[[],["usize",15]],[[["location",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["str",15]],null,null,[[["location",3]],["bool",15]],null,null,[[]],[[],["str",15]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[]],[[],["namepart",3]],[[]],[[]],[[],["usize",15]],[[["namepart",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[["namepart",3]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["kind",4]],[[]],[[]],[[],["usize",15]],[[["kind",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["kind",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null],"p":[[4,"NullValue"],[4,"Syntax"],[3,"UninterpretedOption"],[3,"EnumOptions"],[3,"GeneratedCodeInfo"],[3,"FileDescriptorSet"],[3,"FileDescriptorProto"],[3,"DescriptorProto"],[3,"ExtensionRangeOptions"],[3,"FieldDescriptorProto"],[3,"OneofDescriptorProto"],[3,"EnumDescriptorProto"],[3,"EnumValueDescriptorProto"],[3,"ServiceDescriptorProto"],[3,"MethodDescriptorProto"],[3,"FileOptions"],[3,"MessageOptions"],[3,"FieldOptions"],[3,"OneofOptions"],[3,"EnumValueOptions"],[3,"ServiceOptions"],[3,"MethodOptions"],[3,"SourceCodeInfo"],[3,"Any"],[3,"SourceContext"],[3,"Type"],[3,"Field"],[3,"Enum"],[3,"EnumValue"],[3,"Option"],[3,"Api"],[3,"Method"],[3,"Mixin"],[3,"Duration"],[3,"FieldMask"],[3,"Struct"],[3,"Value"],[3,"ListValue"],[3,"Timestamp"],[3,"TimestampOutOfSystemRangeError"],[3,"Version"],[3,"CodeGeneratorRequest"],[3,"CodeGeneratorResponse"],[4,"Feature"],[3,"File"],[3,"ExtensionRange"],[3,"ReservedRange"],[3,"EnumReservedRange"],[4,"Cardinality"],[4,"Kind"],[4,"Type"],[4,"Label"],[4,"CType"],[4,"JsType"],[4,"OptimizeMode"],[3,"Annotation"],[4,"IdempotencyLevel"],[3,"Location"],[3,"NamePart"],[4,"Kind"],[13,"NullValue"],[13,"NumberValue"],[13,"StringValue"],[13,"BoolValue"],[13,"StructValue"],[13,"ListValue"]]},\
"proxy_attestation_client":{"doc":"","t":[0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","GetExampleMessageRequest","GetExampleMessageResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","example_application_client","fmt","fmt","from","from","into","into","into_request","into_request","message","ne","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ExampleApplicationClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_example_message","into","into_request","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["proxy_attestation_client","proxy_attestation_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proxy_attestation_client::proto::example_application_client","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","","","","","Compress requests with <code>gzip</code>.","","","","","",""],"i":[0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,2,2,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["getexamplemessagerequest",3]],[[],["getexamplemessageresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["getexamplemessagerequest",3]],["bool",15]],[[["getexamplemessageresponse",3]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,[[["getexamplemessageresponse",3]],["bool",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[],["exampleapplicationclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["exampleapplicationclient",3,[["interceptedservice",3]]]]],"p":[[3,"GetExampleMessageRequest"],[3,"GetExampleMessageResponse"],[3,"ExampleApplicationClient"]]},\
"proxy_attestation_client_bin":{"doc":"Client for the Proxy Attestation example.","t":[17,17,3,17,12,11,11,11,11,11,5,5,11,11,5,5,11,11,5,12,12,11,11,11,11,11],"n":["EXAMPLE_MESSAGE","INVALID_TEST_TEE_MEASUREMENT","Opt","TEST_TEE_MEASUREMENT","app_uri","borrow","borrow_mut","clap","clone","clone_into","create_application_client","create_proxy_client","from","from_clap","get_example_message","get_root_tls_certificate","into","into_request","main","proxy_root_tls_certificate","proxy_uri","to_owned","try_from","try_into","type_id","vzip"],"q":["proxy_attestation_client_bin","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Create gRPC client for Oak application.","Create gRPC client for Proxy Attestation Service.","","","Connect to Oak application using root TLS certificate …","Request root TLS certificate from Proxy Attestation …","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,0,0,1,1,0,0,1,1,0,1,1,1,1,1,1,1],"f":[null,null,null,null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[["uri",3]]],[[["uri",3]]],[[]],[[["argmatches",3]]],[[["uri",3]]],[[["uri",3]]],[[]],[[],["request",3]],[[],["result",6]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opt"]]},\
"proxy_attestation_example":{"doc":"","t":[3,11,11,11,11,11,11,11,5,11,11,5,0,11,11,11,0,0,0,0,0,12,8,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Handler","borrow","borrow_mut","create","default","from","get_example_message","handle_command","handler","into","invoke","oak_main","proto","try_from","try_into","type_id","oak","examples","invocation","log","proxy_attestation","0","ExampleApplication","ExampleApplicationClient","ExampleApplicationDispatcher","GetExampleMessageRequest","GetExampleMessageResponse","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","default","default","encode","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","fold","fold","from","from","from","from","get_example_message","get_example_message","into","into","into","into","message","ne","server_method","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","GrpcInvocation","GrpcInvocationReceiver","GrpcInvocationSender","HttpInvocation","HttpInvocationSender","HttpInvocationSource","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_channels","close_channels","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","drop","drop","encode","encode","encode","encode","encode","encode","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","into","into","into","into","into","into","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","ne","receive","receive","receiver","receiver","receiver","receiver","send","send","sender","sender","sender","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","merge_field","merge_field","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["proxy_attestation_example","","","","","","","","","","","","","","","","proxy_attestation_example::proto","proxy_attestation_example::proto::oak","","","proxy_attestation_example::proto::oak::examples","proxy_attestation_example::proto::oak::examples::proxy_attestation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proxy_attestation_example::proto::oak::invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","proxy_attestation_example::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Handle incoming gRPC events for a <code>ServerNode</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gRPC invocation, consisting of exactly two channels: one …","A wrapper for receiving a <code>GrpcInvocation</code> from a channel.","A wrapper for sending a <code>GrpcInvocation</code> over a channel.","An HTTP invocation, consisting of exactly two channels: …","A wrapper for sending an <code>HttpInvocation</code> over a channel.","Source of an HTTP invocation, consisting of exactly two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logging levels as defined in …","A convenience message that may be used as init message by …","This message defines the data that is passed as a log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the …","The verbosity level of the message.","The line containing the message.","","","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,0,1,1,0,0,1,1,1,0,0,0,0,0,2,0,0,0,0,0,3,2,4,5,3,2,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,3,2,4,5,6,2,3,2,4,5,5,5,3,4,5,3,2,4,5,3,2,4,5,3,2,4,5,0,0,0,0,0,0,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,10,11,7,8,9,10,11,12,7,8,9,10,11,12,10,11,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,10,11,7,9,10,11,10,11,7,8,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,7,8,9,10,11,12,13,13,13,0,0,0,13,13,13,14,15,13,14,15,13,14,15,14,15,13,14,15,13,13,14,15,14,15,13,14,15,14,15,14,15,14,15,13,14,14,15,13,14,15,13,14,15,13,13,13,14,15,13,13,14,14,14,15,14,15,14,14,15,13,14,14,15,13,14,15,13,14,15,13,14,15,13],"f":[null,[[]],[[]],[[]],[[],["handler",3]],[[]],[[["getexamplemessagerequest",3]],["result",6,[["getexamplemessageresponse",3]]]],[[["grpcinvocation",3]],["result",4,[["error",3]]]],[[["u64",15]]],[[]],[[["str",15],["channelresponsewriter",3]]],[[["u64",15]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["getexamplemessagerequest",3]],[[],["getexamplemessageresponse",3]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["getexamplemessagerequest",3]],["bool",15]],[[["getexamplemessageresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["getexamplemessagerequest",3]],["result",6,[["getexamplemessageresponse",3]]]],[[["getexamplemessagerequest",3]],["result",6,[["getexamplemessageresponse",3]]]],[[]],[[]],[[]],[[]],null,[[["getexamplemessageresponse",3]],["bool",15]],[[["str",15]],["option",4,[["invocable",8]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[],["result",4,[["request",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],[[],["result",4,[["response",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],null,null,null,null,[[["response",3]],["result",4,[["oakerror",4]]]],[[["request",3,[["vec",3,[["u8",15],["global",3]]]]]],["result",4,[["oakerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"Handler"],[3,"ExampleApplicationClient"],[3,"ExampleApplicationDispatcher"],[3,"GetExampleMessageRequest"],[3,"GetExampleMessageResponse"],[8,"ExampleApplication"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"]]},\
"psi_client_bin":{"doc":"Client for the Private Set Intersection example.","t":[3,11,11,11,11,11,5,11,11,11,11,5,12,12,12,11,11,11,11,12,11],"n":["Opt","borrow","borrow_mut","clap","clone","clone_into","create_client","from","from_clap","into","into_request","main","public_key","root_tls_certificate","set_id","to_owned","try_from","try_into","type_id","uri","vzip"],"q":["psi_client_bin","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","Create Oak gRPC client.","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[["uri",3]]],[[]],[[["argmatches",3]]],[[]],[[],["request",3]],[[],["result",6]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]]],"p":[[3,"Opt"]]},\
"roughenough":{"doc":"An client implementation of the Roughtime secure time …","t":[13,17,13,13,4,17,13,13,13,13,13,13,13,13,13,13,17,13,13,17,13,13,13,17,13,17,13,3,17,13,17,17,13,17,17,17,4,13,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,3,3,11,11,11,11,5,11,11,11,11,11,5,12,11,12,11,11,11,11,11,11,12],"n":["CERT","CERTIFICATE_CONTEXT","DELE","DecodingFailure","Error","HASH_LENGTH","INDX","Internal","InvalidAlignment","InvalidNumTags","InvalidOffsetValue","InvalidTag","InvalidValueLength","MAXT","MIDP","MINT","MIN_REQUEST_LENGTH","MessageTooShort","NONC","NONCE_LENGTH","PAD","PATH","PUBK","PUBKEY_LENGTH","RADI","RADIUS_LENGTH","ROOT","RtMessage","SEED_LENGTH","SIG","SIGNATURE_LENGTH","SIGNED_RESPONSE_CONTEXT","SREP","TIMESTAMP_LENGTH","TREE_LEAF_TWEAK","TREE_NODE_TWEAK","Tag","TagNotStrictlyIncreasing","add_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone_into","clone_into","encode","encoded_size","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bytes","from_wire","get_field","hash","into","into","into","into_hash_map","new","new_deliberately_invalid","num_fields","pad_to_kilobyte","partial_cmp","tags","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","values","wire_value","0","0","0","0","0","0","0","1","ParsedResponse","ResponseHandler","borrow","borrow","borrow_mut","borrow_mut","create_nonce","extract_time","from","from","into","into","make_request","midpoint","new","radius","try_from","try_from","try_into","try_into","type_id","type_id","verified"],"q":["roughenough","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","roughenough::Error","","","","","","","","roughenough::client","","","","","","","","","","","","","","","","","","","","","",""],"d":["","Prefixed to the server’s certificate before generating …","","Decoding failed. The associated <code>std::io::Error</code> should …","Error types generated by this implementation","Size (in bytes) of a SHA-512 hash","","Internal error.","Offset was not 32-bit aligned","Invalid number of tags specified","Offset is outside of valid message range.","The associated byte sequence does not correspond to a …","Tag value length exceeds length of source bytes","","","","Minimum size (in bytes) of a client request","Could not convert bytes to message because bytes were too …","","Size (in bytes) of the client’s nonce","","","","Size (in bytes) of an Ed25519 public key","","Size (in bytes) of server’s time uncertainty value","","A Roughtime protocol message; a map of u32 tags to …","Size (in bytes) of seeds used to derive private keys","","Size (in bytes) of an Ed25519 signature","Prefixed to the server’s response before generating or …","","Size (in bytes) of server’s timestamp value","Value prepended to leaves prior to hashing","Value prepended to nodes prior to hashing","An unsigned 32-bit value (key) that maps to a byte-string …","The associated tag was added to an <code>RtMessage</code> in …","Add a field to this <code>RtMessage</code>","","","","","","","","","","","","Encode this message into its on-the-wire representation.","Returns the length in bytes of this message’s …","","","","","","","","","","","Construct a new RtMessage from the on-the-wire …","Return the <code>Tag</code> corresponding to the on-the-wire …","Retrieve the value associated with <code>tag</code>, if present.","","","","","Converts the message into a <code>HashMap</code> mapping each tag to …","Construct a new RtMessage","Dangerous: construct a new RtMessage <strong>without validation or </strong>…","Returns the number of tag/value pairs in the message","Adds a PAD tag to the end of this message, with a length …","","Returns a slice of the tags in the message","","","","","","","","","","","","","Returns a slice of the values in the message","Translates a tag into its on-the-wire representation","","","","","","","","","The parsed data extracted from a Roughtime response.","Decodes, parses and validates Roughtime responses.","","","","","Creates a 64 byte nonce.","","","","","","Converts a nonce to a Roughtime request.","","","","","","","","","",""],"i":[1,0,1,2,0,0,1,2,2,2,2,2,2,1,1,1,0,2,1,0,1,1,1,0,1,0,1,0,0,1,0,0,1,0,0,0,0,2,3,2,3,1,2,3,1,0,3,1,3,1,3,3,1,2,2,3,1,2,2,2,3,1,3,1,3,1,2,3,1,3,3,3,3,3,1,3,3,1,2,2,3,1,2,3,1,2,3,1,3,1,4,5,6,7,8,9,10,7,0,0,11,12,11,12,0,12,11,12,11,12,0,11,12,11,11,12,11,12,11,12,11],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tag",4]],["result",4,[["error",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["rtmessage",3]],[[],["tag",4]],[[]],[[]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],[[],["usize",15]],[[["tag",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["unspecified",3]]],[[]],[[["error",3]]],[[]],[[]],[[],["result",4,[["error",4]]]],[[],["result",4,[["error",4]]]],[[["tag",4]],["option",4]],[[]],[[]],[[]],[[]],[[],["hashmap",3,[["tag",4],["vec",3,[["u8",15]]]]]],[[["u32",15]]],[[["vec",3,[["tag",4]]],["vec",3,[["vec",3,[["u8",15]]]]]]],[[],["u32",15]],[[]],[[["tag",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["result",4,[["error",4]]]],[[],["result",4,[["parsedresponse",3],["error",4]]]],[[]],[[]],[[]],[[]],[[],["result",4,[["vec",3,[["u8",15]]],["error",4]]]],null,[[["vec",3,[["u8",15]]],["rtmessage",3]],["result",4,[["responsehandler",3],["error",4]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Tag"],[4,"Error"],[3,"RtMessage"],[13,"TagNotStrictlyIncreasing"],[13,"InvalidTag"],[13,"InvalidNumTags"],[13,"InvalidValueLength"],[13,"DecodingFailure"],[13,"InvalidAlignment"],[13,"InvalidOffsetValue"],[3,"ParsedResponse"],[3,"ResponseHandler"]]},\
"runner":{"doc":"A utility binary to run tests and orchestrate examples and …","t":[13,13,4,7,11,11,5,0,5,0,0,5,5,0,0,5,0,5,11,0,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,7,11,11,11,11,11,11,11,12,11,11,11,11,3,5,5,5,5,11,11,11,5,5,5,12,5,11,11,5,5,11,5,11,11,11,17,4,3,3,13,13,13,3,17,17,3,3,3,13,3,17,13,8,13,4,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,12,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,5,5,5,5,5,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,3,13,3,13,3,13,3,3,13,3,4,13,3,13,3,13,4,3,13,13,13,13,4,3,3,13,13,13,13,3,13,13,13,13,3,13,13,13,13,3,13,3,13,13,3,13,8,8,3,8,4,4,13,3,13,3,4,4,3,13,13,13,13,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,10,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,10,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,12,12,12,12,12,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,5,12,10,11,11,11,10,11,12,12,5,12,12,12,10,11,11,12,12,10,11,11,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Check","Fix","FormatMode","PROCESSES","borrow","borrow_mut","build_fuzz_dependencies","check_build_licenses","check_format","check_license","check_todo","cleanup","copy_wasm_file","diffs","examples","features_excl_introspection_client","files","format","from","internal","into","main","match_cmd","run_bazel_build","run_bazel_test","run_bazel_tests","run_buildifier","run_cargo_clean","run_cargo_clippy","run_cargo_deny","run_cargo_doc","run_cargo_fmt","run_cargo_fuzz","run_cargo_test","run_cargo_test_tsan","run_cargo_tests","run_cargo_udeps","run_check_build_licenses","run_check_license","run_check_todo","run_ci","run_clang_format","run_clang_tidy","run_completion","run_embedmd","run_fuzz_config","run_fuzz_targets","run_fuzz_targets_in_crate","run_hadolint","run_liche","run_markdownlint","run_prettier","run_shellcheck","run_tests","run_tests_tsan","spread","try_from","try_into","type_id","CheckBuildLicenses","borrow","borrow_mut","description","from","into","new","path","run","try_from","try_into","type_id","CheckLicense","borrow","borrow_mut","description","from","into","new","path","run","try_from","try_into","type_id","CheckTodo","PATTERN","borrow","borrow_mut","description","from","into","is_invalid_todo","new","path","run","try_from","try_into","type_id","ModifiedContent","add_affected_crates","add_affected_protos","affected_protos","all_affected_crates","borrow","borrow_mut","contains","crates_affected_by_files","crates_affected_by_protos","directly_modified_crates","files","find_crate_toml_file","fmt","from","get_local_dependencies","imported_proto_files","into","modified_files","try_from","try_into","type_id","ALL_CLIENTS","Application","ApplicationClassic","ApplicationFunctions","Bazel","Cargo","Classic","ClassicExample","DEFAULT_EXAMPLE_BACKEND_RUST_TARGET","DEFAULT_SERVER_RUST_TARGET","Example","ExampleServer","Executable","Functions","FunctionsExample","NO_CLIENTS","Npm","OakExample","Shell","Target","additional_args","additional_args","applications","applications","applications","backends","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_application","build_docker","build_functions_example","build_functions_server","build_rust_binary","build_server","build_wasm_module","clients","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_backend_build_steps","construct_backend_run_steps","construct_example_server_run_step","construct_example_server_run_step","construct_example_server_run_step","construct_example_server_run_step","construct_example_server_run_step","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","example","example","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_backends","get_backends","get_backends","get_build_client","get_build_client","get_build_client","has_classic_app","has_functions_app","into","into","into","into","into","into","into","into","into","manifest","modules","name","new","new","options","options","out","required_features","run","run_client","run_clients","run_example","run_example_server","run_examples","run_functions_example","run_functions_example_server","run_functions_examples","server","target","target","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wasm_path","0","0","additional_build_args","bazel_target","cargo_manifest","config","package_directory","script","affected_example_toml_filles","crate_manifest_files","example_toml_files","file_contains","fuzz_config_toml_files","is_bazel_file","is_build_file","is_cargo_package_file","is_cargo_toml_file","is_cargo_workspace_file","is_clang_format_file","is_dockerfile","is_example_toml_file","is_fuzz_config_toml_file","is_fuzzing_toml_file","is_html_file","is_ignored_entry","is_ignored_path","is_javascript_file","is_markdown_file","is_shell_script","is_source_code_file","is_toml_file","is_typescript_file","is_yaml_file","read_file","source_files","to_string","workspace_manifest_files","All","Base","Base","BuildClient","BuildFunctionsExample","BuildFunctionsServer","BuildFunctionsServer","BuildServer","BuildServer","CargoBinary","CargoManifest","CheckFormat","Cmd","Command","Commits","Completion","Completion","Context","Coverage","Dependency","DependencySpec","DiffToMain","Error","Experimental","Format","FunctionsServerVariant","FuzzConfig","FuzzableExample","Json","Multiple","NoIntrospectionClient","Ok","Opt","RunBazelTests","RunCargoClean","RunCargoClippy","RunCargoDeny","RunCargoFuzz","RunCargoFuzz","RunCargoTests","RunCargoUdeps","RunCi","RunExamples","RunExamples","RunFunctionsExamples","RunFunctionsExamples","RunTests","RunTestsOpt","RunTestsTsan","Runnable","Running","RunningCmd","RustBinaryOptions","Scope","ServerVariant","Single","SingleStatusResult","Skipped","Status","StatusResultValue","Step","StepResult","Text","Unsafe","Unsafe","WithBackground","all_dependencies_with_toml_path","application_variant","application_variant","args","args","bin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_client","build_client","build_dependencies","build_deps","build_docker","build_docker","build_release","build_release","build_release","build_server","build_server","child","child","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","cleanup","client_additional_args","client_additional_args","client_rust_target","client_rust_toolchain","client_variant","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","commands","crate_name","current_dir","dependencies","depth","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev_dependencies","dry_run","env","env_passthru","eq","eq","eq","eq","eq","eq","equivalent","error","example_name","example_name","examples","executable","failed_steps_prefixes","features","features","features","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_logs","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_str","from_str","from_str","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","keep_going","kill","kill","kill_process","len","logs","logs","manifest_path","name","name","ne","ne","ne","new","new","new","new_in_dir","new_with_env","ok","opt","out_dir","partial_cmp","partial_cmp","path","permissions_file","prefix","process_gone","remaining","result","result","result","root","run","run","run_server","run_server","run_step","scope","server_additional_args","server_additional_args","server_rust_target","server_rust_target","server_rust_target","server_rust_target","server_rust_target","server_rust_toolchain","server_rust_toolchain","server_rust_toolchain","server_rust_toolchain","server_rust_toolchain","server_variant","server_variant","stderr","stderr","stdout","stdout","target_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","value","values","values_to_string","0","0","0","0","0","0","0","0","0","0","0","background","command","foreground","name","name","name","steps"],"q":["runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runner::check_build_licenses","","","","","","","","","","","","runner::check_license","","","","","","","","","","","","runner::check_todo","","","","","","","","","","","","","","runner::diffs","","","","","","","","","","","","","","","","","","","","","","runner::examples","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runner::examples::Application","","runner::examples::Target","","","","","","runner::files","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runner::internalrunner::internal::Command","","","","","","","","runner::internal::Dependency","","runner::internal::Scope","runner::internal::Step","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Similar to the <code>vec!</code> macro, but also allows a “spread” …","","","","A <code>Runnable</code> command that checks for the existence of BUILD …","","","","","","","","","","","","A <code>Runnable</code> command that checks for the existence of source …","","","","","","","","","","","","A <code>Runnable</code> command that checks for the existence of todos …","","","","","","","","","","","","","","","Checks if <code>crate_toml_path</code> has a direct or indirect …","Adds <code>proto_path</code> to the list of <code>affected_protos</code> if …","Returns the list of paths to all <code>.proto</code> files affected by …","Path to the <code>Cargo.toml</code> files for all crates that are …","","","","","Returns the paths to <code>Cargo.toml</code> files of crates affected …","Returns the list of paths to <code>Cargo.toml</code> files for all …","List of modified files.","","","","Returns paths to <code>Cargo.toml</code> files of local crates (crates …","Returns paths to all <code>.proto</code> files that <code>proto_file_path</code> …","","Get all the files that have been modified in the given …","","","","","A construct representing either an Oak Classic or an Oak …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs application build steps.","","","","","Constructs build steps for the backends.","Recursively constructs run steps for the backends.","Constructs run step for the example server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of all known Cargo Manifest files that …","","","","Return whether the provided path refers to a Bazel file (…","","Return whether the provided path refers to a <code>Cargo.toml</code> …","Return whether the provided path refers to a <code>Cargo.toml</code> …","Return whether the provided path refers to a …","Return whether the provided path refers to a source file …","","","","Return whether the provided path refers to a <code>fuzz</code> crate …","","","Return whether to ignore the specified path. This is used …","","Return whether the provided path refers to a markdown file …","","Return whether the provided path refers to a source file …","","","","","Return an iterator of all the first-party and non-ignored …","","Return an iterator of all known Cargo Manifest files that …","","Production-like server variant, without any of the …","Production-like server variant, without logging or any of …","","","","","","","Partial information about a Cargo binary, as included in a …","Partial representation of Cargo manifest files.","","A single command.","","","","","Encapsulates all the local state relative to a step, and …","Similar to Unsafe, but with additional commands for …","Partial representation of a dependency in a <code>Cargo.toml</code> …","Partial representation of a Json specification of a …","","","Debug server, with logging, introspection client, and …","","","Struct representing config files for fuzzing.","Config for building an example for fuzzing.","Json specification of a dependency.","","Debug server with logging, but no introspection client","","","","","","","","","","","","","","","","","","","A task that can be run asynchronously.","A task that is currently running asynchronously.","","","","","","","","A construct to keep track of the status of the execution. …","The outcome of an individual step of execution.","An execution step, which may be a single <code>Runnable</code>, or a …","","Plaintext specification of a dependency with only the …","Debug server with logging and introspection client enabled","Debug server with logging and experimental features enabled","","","","","","Additional <code>libFuzzer</code> arguments passed through to the binary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a description of the task, e.g. the command line …","","","","","","","","","","","If environment variable <code>name</code> is set in the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to kill the running task.","","Returns the number of top-level steps or commands. The …","","","Path to the Cargo.toml file for the example.","","Name of the example","","","","","","","","","","","Path to desired location of the .wasm file.","","","","","","","","Returns the final result of the task, upon spontaneous …","","","","Starts the task and returns a <code>Running</code> implementation.","Run the provided command, printing a status message with …","","","Run the provided step, printing out information about the …","","","","","","","","","","","","","","","","","Returns an <code>AsyncRead</code> object to stream stderr logs from the …","","Returns an <code>AsyncRead</code> object to stream stdout logs from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Guarantees that the <code>error</code>, <code>ok</code>, and <code>remaining</code> counts are …","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,5,5,5,0,0,0,5,0,5,5,0,0,5,0,5,5,5,0,0,0,0,6,6,7,0,0,0,0,0,0,7,0,0,6,0,6,0,8,9,10,11,12,12,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,0,0,0,0,0,0,0,0,12,15,10,11,13,14,15,15,15,10,11,13,14,8,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,15,10,11,15,10,11,12,12,10,11,12,7,13,14,8,6,9,13,13,12,10,11,10,11,13,8,0,0,0,0,0,0,0,0,0,12,14,9,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,14,16,17,18,19,18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,24,0,25,0,25,0,25,0,0,25,0,0,22,0,25,0,23,0,0,22,26,23,25,0,0,0,27,28,23,26,0,25,25,25,25,0,25,25,25,25,0,25,0,25,25,0,25,0,0,0,0,0,0,28,0,26,0,0,0,0,27,23,24,28,29,30,31,32,33,29,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,30,31,29,33,30,31,49,40,41,30,31,34,36,37,25,30,38,31,39,40,41,42,33,42,30,31,39,39,39,37,25,30,38,31,22,39,23,40,24,41,42,33,47,26,48,37,25,30,38,31,22,39,23,40,24,41,42,33,47,26,48,37,37,33,32,29,34,50,32,29,43,27,44,45,46,29,37,32,0,22,23,24,27,44,26,26,47,30,31,45,32,35,49,40,41,38,34,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,0,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,37,25,30,38,31,39,40,41,42,33,22,23,24,26,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,37,36,51,0,28,37,48,46,43,46,22,27,44,35,32,47,32,32,47,34,46,27,44,44,30,34,0,47,51,36,48,34,50,32,30,31,0,37,30,31,49,40,41,40,41,49,40,41,40,41,40,41,36,51,36,51,33,37,25,30,38,31,22,39,23,40,24,41,42,33,47,26,48,34,47,26,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,47,48,35,0,52,53,54,55,56,57,58,59,60,61,62,63,64,63,64,65,63,65],"f":[null,null,null,null,[[]],[[]],[[["runcargofuzz",3]],["step",4]],null,[[["scope",4]],["step",4]],null,null,[[]],[[["fuzzableexample",3]],["step",4]],null,null,[[["str",15]],["str",15]],null,[[["scope",4]],["step",4]],[[]],null,[[]],[[],["result",4,[["box",3,[["error",8]]]]]],[[["opt",3]],["step",4]],[[],["step",4]],[[],["step",4]],[[],["step",4]],[[["formatmode",4]],["step",4]],[[],["step",4]],[[["scope",4]],["step",4]],[[],["step",4]],[[["modifiedcontent",3]],["step",4]],[[["formatmode",4],["modifiedcontent",3]],["step",4]],[[["runcargofuzz",3]],["step",4]],[[["runtestsopt",3],["modifiedcontent",3]],["step",4]],[[["scope",4]],["step",4]],[[["runtestsopt",3],["scope",4]],["step",4]],[[["scope",4]],["step",4]],[[["modifiedcontent",3]],["step",4]],[[["modifiedcontent",3]],["step",4]],[[["modifiedcontent",3]],["step",4]],[[],["step",4]],[[["formatmode",4]],["step",4]],[[],["step",4]],[[["completion",3]],["step",4]],[[["formatmode",4]],["step",4]],[[["fuzzconfig",3]],["step",4]],[[["runcargofuzz",3]],["step",4]],[[["path",3],["runcargofuzz",3]],["step",4]],[[],["step",4]],[[],["step",4]],[[["formatmode",4]],["step",4]],[[["formatmode",4]],["step",4]],[[],["step",4]],[[],["step",4]],[[["scope",4]],["step",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["string",3]],[[]],[[]],[[["string",3]],["box",3]],null,[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["string",3]],[[]],[[]],[[["string",3]],["box",3]],null,[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["string",3]],[[]],[[]],[[["str",15]],["bool",15]],[[["string",3]],["box",3]],null,[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["pathbuf",3],["hashmap",3]]],[[["string",3],["vec",3]]],[[["modifiedcontent",3]],["vec",3,[["string",3]]]],[[["scope",4]],["modifiedcontent",3]],[[]],[[]],[[["str",15]],["bool",15]],[[["modifiedcontent",3]],["modifiedcontent",3]],[[],["hashset",3,[["string",3]]]],[[["modifiedcontent",3]],["modifiedcontent",3]],null,[[["string",3]],["option",4,[["string",3]]]],[[["formatter",3]],["result",6]],[[]],[[["path",3]],["vec",3,[["string",3]]]],[[["string",3]],["vec",3,[["string",3]]]],[[]],[[["scope",4]],["modifiedcontent",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["target",4],["buildclient",3]],["box",3,[["runnable",8]]]],[[["applicationclassic",3]],["box",3,[["runnable",8]]]],[[["example",3]],["step",4]],[[["runfunctionsexamples",3]],["step",4]],[[["buildfunctionsserver",3],["vec",3,[["string",3]]]],["step",4]],[[["str",15],["vec",3,[["string",3]]],["hashmap",3]],["step",4]],[[["buildserver",3],["vec",3,[["string",3]]]],["step",4]],[[["str",15],["target",4],["str",15]],["step",4]],null,[[],["vec",3,[["step",4]]]],[[],["vec",3,[["step",4]]]],[[],["vec",3,[["step",4]]]],[[["str",15]],["vec",3,[["step",4]]]],[[["str",15]],["vec",3,[["step",4]]]],[[],["vec",3,[["step",4]]]],[[["step",4]],["step",4]],[[["step",4]],["step",4]],[[["step",4]],["step",4]],[[["step",4]],["step",4]],[[["classicexample",3],["step",4]],["step",4]],[[["functionsexample",3],["step",4]],["step",4]],[[],["exampleserver",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashmap",3]],[[],["hashmap",3]],[[],["hashmap",3]],[[],["buildclient",3]],[[],["buildclient",3]],[[],["buildclient",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["example",3],["runexamples",3]]],[[["example",3],["runfunctionsexamples",3]]],null,null,null,null,[[["executable",3],["buildclient",3],["vec",3,[["string",3]]]],["box",3,[["runnable",8]]]],[[["str",15],["executable",3],["buildclient",3],["vec",3,[["string",3]]]],["step",4]],[[["example",3],["buildclient",3],["vec",3,[["string",3]]]],["step",4]],[[["classicexample",3]],["step",4]],[[["buildserver",3],["exampleserver",3],["vec",3,[["string",3]]],["str",15],["str",15]],["box",3,[["runnable",8]]]],[[["runexamples",3],["scope",4]],["step",4]],[[["functionsexample",3]],["step",4]],[[["exampleserver",3],["applicationfunctions",3]],["box",3,[["runnable",8]]]],[[["runfunctionsexamples",3],["scope",4]],["step",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["vec",3,[["string",3]]]],["box",3,[["iterator",8]]]],[[]],[[["scope",4]],["box",3,[["iterator",8]]]],[[["path",3],["str",15]],["bool",15]],[[]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["direntry",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["string",3]],[[]],[[["pathbuf",3]],["string",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["string",3]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["str",15]]],null,[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],null,null,null,null,null,null,[[],["opt",3]],[[],["command",4]],[[],["runexamples",3]],[[],["completion",3]],[[],["runfunctionsexamples",3]],[[],["scope",4]],[[],["buildclient",3]],[[],["servervariant",4]],[[],["buildserver",3]],[[],["functionsservervariant",4]],[[],["buildfunctionsserver",3]],[[],["runtestsopt",3]],[[],["runcargofuzz",3]],[[],["status",3]],[[],["statusresultvalue",4]],[[],["singlestatusresult",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["command",3],["str",15]]],[[["scope",4]],["bool",15]],[[["servervariant",4]],["bool",15]],[[["functionsservervariant",4]],["bool",15]],[[["dependency",4]],["bool",15]],[[["dependencyspec",3]],["bool",15]],[[["statusresultvalue",4]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,[[],["vec",3,[["str",15]]]],[[],["vec",3,[["str",15]]]],[[],["vec",3,[["str",15]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["i32",15]]],[[],["usize",15]],null,null,null,null,null,[[["scope",4]],["bool",15]],[[["dependency",4]],["bool",15]],[[["dependencyspec",3]],["bool",15]],[[]],[[["str",15]],["box",3]],[[["usize",15]]],[[["str",15],["path",3]],["box",3]],[[["str",15],["hashmap",3]],["box",3]],null,null,null,[[["dependency",4]],["option",4,[["ordering",4]]]],[[["dependencyspec",3]],["option",4,[["ordering",4]]]],null,null,null,[[["i32",15]],["bool",15]],null,[[["box",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["box",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["box",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["opt",3]]],[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[["box",3],["opt",3]],["box",3,[["running",8]]]],null,null,[[["context",3],["step",4],["status",3]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,[[],["box",3,[["asyncread",8]]]],[[],["box",3,[["asyncread",8]]]],[[],["box",3,[["asyncread",8]]]],[[],["box",3,[["asyncread",8]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["context",3],["bool",15]]],null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"FormatMode"],[3,"CheckBuildLicenses"],[3,"CheckLicense"],[3,"CheckTodo"],[3,"ModifiedContent"],[4,"Target"],[4,"Application"],[3,"ExampleServer"],[3,"Executable"],[3,"ClassicExample"],[3,"FunctionsExample"],[3,"Example"],[3,"ApplicationClassic"],[3,"ApplicationFunctions"],[8,"OakExample"],[13,"Classic"],[13,"Functions"],[13,"Cargo"],[13,"Bazel"],[13,"Npm"],[13,"Shell"],[4,"Scope"],[4,"ServerVariant"],[4,"FunctionsServerVariant"],[4,"Command"],[4,"StatusResultValue"],[4,"Dependency"],[4,"Step"],[3,"CargoManifest"],[3,"RunExamples"],[3,"RunFunctionsExamples"],[3,"Cmd"],[3,"RunCargoFuzz"],[3,"Context"],[3,"StepResult"],[3,"RunningCmd"],[3,"Opt"],[3,"Completion"],[3,"BuildClient"],[3,"BuildServer"],[3,"BuildFunctionsServer"],[3,"RunTestsOpt"],[3,"CargoBinary"],[3,"DependencySpec"],[3,"FuzzConfig"],[3,"FuzzableExample"],[3,"Status"],[3,"SingleStatusResult"],[8,"RustBinaryOptions"],[8,"Runnable"],[8,"Running"],[13,"RunExamples"],[13,"RunFunctionsExamples"],[13,"BuildFunctionsExample"],[13,"BuildServer"],[13,"BuildFunctionsServer"],[13,"RunCargoTests"],[13,"RunCargoFuzz"],[13,"Completion"],[13,"Text"],[13,"Json"],[13,"Commits"],[13,"WithBackground"],[13,"Single"],[13,"Multiple"]]},\
"split_grpc_client":{"doc":"","t":[5,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["main","proto","HelloRequest","HelloResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeting","hello_world_client","into","into","into_request","into_request","ne","ne","reply","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","HelloWorldClient","accept_gzip","bidi_hello","borrow","borrow_mut","clone","clone_into","connect","fmt","from","inner","into","into_request","lots_of_greetings","lots_of_replies","new","say_hello","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["split_grpc_client","","split_grpc_client::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","split_grpc_client::proto::hello_world_client","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","As seen in https://grpc.io/docs/guides/concepts/.","Enable decompressing responses with <code>gzip</code>.","","","","","","Attempt to create a new client by connecting to a given …","","","","","","","","","","Compress requests with <code>gzip</code>.","","","","","",""],"i":[0,0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,0,1,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[[[],["result",4,[["box",3,[["error",8]]]]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["hellorequest",3]],[[],["helloresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[],["helloworldclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],null,[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["helloworldclient",3,[["interceptedservice",3]]]]],"p":[[3,"HelloRequest"],[3,"HelloResponse"],[3,"HelloWorldClient"]]},\
"split_grpc_proxy":{"doc":"","t":[5,5,5],"n":["handle_connection","main","proxy"],"q":["split_grpc_proxy","",""],"d":["","",""],"i":[0,0,0],"f":[[[["tcpstream",3]]],[[],["result",6]],[[["tcplistenerstream",3]]]],"p":[]},\
"split_grpc_server":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,16,8,3,16,3,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,10,10,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,11],"n":["HelloWorldHandler","bidi_hello","borrow","borrow_mut","default","fmt","from","into","into_request","lots_of_greetings","lots_of_replies","main","proto","say_hello","try_from","try_into","type_id","vzip","HelloRequest","HelloResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","greeting","hello_world_server","into","into","into_request","into_request","ne","ne","reply","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","BidiHelloStream","HelloWorld","HelloWorldServer","LotsOfRepliesStream","_Inner","accept_compression_encodings","bidi_hello","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","inner","into","into","into_request","into_request","lots_of_greetings","lots_of_replies","new","poll_ready","poll_ready","say_hello","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["split_grpc_server","","","","","","","","","","","","","","","","","","split_grpc_server::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","split_grpc_server::proto::hello_world_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated server implementations.","","","","","","","","","","","","","","","","","","","Server streaming response type for the BidiHello method.","Generated trait containing gRPC methods that should be …","As seen in https://grpc.io/docs/guides/concepts/.","Server streaming response type for the LotsOfReplies …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,0,2,3,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,4,5,0,0,5,0,6,5,4,6,4,6,6,6,4,6,4,6,4,6,4,6,6,4,6,4,6,5,5,6,6,6,5,6,4,6,4,6,4,6,4,6,4,6,6],"f":[null,[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[],["helloworldhandler",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4,[["box",3,[["error",8]]]]]],null,[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["hellorequest",3]],[[],["helloresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["hellorequest",3]],["bool",15]],[[["helloresponse",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["request",3,[["streaming",3,[["hellorequest",3]]]]]],["pin",3,[["box",3,[["future",8]]]]]],[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],[[["request",3,[["hellorequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["interceptedservice",3]]],"p":[[3,"HelloWorldHandler"],[3,"HelloRequest"],[3,"HelloResponse"],[3,"_Inner"],[8,"HelloWorld"],[3,"HelloWorldServer"]]},\
"tensorflow_client":{"doc":"Sends a series of TensorFlow Prediction Requests via the …","t":[3,5,11,11,11,11,11,0,11,11,11,11,5,0,11,11,11,11,12,11,12,3,3,3,3,7,7,7,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,5,5,12,12,11,11,11,11,11,11,11,11,11,12,11,12,12,5,5,11,5,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,0,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,11,0,12,12,0,11,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,0,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,12,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11],"n":["Opt","arg_max","borrow","borrow_mut","clap","clone","clone_into","data","from","from_clap","into","into_request","main","proto","to_owned","try_from","try_into","type_id","uri","vzip","work_dir","DataItem","DataSet","Images","Iter","SOURCE_URL","TEST_IMAGES","TEST_LABELS","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cols","current_index","data","from","from","from","from","get_test_data","get_uncompressed","image","images","into","into","into","into","into_iter","into_request","into_request","into_request","into_request","items","iter","label","labels","maybe_download","new_image_tensor_proto","next","parse_images","parse_labels","read_be_u32","rows","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","DataType","DtBfloat16","DtBfloat16Ref","DtBool","DtBoolRef","DtComplex128","DtComplex128Ref","DtComplex64","DtComplex64Ref","DtDouble","DtDoubleRef","DtFloat","DtFloatRef","DtHalf","DtHalfRef","DtInt16","DtInt16Ref","DtInt32","DtInt32Ref","DtInt64","DtInt64Ref","DtInt8","DtInt8Ref","DtInvalid","DtQint16","DtQint16Ref","DtQint32","DtQint32Ref","DtQint8","DtQint8Ref","DtQuint16","DtQuint16Ref","DtQuint8","DtQuint8Ref","DtResource","DtResourceRef","DtString","DtStringRef","DtUint16","DtUint16Ref","DtUint32","DtUint32Ref","DtUint64","DtUint64Ref","DtUint8","DtUint8Ref","DtVariant","DtVariantRef","ResourceHandleProto","TensorProto","TensorShapeProto","VariantTensorDataProto","bool_val","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","container","dcomplex_val","default","default","default","default","default","device","dim","double_val","dtype","dtype","dtypes_and_shapes","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","equivalent","float_val","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_i32","google","half_val","hash","hash_code","int64_val","int_val","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","is_valid","maybe_type_name","metadata","name","ne","ne","ne","ne","oak","partial_cmp","resource_handle_proto","resource_handle_val","scomplex_val","serving","set_dtype","string_val","tensor_content","tensor_shape","tensor_shape_proto","tensors","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_name","uint32_val","uint64_val","unknown_rank","variant_val","version_number","vzip","vzip","vzip","vzip","vzip","rpc","Aborted","AlreadyExists","Cancelled","Code","DataLoss","DeadlineExceeded","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","OutOfRange","PermissionDenied","ResourceExhausted","Status","Unauthenticated","Unavailable","Unimplemented","Unknown","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","code","default","default","details","encoded_len","eq","eq","equivalent","fmt","fmt","from","from","from_i32","hash","into","into","into_request","into_request","is_valid","message","ne","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","encap","GrpcRequest","GrpcResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","last","last","method_name","ne","ne","req_msg","rsp_msg","status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DtypeAndShape","borrow","borrow_mut","clear","clone","clone_into","default","dtype","dtype","encoded_len","eq","fmt","from","into","into_request","ne","set_dtype","shape","to_owned","try_from","try_into","type_id","vzip","ModelSpec","PredictRequest","PredictResponse","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","default","default","default","encoded_len","encoded_len","encoded_len","eq","eq","eq","fmt","fmt","fmt","from","from","from","inputs","into","into","into","into_request","into_request","into_request","model_spec","model_spec","model_spec","name","ne","ne","ne","output_filter","outputs","signature_name","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version_choice","vzip","vzip","vzip","Version","VersionChoice","VersionLabel","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","into_request","merge","ne","to_owned","try_from","try_into","type_id","vzip","0","0","Dim","borrow","borrow_mut","clear","clone","clone_into","default","encoded_len","eq","fmt","from","into","into_request","name","ne","size","to_owned","try_from","try_into","type_id","vzip"],"q":["tensorflow_client","","","","","","","","","","","","","","","","","","","","","tensorflow_client::data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_client::prototensorflow_client::proto::google","tensorflow_client::proto::google::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_client::proto::oak","tensorflow_client::proto::oak::encap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_client::proto::resource_handle_proto","","","","","","","","","","","","","","","","","","","","","","","tensorflow_client::proto::serving","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_client::proto::serving::model_spec","","","","","","","","","","","","","","","","","","","","","tensorflow_client::proto::serving::model_spec::VersionChoice","","tensorflow_client::proto::tensor_shape_proto","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","Utilities to fetch, parse and process MNIST data. Inspired …","","","","","","","","","","","","","","Wrapper for linking an image to its expected label.","An image data set used for testing.","A collection of images that all have the same width and …","Iterator to iterate over the items in the dataset.","","","","","","","","","","","","The width of each of the images in pixels.","","","","","","","Gets the test data by parsing the data files. It will …","Gets the data file and decompresses it. Data files are …","","","","","","","","","","","","The data for each of the images. Each image is represented …","","","","","","","","","","The height of each of the images in pixels.","","","","","","","","","","","","","","","","","(== suppress_warning documentation-presence ==) …","Float32 truncated to 16 bits.  Only for cast ops.","","","","Double-precision complex","","Single-precision complex","","","","Data types that all computation devices are expected to be …","Do not use!  These are only for parameters.  Every enum …","","","","","","","","","","","Not a legal value for DataType.  Used to indicate a …","Quantized int16","","Quantized int32","","Quantized int8","","Quantized uint16","","Quantized uint8","","","","","","","","","","","","","","Arbitrary C++ data types","","Protocol buffer representing a handle to a tensorflow …","Protocol buffer representing a tensor.","Dimensions of a tensor.","Protocol buffer representing the serialization format of …","DT_BOOL","","","","","","","","","","","","","","","","","","","","","","","","","","Container in which this resource is placed.","DT_COMPLEX128. dcomplex_val(2<em>i) and dcomplex_val(2</em>i+1) are …","","","","","","Unique name for the device containing the resource.","Dimensions of the tensor, such as {“input”, 30}, {“…","DT_DOUBLE.","Returns the enum value of <code>dtype</code>, or the default if the …","","Data types and shapes for the underlying resource.","","","","","","","","","","","DT_FLOAT.","","","","","","","","","","","Converts an <code>i32</code> to a <code>DataType</code>, or <code>None</code> if <code>value</code> is not a …","","DT_HALF, DT_BFLOAT16. Note that since protobuf has no …","","Hash code for the type of the resource. Is only valid in …","DT_INT64","DT_INT32, DT_INT16, DT_UINT16, DT_INT8, DT_UINT8.","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>DataType</code>.","For debug-only, the name of the type pointed to by this …","Portions of the object that are not Tensors.","Unique name of this resource.","","","","","","","Nested message and enum types in <code>ResourceHandleProto</code>.","DT_RESOURCE","DT_COMPLEX64. scomplex_val(2<em>i) and scomplex_val(2</em>i+1) are …","","Sets <code>dtype</code> to the provided enum value.","DT_STRING","Serialized raw tensor content from either …","Shape of the tensor.  TODO(touts): sort out the 0-rank …","Nested message and enum types in <code>TensorShapeProto</code>.","Tensors contained within objects being serialized.","","","","","","","","","","","","","","","","","","","","","Name of the type of objects being serialized.","DT_UINT32","DT_UINT64","If true, the number of dimensions in the shape is unknown.","DT_VARIANT","Version number.","","","","","","","The operation was aborted, typically due to a concurrency …","The entity that a client attempted to create (e.g., file …","The operation was cancelled, typically by the caller.","The canonical error codes for Google APIs.","Unrecoverable data loss or corruption.","The deadline expired before the operation could complete. …","The operation was rejected because the system is not in a …","Internal errors.  This means that some invariants expected …","The client specified an invalid argument.  Note that this …","Some requested entity (e.g., file or directory) was not …","Not an error; returned on success","The operation was attempted past the valid range.  E.g., …","The caller does not have permission to execute the …","Some resource has been exhausted, perhaps a per-user …","The <code>Status</code> type defines a logical error model that is …","The request does not have valid authentication credentials …","The service is currently unavailable.  This is most likely …","The operation is not implemented or is not …","Unknown error.  For example, this error may be returned …","","","","","","","","","","","The status code, which should be an enum value of […","","","A list of messages that carry the error details.  There is …","","","","","","","","","Converts an <code>i32</code> to a <code>Code</code>, or <code>None</code> if <code>value</code> is not a valid …","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Code</code>.","A developer-facing error message, which should be in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The last field indicates that this is definitely the final …","","","","The body of the request. Usually a serialized protobuf …","The body of the response. Usually a serialized protobuf …","","","","","","","","","","","","Protocol buffer representing a pair of (data type, tensor …","","","","","","","Returns the enum value of <code>dtype</code>, or the default if the …","","","","","","","","","Sets <code>dtype</code> to the provided enum value.","","","","","","","Metadata for an inference request such as the model name …","PredictRequest specifies which TensorFlow model to run, as …","Response for PredictRequest on successful run.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Input tensors. Names of input tensor are alias names. The …","","","","","","","Nested message and enum types in <code>ModelSpec</code>.","Model Specification. If version is not specified, will use …","Effective Model Specification used to process …","Required servable name.","","","","Output filter. Names specified are alias names. The …","Output tensors.","A named signature to evaluate. If unspecified, the default …","","","","","","","","","","","","","Optional choice of which version of the model to use.","","","","Use this specific version number.","Optional choice of which version of the model to use.","Use the version associated with the given label.","","","","","","","","","","","","","","","","","","","","","One dimension of the tensor.","","","","","","","","","","","","","Optional name of the tensor dimension.","","Size of the tensor in that dimension. This value must be …","","","","",""],"i":[0,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,2,3,4,5,2,3,4,5,3,5,5,2,3,4,5,0,0,2,4,2,3,4,5,5,2,3,4,5,3,4,2,4,0,0,5,0,0,0,3,2,3,4,5,2,3,4,5,2,3,4,5,2,3,4,5,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,0,0,0,7,8,6,9,7,10,8,6,9,7,10,8,9,7,10,8,6,9,7,10,8,6,9,7,10,6,9,7,8,6,9,7,10,9,8,7,7,7,9,8,9,7,10,8,6,9,7,10,6,7,8,6,9,7,10,8,6,9,7,10,6,0,7,6,9,7,7,8,6,9,7,10,8,6,9,7,10,6,9,10,9,8,9,7,10,0,6,0,7,7,0,7,7,7,7,0,10,8,6,9,7,10,8,6,9,7,10,8,6,9,7,10,8,6,9,7,10,10,7,7,8,7,7,8,6,9,7,10,0,11,11,11,0,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,12,11,12,11,12,12,11,12,11,11,12,12,11,12,12,12,11,11,12,11,12,11,11,11,12,11,12,11,11,12,12,11,12,11,12,11,12,11,12,11,12,11,0,0,0,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,14,13,13,14,13,14,14,13,14,13,14,13,14,13,14,13,14,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,0,0,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,16,17,18,17,16,17,18,16,17,18,0,17,18,16,16,17,18,17,18,16,16,17,18,16,17,18,16,17,18,16,17,18,16,16,17,18,19,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,20,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22],"f":[null,[[],["option",4,[["usize",15]]]],[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],null,[[]],[[["argmatches",3]]],[[]],[[],["request",3]],[[],["result",6]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[["str",15]]],[[["str",15],["str",15]]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,[[],["iter",3]],null,null,[[["str",15],["str",15]]],[[["usize",15],["usize",15]],["tensorproto",3]],[[],["option",4]],[[],["result",6,[["images",3]]]],[[],["result",6,[["vec",3,[["u8",15]]]]]],[[],["result",6,[["u32",15]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["tensorshapeproto",3]],[[],["datatype",4]],[[],["resourcehandleproto",3]],[[],["tensorproto",3]],[[],["varianttensordataproto",3]],[[]],[[]],[[]],[[]],[[]],[[["datatype",4]],["ordering",4]],null,null,[[]],[[],["datatype",4]],[[]],[[]],[[]],null,null,null,[[],["datatype",4]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["tensorshapeproto",3]],["bool",15]],[[["datatype",4]],["bool",15]],[[["resourcehandleproto",3]],["bool",15]],[[["tensorproto",3]],["bool",15]],[[["varianttensordataproto",3]],["bool",15]],[[],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["datatype",4]]]],null,null,[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["i32",15]],["bool",15]],null,null,null,[[["tensorshapeproto",3]],["bool",15]],[[["resourcehandleproto",3]],["bool",15]],[[["tensorproto",3]],["bool",15]],[[["varianttensordataproto",3]],["bool",15]],null,[[["datatype",4]],["option",4,[["ordering",4]]]],null,null,null,null,[[["datatype",4]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["status",3]],[[],["code",4]],[[]],[[]],[[["code",4]],["ordering",4]],null,[[]],[[],["code",4]],null,[[],["usize",15]],[[["status",3]],["bool",15]],[[["code",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["code",4]]]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["i32",15]],["bool",15]],null,[[["status",3]],["bool",15]],[[["code",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcrequest",3]],[[],["grpcresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,null,null,[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[],["dtypeandshape",3]],[[]],[[]],[[],["datatype",4]],null,[[],["usize",15]],[[["dtypeandshape",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["dtypeandshape",3]],["bool",15]],[[["datatype",4]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["modelspec",3]],[[],["predictrequest",3]],[[],["predictresponse",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["modelspec",3]],["bool",15]],[[["predictrequest",3]],["bool",15]],[[["predictresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,null,null,[[["modelspec",3]],["bool",15]],[[["predictrequest",3]],["bool",15]],[[["predictresponse",3]],["bool",15]],null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,[[]],[[]],[[],["versionchoice",4]],[[]],[[]],[[],["usize",15]],[[["versionchoice",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["versionchoice",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[]],[[]],[[]],[[],["dim",3]],[[]],[[]],[[],["usize",15]],[[["dim",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],null,[[["dim",3]],["bool",15]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opt"],[3,"DataItem"],[3,"Images"],[3,"DataSet"],[3,"Iter"],[4,"DataType"],[3,"TensorProto"],[3,"TensorShapeProto"],[3,"ResourceHandleProto"],[3,"VariantTensorDataProto"],[4,"Code"],[3,"Status"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"DtypeAndShape"],[3,"ModelSpec"],[3,"PredictRequest"],[3,"PredictResponse"],[4,"VersionChoice"],[13,"Version"],[13,"VersionLabel"],[3,"Dim"]]},\
"tensorflow_proxy":{"doc":"","t":[3,3,7,11,11,11,11,11,5,11,11,11,11,11,11,11,11,0,11,11,11,11,5,11,5,12,0,12,12,12,11,11,11,11,11,11,11,11,11,11,5,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11],"n":["ErrorLogger","Opt","SOCKET","borrow","borrow","borrow_mut","borrow_mut","clap","cleanup_socket_temp_file","clone","clone","clone_into","clone_into","fmt","from","from","from_clap","grpc","into","into","into_request","into_request","launch_tf_model_server","log_error","main","port","proto","tf_model_base_path","tf_model_name","tf_server_path","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","wait_for_socket","BackendConnection","BytesCodec","BytesDecoder","BytesEncoder","FutureSyncWrapper","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","connect","create_client","decode","decoder","default","encode","encoder","from","from","from","from","from","handle_request","inner","into","into","into","into","into","into_future","into_request","into_request","into_request","into_request","into_request","poll","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_poll","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","google","oak","rpc","Aborted","AlreadyExists","Cancelled","Code","DataLoss","DeadlineExceeded","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","OutOfRange","PermissionDenied","ResourceExhausted","Status","Unauthenticated","Unavailable","Unimplemented","Unknown","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","code","default","default","details","encoded_len","eq","eq","equivalent","fmt","fmt","from","from","from_i32","hash","into","into","into_request","into_request","is_valid","message","ne","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","encap","GrpcRequest","GrpcResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","into","into","into_request","into_request","last","last","method_name","ne","ne","req_msg","rsp_msg","status","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["tensorflow_proxy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_proxy::grpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_proxy::proto","","tensorflow_proxy::proto::google","tensorflow_proxy::proto::google::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tensorflow_proxy::proto::oak","tensorflow_proxy::proto::oak::encap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Connection to the prediction service that can be used for …","A Codec for encoding and decoding byte vectors to and from …","Passthrough decoder for decoding a <code>tonic::codec::DecodeBuf</code> …","Passthrough encoder for encoding a byte vector to an …","Utility wrapper to implement <code>Sync</code> for <code>Future</code>s by wrapping …","","","","","","","","","","","","Connects to the prediction service over UDS and returns …","Creates a new client.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The operation was aborted, typically due to a concurrency …","The entity that a client attempted to create (e.g., file …","The operation was cancelled, typically by the caller.","The canonical error codes for Google APIs.","Unrecoverable data loss or corruption.","The deadline expired before the operation could complete. …","The operation was rejected because the system is not in a …","Internal errors.  This means that some invariants expected …","The client specified an invalid argument.  Note that this …","Some requested entity (e.g., file or directory) was not …","Not an error; returned on success","The operation was attempted past the valid range.  E.g., …","The caller does not have permission to execute the …","Some resource has been exhausted, perhaps a per-user …","The <code>Status</code> type defines a logical error model that is …","The request does not have valid authentication credentials …","The service is currently unavailable.  This is most likely …","The operation is not implemented or is not …","Unknown error.  For example, this error may be returned …","","","","","","","","","","","The status code, which should be an enum value of […","","","A list of messages that carry the error details.  There is …","","","","","","","","","Converts an <code>i32</code> to a <code>Code</code>, or <code>None</code> if <code>value</code> is not a valid …","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Code</code>.","A developer-facing error message, which should be in …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The last field indicates that this is definitely the final …","","","","The body of the request. Usually a serialized protobuf …","The body of the response. Usually a serialized protobuf …","","","","","","","","","","",""],"i":[0,0,0,1,2,1,2,1,0,1,2,1,2,1,1,2,1,0,1,2,1,2,0,2,0,1,0,1,1,1,1,2,1,2,1,2,1,2,1,2,0,0,0,0,0,0,3,4,5,6,7,3,4,5,6,7,3,3,3,5,7,7,4,7,3,4,5,6,7,0,6,3,4,5,6,7,6,3,4,5,6,7,6,3,4,5,6,7,3,4,5,6,7,6,3,4,5,6,7,3,4,5,6,7,0,0,0,8,8,8,0,8,8,8,8,8,8,8,8,8,8,0,8,8,8,8,9,8,9,8,9,9,8,9,8,8,9,9,8,9,9,9,8,8,9,8,9,8,8,8,9,8,9,8,8,9,9,8,9,8,9,8,9,8,9,8,9,8,0,0,0,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,11,10,10,11,10,11,11,10,11,10,11,10,11,10,11,10,11],"f":[null,null,null,[[]],[[]],[[]],[[]],[[],["app",3]],[[],["result",6]],[[],["opt",3]],[[],["errorlogger",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["opt",3]],["result",6]],[[["str",15]]],[[],["result",6]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["str",15]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["str",15]]],[[],["grpc",3,[["channel",3]]]],[[["decodebuf",3]],["result",4,[["option",4]]]],[[]],[[],["bytescodec",3]],[[["encodebuf",3]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[["grpc",3,[["channel",3]]],["vec",3,[["u8",15]]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["pin",3],["context",3]],["poll",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["pin",3],["context",3]],["poll",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["status",3]],[[],["code",4]],[[]],[[]],[[["code",4]],["ordering",4]],null,[[]],[[],["code",4]],null,[[],["usize",15]],[[["status",3]],["bool",15]],[[["code",4]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["code",4]]]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[["i32",15]],["bool",15]],null,[[["status",3]],["bool",15]],[[["code",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcrequest",3]],[[],["grpcresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],null,null,null,[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[3,"Opt"],[3,"ErrorLogger"],[3,"BackendConnection"],[3,"BytesEncoder"],[3,"BytesDecoder"],[3,"FutureSyncWrapper"],[3,"BytesCodec"],[4,"Code"],[3,"Status"],[3,"GrpcRequest"],[3,"GrpcResponse"]]},\
"test_utils":{"doc":"Test utilities to help with unit testing of Oak-Functions …","t":[3,3,3,3,5,5,11,11,11,11,11,11,11,11,5,5,11,12,5,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Background","MockStaticServer","Term","TestResult","assert_response_body","background","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","compile_rust_wasm","create_echo_wasm_module_bytes","default","elapsed","free_port","from","from","from","from","get_config_info","into","into","into","into","into_future","into_request","into_request","into_request","into_request","make_request","poll","response","serialize_entries","serve","set_response_body","terminate_and_join","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip"],"q":["test_utils","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Wrapper around a termination signal <code>oneshot::Sender</code> and …","A mock implementation of a static server that always …","A wrapper around a termination signal <code>oneshot::Receiver</code>.","","","Executes the provided closure passing to it a <code>Term</code> …","","","","","","","","","Uses cargo to compile a Rust manifest to Wasm bytes.","Create some valid Wasm bytecode only calling Abi functions …","","","","","","","","","","","","","","","","","","","","","Serializes the provided map as a contiguous buffer of …","Starts serving, listening on the provided port.","Sets the content of the response body to return for any …","Sends the termination signal to the background task and …","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,1,2,3,4,1,2,3,4,0,0,4,3,0,1,2,3,4,0,1,2,3,4,2,1,2,3,4,0,2,3,0,4,4,1,1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4],"f":[null,null,null,null,[[["response",3],["str",15]]],[[],["background",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["str",15],["bool",15]],["result",6,[["vec",3,[["u8",15]]]]]],[[],["vec",3,[["u8",15]]]],[[],["mockstaticserver",3]],null,[[],["u16",15]],[[]],[[]],[[]],[[]],[[["serverpolicy",3],["bool",15],["option",4,[["privatemetricsconfig",3]]]],["configurationinfo",3]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["u16",15]]],[[["pin",3],["context",3]],["poll",4]],null,[[["hashmap",3,[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]]],["vec",3,[["u8",15]]]],[[["u16",15],["future",8]]],[[["vec",3,[["u8",15]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]]],"p":[[3,"Background"],[3,"Term"],[3,"TestResult"],[3,"MockStaticServer"]]},\
"tls_attestation_backend":{"doc":"Backend server for the TLS Attestation example.","t":[17,3,11,11,11,11,11,11,11,12,11,5,5,11,11,11,11],"n":["EXAMPLE_MESSAGE","Opt","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","http_listen_address","into","main","service","to_owned","try_from","try_into","type_id"],"q":["tls_attestation_backend","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1],"f":[null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],null,[[]],[[],["result",6]],[[["request",3,[["body",3]]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Opt"]]},\
"tls_attestation_client":{"doc":"Client for the TLS Attestation example.","t":[17,17,3,17,11,11,11,11,11,11,11,11,11,5,12,5,11,11,11,11,11],"n":["EXAMPLE_MESSAGE","INVALID_TEST_TEE_MEASUREMENT","Opt","TEST_TEE_MEASUREMENT","borrow","borrow_mut","clap","clone","clone_into","from","from_clap","into","into_request","main","proxy_uri","send_request","to_owned","try_from","try_into","type_id","vzip"],"q":["tls_attestation_client","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Connect to the TEE application via HTTPS using the …","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1],"f":[null,null,null,null,[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],[[]],[[["argmatches",3]]],[[]],[[],["request",3]],[[],["result",6]],null,[[["client",3],["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"Opt"]]},\
"translator":{"doc":"","t":[3,11,11,11,11,11,11,5,11,5,5,11,11,11],"n":["Router","borrow","borrow_mut","create","default","from","handle_command","handler","into","oak_main","router","try_from","try_into","type_id"],"q":["translator","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,0,1,0,0,1,1,1],"f":[null,[[]],[[]],[[]],[[],["router",3]],[[]],[[],["result",6]],[[["u64",15]]],[[]],[[["u64",15]]],[[["u64",15]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"Router"]]},\
"translator_common":{"doc":"","t":[3,11,11,11,11,0,5,11,11,11,12,3,3,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["TranslatorEntrypoint","borrow","borrow_mut","from","into","proto","translate","try_from","try_into","type_id","0","TranslateRequest","TranslateResponse","Translator","TranslatorClient","TranslatorDispatcher","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","default","default","encode","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","fold","fold","from","from","from","from","from_lang","into","into","into","into","ne","ne","server_method","text","to_lang","to_owned","to_owned","translate","translate","translated_text","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id"],"q":["translator_common","","","","","","","","","","translator_common::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Stub with a manual implementation of <code>oak::WasmEntrypoint</code>, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ISO 639-1 codes","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,0,0,1,1,1,2,0,0,0,0,0,3,2,4,5,3,2,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,3,2,4,5,4,3,2,4,5,4,5,3,4,4,4,5,6,2,5,3,2,4,5,3,2,4,5,3,2,4,5],"f":[null,[[]],[[]],[[]],[[]],null,[[["translatorclient",3],["str",15],["str",15],["str",15]],["option",4,[["string",3]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["translaterequest",3]],[[],["translateresponse",3]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["translaterequest",3]],["bool",15]],[[["translateresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["translaterequest",3]],["bool",15]],[[["translateresponse",3]],["bool",15]],[[["str",15]],["option",4,[["invocable",8]]]],null,null,[[]],[[]],[[["translaterequest",3]],["result",6,[["translateresponse",3]]]],[[["translaterequest",3]],["result",6,[["translateresponse",3]]]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"TranslatorEntrypoint"],[3,"TranslatorClient"],[3,"TranslatorDispatcher"],[3,"TranslateRequest"],[3,"TranslateResponse"],[8,"Translator"]]},\
"translator_grpc":{"doc":"","t":[0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,12,0,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","TranslateRequest","TranslateResponse","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","default","default","encoded_len","encoded_len","eq","eq","fmt","fmt","from","from","from_lang","into","into","into_request","into_request","ne","ne","text","to_lang","to_owned","to_owned","translated_text","translator_client","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TranslatorClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","into","into_request","new","send_gzip","to_owned","translate","try_from","try_into","type_id","vzip","with_interceptor"],"q":["translator_grpc","translator_grpc::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","translator_grpc::proto::translator_client","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","ISO 639-1 codes","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","","","","Compress requests with <code>gzip</code>.","","","","","","",""],"i":[0,0,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,1,1,2,2,0,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["translaterequest",3]],[[],["translateresponse",3]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["translaterequest",3]],["bool",15]],[[["translateresponse",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[]],[[],["request",3]],[[],["request",3]],[[["translaterequest",3]],["bool",15]],[[["translateresponse",3]],["bool",15]],null,null,[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,[[]],[[]],[[]],[[],["translatorclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["translatorclient",3,[["interceptedservice",3]]]]],"p":[[3,"TranslateRequest"],[3,"TranslateResponse"],[3,"TranslatorClient"]]},\
"trusted_database":{"doc":"Trusted Database example for Project Oak.","t":[5,0,0,0,0,0,0,12,3,3,3,3,3,3,3,3,8,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["oak_main","proto","oak","examples","invocation","log","trusted_database","0","DatabaseEntry","GetPointOfInterestRequest","GetPointOfInterestResponse","ListPointsOfInterestRequest","ListPointsOfInterestResponse","Location","PointOfInterest","PointOfInterestMap","TrustedDatabase","TrustedDatabaseClient","TrustedDatabaseDispatcher","TrustedDatabaseInit","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","default","default","default","encode","encode","encode","encode","encode","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","from","from","from","from","from","get_point_of_interest","get_point_of_interest","id","id","install_date","installed","into","into","into","into","into","into","into","into","into","into","into","latitude_degrees","latitude_degrees","list_points_of_interest","list_points_of_interest","location","location","locked","log_sender","longitude_degrees","longitude_degrees","name","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","number_of_bikes","number_of_docks","number_of_empty_docks","point_of_interest","point_of_interest","points_of_interest","removal_date","server_method","temporary","terminal_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","GrpcInvocation","GrpcInvocationReceiver","GrpcInvocationSender","HttpInvocation","HttpInvocationSender","HttpInvocationSource","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close_channels","close_channels","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","drop","drop","encode","encode","encode","encode","encode","encode","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encode_raw","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","from","from","from","from","from","from","into","into","into","into","into","into","merge_field","merge_field","merge_field","merge_field","merge_field","merge_field","ne","ne","ne","ne","ne","ne","receive","receive","receiver","receiver","receiver","receiver","send","send","sender","sender","sender","sender","sender","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encode_raw","encode_raw","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","merge_field","merge_field","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["trusted_database","","trusted_database::proto","trusted_database::proto::oak","","","trusted_database::proto::oak::examples","trusted_database::proto::oak::examples::trusted_databasetrusted_database::proto::oak::invocation","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_database::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Maps a string ID to <code>PointOfInterest</code>.","","","","Initialization message that should be sent to Router Oak …opy of the database.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A gRPC invocation, consisting of exactly two channels: one …","A wrapper for receiving a <code>GrpcInvocation</code> from a channel.","A wrapper for sending a <code>GrpcInvocation</code> over a channel.","An HTTP invocation, consisting of exactly two channels: …","A wrapper for sending an <code>HttpInvocation</code> over a channel.","Source of an HTTP invocation, consisting of exactly two …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Logging levels as defined in …","A convenience message that may be used as init message by …","This message defines the data that is passed as a log …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a …","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the …","The verbosity level of the message.","The line containing the message.","","","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,2,1,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,5,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,12,1,6,10,10,10,2,1,3,4,5,6,7,8,9,10,11,3,10,12,1,4,8,10,11,3,10,4,10,3,4,5,6,7,8,9,10,11,10,10,10,7,9,11,10,2,10,10,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,2,1,3,4,5,6,7,8,9,10,11,0,0,0,0,0,0,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,16,17,13,14,15,16,17,18,13,14,15,16,17,18,16,17,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,16,17,13,15,16,17,16,17,13,14,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,13,14,15,16,17,18,19,19,19,0,0,0,19,19,19,20,21,19,20,21,19,20,21,20,21,19,20,21,19,19,20,21,20,21,19,20,21,20,21,20,21,20,21,19,20,20,21,19,20,21,19,20,21,19,19,19,20,21,19,19,20,20,20,21,20,21,20,20,21,19,20,20,21,19,20,21,19,20,21,19,20,21,19],"f":[[[["u64",15]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["location",3]],[[],["pointofinterest",3]],[[],["pointofinterestmap",3]],[[],["getpointofinterestrequest",3]],[[],["getpointofinterestresponse",3]],[[],["listpointsofinterestrequest",3]],[[],["listpointsofinterestresponse",3]],[[],["databaseentry",3]],[[],["trusteddatabaseinit",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[["location",3]],["bool",15]],[[["pointofinterest",3]],["bool",15]],[[["pointofinterestmap",3]],["bool",15]],[[["getpointofinterestrequest",3]],["bool",15]],[[["getpointofinterestresponse",3]],["bool",15]],[[["listpointsofinterestrequest",3]],["bool",15]],[[["listpointsofinterestresponse",3]],["bool",15]],[[["databaseentry",3]],["bool",15]],[[["trusteddatabaseinit",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["getpointofinterestrequest",3]],["result",6,[["getpointofinterestresponse",3]]]],[[["getpointofinterestrequest",3]],["result",6,[["getpointofinterestresponse",3]]]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["listpointsofinterestrequest",3]],["result",6,[["listpointsofinterestresponse",3]]]],[[["listpointsofinterestrequest",3]],["result",6,[["listpointsofinterestresponse",3]]]],null,null,null,null,null,null,null,null,[[["location",3]],["bool",15]],[[["pointofinterest",3]],["bool",15]],[[["pointofinterestmap",3]],["bool",15]],[[["getpointofinterestrequest",3]],["bool",15]],[[["getpointofinterestresponse",3]],["bool",15]],[[["listpointsofinterestrequest",3]],["bool",15]],[[["listpointsofinterestresponse",3]],["bool",15]],[[["databaseentry",3]],["bool",15]],[[["trusteddatabaseinit",3]],["bool",15]],null,null,null,null,null,null,null,[[["str",15]],["option",4,[["invocable",8]]]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["grpcinvocation",3]],[[],["grpcinvocationsender",3]],[[],["grpcinvocationreceiver",3]],[[],["httpinvocation",3]],[[],["httpinvocationsource",3]],[[],["httpinvocationsender",3]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["grpcinvocation",3]],["bool",15]],[[["grpcinvocationsender",3]],["bool",15]],[[["grpcinvocationreceiver",3]],["bool",15]],[[["httpinvocation",3]],["bool",15]],[[["httpinvocationsource",3]],["bool",15]],[[["httpinvocationsender",3]],["bool",15]],[[],["result",4,[["request",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],[[],["result",4,[["response",3,[["vec",3,[["u8",15],["global",3]]]]],["oakerror",4]]]],null,null,null,null,[[["response",3]],["result",4,[["oakerror",4]]]],[[["request",3,[["vec",3,[["u8",15],["global",3]]]]]],["result",4,[["oakerror",4]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"TrustedDatabaseClient"],[3,"TrustedDatabaseDispatcher"],[3,"Location"],[3,"PointOfInterest"],[3,"PointOfInterestMap"],[3,"GetPointOfInterestRequest"],[3,"GetPointOfInterestResponse"],[3,"ListPointsOfInterestRequest"],[3,"ListPointsOfInterestResponse"],[3,"DatabaseEntry"],[3,"TrustedDatabaseInit"],[8,"TrustedDatabase"],[3,"GrpcInvocation"],[3,"GrpcInvocationSender"],[3,"GrpcInvocationReceiver"],[3,"HttpInvocation"],[3,"HttpInvocationSource"],[3,"HttpInvocationSender"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"]]},\
"trusted_database_benchmark":{"doc":"Trusted Database Benchmark.","t":[17,3,17,0,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,5,5,0,11,11,11,11,11,8,0,0,10,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,17,17,17,3,11,11,11,11,5,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,12,12,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,8,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11],"n":["NATIVE_APPLICATION_GRPC_PORT","Opt","REQUEST_NUMBER","application","as_any","as_any_mut","borrow","borrow_mut","clap","clone","clone_into","database","database_size","from","from_clap","into","into_any","into_any_arc","into_any_rc","into_request","main","measure_request_time","proto","to_owned","try_from","try_into","type_id","vzip","ApplicationClient","native","oak","send_request","NativeApplication","TrustedDatabaseService","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","client","create_client","create_server","from","from","get_point_of_interest","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","list_points_of_interest","notification_sender","points_of_interest","send_request","start","stop","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MAIN_ENTRYPOINT_NAME","MAIN_MODULE_MANIFEST","MAIN_MODULE_NAME","OakApplication","as_any","as_any_mut","borrow","borrow_mut","build_wasm","client","from","into","into_any","into_any_arc","into_any_rc","into_request","runtime","send_request","start","stop","try_from","try_into","type_id","vzip","Database","Station","StationDatabase","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","deserialize","deserialize","eq","eq","fmt","fmt","from","from","from","id","install_date","installed","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","last_update","latitude_degrees","locked","longitude_degrees","name","ne","ne","new","number_of_bikes","number_of_docks","number_of_empty_docks","points_of_interest","removal_date","serialize","serialize","serialize","stations","temporary","terminal_name","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","version","vzip","vzip","vzip","DatabaseEntry","GetPointOfInterestRequest","GetPointOfInterestResponse","ListPointsOfInterestRequest","ListPointsOfInterestResponse","Location","PointOfInterest","PointOfInterestMap","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","id","install_date","installed","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","latitude_degrees","latitude_degrees","location","location","locked","longitude_degrees","longitude_degrees","name","name","ne","ne","ne","ne","ne","ne","ne","ne","number_of_bikes","number_of_docks","number_of_empty_docks","point_of_interest","point_of_interest","removal_date","temporary","terminal_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trusted_database_client","trusted_database_server","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","TrustedDatabaseClient","accept_gzip","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_point_of_interest","inner","into","into_any","into_any_arc","into_any_rc","into_request","list_points_of_interest","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor","0","TrustedDatabase","TrustedDatabaseServer","_Inner","accept_compression_encodings","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","call","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","get_point_of_interest","inner","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","list_points_of_interest","new","poll_ready","poll_ready","send_compression_encodings","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_interceptor"],"q":["trusted_database_benchmark","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_database_benchmark::application","","","","trusted_database_benchmark::application::native","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_database_benchmark::application::oak","","","","","","","","","","","","","","","","","","","","","","","","trusted_database_benchmark::database","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_database_benchmark::proto","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_database_benchmark::proto::trusted_database_client","","","","","","","","","","","","","","","","","","","","","","","","","","","trusted_database_benchmark::proto::trusted_database_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","Measures average request time in milliseconds.","","","","","","","","","","Sends test requests. Returns <code>()</code> since the value of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends test requests to the native application. Returns <code>()</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Sends test requests to the oak application. Returns <code>()</code> …","","","","","","","","","Database structure represents internal XML fields from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Maps a string ID to <code>PointOfInterest</codeenerated client implementations.","Generated server implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","","","Attempt to create a new client by connecting to a given …","","","Find Point Of Interest based on ID.","","","","","","","Find the nearest Point Of Interest based on linear search …","","Compress requests with <code>gzip</code>.","","","","","","","","Generated trait containing gRPC methods that should be …","","","","","","","","","","","","","","","","","","","","","","Find Point Of Interest based on ID.","","","","","","","","","","","","Find the nearest Point Of Interest based on linear search …","","","","","","","","","","","","","","",""],"i":[0,0,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,0,0,0,2,0,0,3,4,3,4,3,4,3,4,4,4,4,3,4,3,3,4,3,4,3,4,3,4,3,4,3,4,3,4,4,4,3,4,3,4,3,4,3,4,0,0,0,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,0,0,6,7,8,6,7,8,6,7,8,6,7,8,7,8,7,8,7,8,7,8,6,7,8,8,8,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,7,8,8,8,8,7,8,6,8,8,8,6,8,6,7,8,7,8,8,6,7,8,6,7,8,6,7,8,7,6,7,8,0,0,0,0,0,0,0,0,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,11,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,12,16,16,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,16,10,14,16,9,16,10,16,9,10,11,12,13,14,15,16,16,16,16,13,15,16,16,16,9,10,11,12,13,14,15,16,0,0,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,9,10,11,12,13,14,15,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,0,0,0,19,18,19,18,19,18,19,18,19,19,19,18,19,18,19,18,19,18,19,20,19,18,19,18,19,18,19,18,19,18,19,20,19,19,19,19,18,19,18,19,18,19,18,19,18,19,19],"f":[null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["app",3]],[[],["opt",3]],[[]],null,null,[[]],[[["argmatches",3]]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["result",6]],[[["applicationclient",8],["usize",15]]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[["str",15]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],null,[[["u16",15]]],[[["pointofinterestmap",3],["u16",15],["receiver",3]]],[[]],[[]],[[["request",3,[["getpointofinterestrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[["request",3,[["listpointsofinterestrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,null,[[["str",15]],["pin",3,[["box",3,[["future",8]]]]]],[[["database",3],["u16",15]]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["result",6,[["hashmap",3,[["string",3],["vec",3,[["u8",15]]]]]]]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],null,[[["str",15]],["pin",3,[["box",3,[["future",8]]]]]],[[["str",15]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["stationdatabase",3]],[[],["station",3]],[[],["result",4]],[[],["result",4]],[[["stationdatabase",3]],["bool",15]],[[["station",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,null,null,null,[[["stationdatabase",3]],["bool",15]],[[["station",3]],["bool",15]],[[["usize",15]]],null,null,null,null,null,[[],["string",3]],[[],["result",4]],[[],["result",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["location",3]],[[],["pointofinterest",3]],[[],["pointofinterestmap",3]],[[],["getpointofinterestrequest",3]],[[],["getpointofinterestresponse",3]],[[],["listpointsofinterestrequest",3]],[[],["listpointsofinterestresponse",3]],[[],["databaseentry",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[["location",3]],["bool",15]],[[["pointofinterest",3]],["bool",15]],[[["pointofinterestmap",3]],["bool",15]],[[["getpointofinterestrequest",3]],["bool",15]],[[["getpointofinterestresponse",3]],["bool",15]],[[["listpointsofinterestrequest",3]],["bool",15]],[[["listpointsofinterestresponse",3]],["bool",15]],[[["databaseentry",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,null,null,null,null,null,null,null,[[["location",3]],["bool",15]],[[["pointofinterest",3]],["bool",15]],[[["pointofinterestmap",3]],["bool",15]],[[["getpointofinterestrequest",3]],["bool",15]],[[["getpointofinterestresponse",3]],["bool",15]],[[["listpointsofinterestrequest",3]],["bool",15]],[[["listpointsofinterestresponse",3]],["bool",15]],[[["databaseentry",3]],["bool",15]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["trusteddatabaseclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],null,[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["trusteddatabaseclient",3,[["interceptedservice",3]]]],null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[["request",3]]],[[["request",3]]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["request",3,[["getpointofinterestrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],null,[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[["request",3,[["listpointsofinterestrequest",3]]]],["pin",3,[["box",3,[["future",8]]]]]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[["context",3]],["poll",4,[["result",4]]]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["interceptedservice",3]]],"p":[[3,"Opt"],[8,"ApplicationClient"],[3,"TrustedDatabaseService"],[3,"NativeApplication"],[3,"OakApplication"],[3,"Database"],[3,"StationDatabase"],[3,"Station"],[3,"Location"],[3,"PointOfInterest"],[3,"PointOfInterestMap"],[3,"GetPointOfInterestRequest"],[3,"GetPointOfInterestResponse"],[3,"ListPointsOfInterestRequest"],[3,"ListPointsOfInterestResponse"],[3,"DatabaseEntry"],[3,"TrustedDatabaseClient"],[3,"_Inner"],[3,"TrustedDatabaseServer"],[8,"TrustedDatabase"]]},\
"trusted_database_client":{"doc":"","t":[0,3,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["proto","DatabaseEntry","GetPointOfInterestRequest","GetPointOfInterestResponse","ListPointsOfInterestRequest","ListPointsOfInterestResponse","Location","PointOfInterest","PointOfInterestMap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","entries","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","id","id","install_date","installed","into","into","into","into","into","into","into","into","into_request","into_request","into_request","into_request","into_request","into_request","into_request","into_request","latitude_degrees","latitude_degrees","location","location","locked","longitude_degrees","longitude_degrees","name","name","ne","ne","ne","ne","ne","ne","ne","ne","number_of_bikes","number_of_docks","number_of_empty_docks","point_of_interest","point_of_interest","removal_date","temporary","terminal_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","trusted_database_client","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","TrustedDatabaseClient","accept_gzip","borrow","borrow_mut","clone","clone_into","connect","fmt","from","get_point_of_interest","into","into_request","list_points_of_interest","new","send_gzip","to_owned","try_from","try_into","type_id","vzip","with_interceptor"],"q":["trusted_database_client","trusted_database_client::prototrusted_database_client::proto::trusted_database_client","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","Maps a string ID to <code>PointOfInterest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generated client implementations.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Enable decompressing responses with <code>gzip</code>.","","","","","Attempt to create a new client by connecting to a given …","","","Find Point Of Interest based on ID.","","","Find the nearest Point Of Interest based on linear search …","","Compress requests with <code>gzip</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,3,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,4,8,8,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,8,2,6,8,1,8,2,8,1,2,3,4,5,6,7,8,8,8,8,5,7,8,8,8,1,2,3,4,5,6,7,8,0,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,1,2,3,4,5,6,7,8,0,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9],"f":[null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["location",3]],[[],["pointofinterest",3]],[[],["pointofinterestmap",3]],[[],["getpointofinterestrequest",3]],[[],["getpointofinterestresponse",3]],[[],["listpointsofinterestrequest",3]],[[],["listpointsofinterestresponse",3]],[[],["databaseentry",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,[[["location",3]],["bool",15]],[[["pointofinterest",3]],["bool",15]],[[["pointofinterestmap",3]],["bool",15]],[[["getpointofinterestrequest",3]],["bool",15]],[[["getpointofinterestresponse",3]],["bool",15]],[[["listpointsofinterestrequest",3]],["bool",15]],[[["listpointsofinterestresponse",3]],["bool",15]],[[["databaseentry",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],null,null,null,null,null,null,null,null,null,[[["location",3]],["bool",15]],[[["pointofinterest",3]],["bool",15]],[[["pointofinterestmap",3]],["bool",15]],[[["getpointofinterestrequest",3]],["bool",15]],[[["getpointofinterestresponse",3]],["bool",15]],[[["listpointsofinterestrequest",3]],["bool",15]],[[["listpointsofinterestresponse",3]],["bool",15]],[[["databaseentry",3]],["bool",15]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["trusteddatabaseclient",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["request",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["trusteddatabaseclient",3,[["interceptedservice",3]]]]],"p":[[3,"Location"],[3,"PointOfInterest"],[3,"PointOfInterestMap"],[3,"GetPointOfInterestRequest"],[3,"GetPointOfInterestResponse"],[3,"ListPointsOfInterestRequest"],[3,"ListPointsOfInterestResponse"],[3,"DatabaseEntry"],[3,"TrustedDatabaseClient"]]},\
"weather_lookup":{"doc":"Oak Functions weather lookup example.","t":[5],"n":["main"],"q":["weather_lookup"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};