#!/usr/bin/env bash

# This script builds the firmware, kernel, application measures the built artifact.
# It should be run from the workspace root, and within the docker container and nix.
# Eg the commands to run this from the repo root would be as follows.
# First, enter docker and nix: `./scripts/docker_run bash -c "nix develop"`
# Second, run this script: `./demo_oc3_2024/get_measurements`

set -o errexit
set -o nounset
set -o pipefail

# Build artifacts.
echo "Artifacts building..."
(just stage0_bin oak_restricted_kernel_simple_io_wrapper oak_functions_enclave_app > /dev/null 2>&1) &
echo "Artifacts built."


# Function to extract a hash given the label
extract_hash() {
  local label="$1"
  local output="$2"

  echo "$output" | grep "^${label}:" | cut -d ':' -f 2- | tr -d ' '
}

readonly FIRMWARE_MEASUREMENT_OUTPUT="$(cargo run --quiet -p snp_measurement -- --stage0-rom=./stage0_bin/target/x86_64-unknown-none/release/stage0_bin)"
readonly FIRMWARE_MEASUREMENT=sha2-384:$(extract_hash "Attestation Measurement" "$FIRMWARE_MEASUREMENT_OUTPUT")

# Get the kernel hashes using the measurement tool
readonly KERNEL_MEASUREMENTS_OUTPUT="$(cargo run --quiet -p oak_kernel_measurement -- --kernel=./oak_restricted_kernel_wrapper/target/x86_64-unknown-none/release/oak_restricted_kernel_simple_io_wrapper_bin)"

# Store kernel hashes in seperate variables
readonly KERNEL_IMAGE_MEASUREMENT=$(extract_hash "Kernel Image Measurement" "$KERNEL_MEASUREMENTS_OUTPUT")
readonly KERNEL_SETUP_DATA_MEASUREMENT=$(extract_hash "Kernel Setup Data Measurement" "$KERNEL_MEASUREMENTS_OUTPUT")

readonly APPLICATION_MEASUREMENT="sha2-256:$(sha256sum ./enclave_apps/target/x86_64-unknown-none/release/oak_functions_enclave_app | cut -d ' ' -f 1)"

echo "Firmware Measurent: ${FIRMWARE_MEASUREMENT}"
echo "Kernel Image Measurent: ${KERNEL_IMAGE_MEASUREMENT}"
echo "Kernel Setup Data Measurent: ${KERNEL_SETUP_DATA_MEASUREMENT}"
echo "Application Measurent: ${APPLICATION_MEASUREMENT}"

read -p "Verify measurements against the DICE evidence? " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]
then
  # Convert textprotos to binary
  readonly EVIDENCE_BINARY_PB=$(mktemp)
  readonly ENDORSEMENT_BINARY_PB=$(mktemp)
  protoc --encode=oak.attestation.v1.Evidence ./proto/attestation/evidence.proto < demo_oc3_2024/evidence.textproto > ${EVIDENCE_BINARY_PB}
  protoc --encode=oak.attestation.v1.Endorsements ./proto/attestation/endorsement.proto < demo_oc3_2024/endorsements.textproto > ${ENDORSEMENT_BINARY_PB}

  cargo run --quiet -p demo_oc3_2024 -- \
    --evidence="${EVIDENCE_BINARY_PB}" \
    --endorsements="${ENDORSEMENT_BINARY_PB}" \
    --initial-measurement="${FIRMWARE_MEASUREMENT}" \
    --kernel-image-measurement="${KERNEL_IMAGE_MEASUREMENT}" \
    --kernel-setup-data-measurement="${KERNEL_SETUP_DATA_MEASUREMENT}" \
    --application-measurement="${APPLICATION_MEASUREMENT}"
fi
