var searchIndex = JSON.parse('{\
"oak_abi":{"doc":"Type, constant and Wasm host function definitions for the â€¦","t":[6,17,6,6,17,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,5,5,5,5,0,4,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,3,3,3,3,3,3,3,3,3,3,3,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,4,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,3,3,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,4,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12],"n":["Handle","INVALID_HANDLE","NodeMain","NodeMainC","OAK_CHALLENGE","OAK_LABEL_GRPC_METADATA_KEY","OAK_LABEL_HTTP_JSON_KEY","OAK_LABEL_HTTP_PROTOBUF_KEY","OAK_SIGNED_CHALLENGE_GRPC_METADATA_KEY","OAK_SIGNED_CHALLENGE_HTTP_JSON_KEY","OAK_SIGNED_CHALLENGE_HTTP_PROTOBUF_KEY","SPACE_BYTES_PER_HANDLE","channel_close","channel_create","channel_create_with_downgrade","channel_label_read","channel_read","channel_read_with_downgrade","channel_write","channel_write_with_downgrade","handle_clone","label","node_create","node_create_with_downgrade","node_label_read","node_privilege_read","proto","random_get","wait_on_channels","wait_on_channels_with_downgrade","confidentiality_label","public_key_identity_tag","tls_endpoint_tag","top","web_assembly_module_signature_tag","web_assembly_module_tag","oak","ChannelReadStatus","ErrBadHandle","ErrBufferTooSmall","ErrChannelClosed","ErrChannelEmpty","ErrHandleSpaceTooSmall","ErrInternal","ErrInvalidArgs","ErrOutOfRange","ErrPermissionDenied","ErrTerminated","InvalidChannel","NotReady","OakStatus","Ok","Orphaned","PermissionDenied","ReadReady","Unspecified","application","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","eq","eq","fmt","fmt","fmt","from","from","from_i32","from_i32","hash","hash","identity","into","into","is_valid","is_valid","label","partial_cmp","partial_cmp","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","ApplicationConfiguration","ConfigMap","CryptoConfiguration","GrpcClientConfiguration","GrpcServerConfiguration","HttpClientConfiguration","HttpServerConfiguration","LogConfiguration","ModuleSignature","NodeConfiguration","RoughtimeClientConfiguration","RoughtimeServer","StorageProxyConfiguration","WebAssemblyConfiguration","address","address","address","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config_type","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","host","initial_node_configuration","into","into","into","into","into","into","into","into","into","into","into","into","into","into","items","max_radius_microseconds","min_overlapping_intervals","module_hash","module_signatures","name","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","node_configuration","port","public_key","public_key_base64","server_retries","servers","signed_hash","timeout_seconds","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uri","wasm_entrypoint_name","wasm_module_name","wasm_modules","ConfigType","CryptoConfig","GrpcClientConfig","GrpcServerConfig","HttpClientConfig","HttpServerConfig","LogConfig","RoughtimeClientConfig","StorageConfig","WasmConfig","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","0","0","0","0","0","0","0","SignedChallenge","borrow","borrow_mut","clear","clone","clone_into","default","deserialize","encoded_len","eq","fmt","from","into","ne","public_key","serialize","signed_hash","to_owned","try_from","try_into","type_id","Label","PublicKeyIdentityTag","Tag","TlsEndpointTag","Top","WebAssemblyModuleSignatureTag","WebAssemblyModuleTag","authority","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","confidentiality_tags","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","eq","flows_to","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","integrity_tags","into","into","into","into","into","into","into","ne","ne","ne","ne","ne","ne","public_key","public_key","public_untrusted","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","web_assembly_module_hash_sha_256","PublicKeyIdentityTag","Tag","TlsEndpointTag","TopTag","WebAssemblyModuleSignatureTag","WebAssemblyModuleTag","borrow","borrow_mut","clone","clone_into","deserialize","encode","encoded_len","eq","fmt","from","hash","into","merge","ne","serialize","to_owned","try_from","try_into","type_id","0","0","0","0","0"],"q":["oak_abi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::label","","","","","","oak_abi::proto","oak_abi::proto::oak","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::applicationoak_abi::proto::oak::application::node_configuration","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::application::node_configuration::ConfigType","","","","","","","","","oak_abi::proto::oak::identity","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::label","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::label::tag","","","","","","","","","","","","","","","","","","","","","","","","","oak_abi::proto::oak::label::tag::Tag","","","",""],"d":["Handle used to identify read or write channel halves.","Invalid handle value.","Expected Rust type for a Node entrypoint.","Expected type for a Node entrypoint that is exposed as a â€¦","","The key used for protobuf encoded Label in gRPC metadata.","The HTTP header key used for JSON encoded Label in HTTP â€¦","The HTTP header key used for protobuf encoded Label in â€¦","The key used for protobuf encoded signed authentication â€¦","The HTTP header key used for JSON encoded signed â€¦","The HTTP header key used for protobuf encoded signed â€¦","Number of bytes needed per-handle for channel readiness â€¦","Closes the channel identified by <code>handle</code>.","Create a new unidirectional Channel.","The same as <code>channel_create</code>, but also applies the current â€¦","Returns the label for the channel identified by <code>handle</code>.","Read a message from a channel.","The same as <code>channel_read</code>, but also applies the current Nodeâ€¦","Write a message to a channel.","The same as <code>channel_write</code>, but also applies the current â€¦","Create a new distinct handle to the same channel as <code>handle</code>.","Labels represent the kinds of information that is allowed â€¦","Creates a new Node instance running code identified by a â€¦","The same as <code>node_create</code>, but also applies the current Nodeâ€¦","Returns the label of the current calling Node.","Returns a label indicating the downgrade privilege of the â€¦","","Fill a buffer with random data.","Wait for channels to be ready for reading.","The same as <code>wait_on_channels</code>, but also applies the current â€¦","Convenience function for creating labels with a single â€¦","Creates a <code>Tag</code> having as principal the provided â€¦","Creates a <code>Tag</code> having as principal the provided TLS â€¦","Convenience function for creating the top tag.","Creates a <code>Tag</code> having as principal the provided WebAssembly â€¦","Creates a <code>Tag</code> having as principal the provided WebAssembly â€¦","","Single byte values used to indicate the read status of a â€¦","Invalid handle provided.","Provided buffer was too small for operation (an output â€¦","Channel has been closed.","Channel has no messages available to read.","Provided handle space was too small for operation (an â€¦","Internal error.","Arguments invalid.","Argument out of valid range.","The node does not have sufficient permissions to perform â€¦","Node terminated.","Channel handle does not identify the read half of a â€¦","No pending messages available on channel.","Status values exchanged as i32 values across the Node Wasm â€¦","Success.","Channel has no extant write halves (and is empty).","A node trying to access the channel does not have the â€¦","Pending message available on channel.","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OakStatus</code>, or <code>None</code> if <code>value</code> is not a â€¦","Converts an <code>i32</code> to a <code>ChannelReadStatus</code>, or <code>None</code> if <code>value</code> â€¦","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OakStatus</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>ChannelReadStatus</code>.","","","","","","","","","","","","","An ApplicationConfiguration represents a unit of â€¦","A serialized list of key-value pairs that are specified as â€¦","CryptoConfiguration describes the configuration of a â€¦","GrpcClientConfiguration describes the configuration of a â€¦","GrpcServerConfiguration describes the configuration of a â€¦","HttpClientConfiguration describes the configuration of an â€¦","HttpServerConfiguration describes the configuration of an â€¦","LogConfiguration describes the configuration of a logging â€¦","Bundled signature of the SHA-256 hash of a Wasm module. â€¦","NodeConfiguration indicates the configuration of a created â€¦","RoughtimeClientConfiguration describes the configuration â€¦","Information to identify a particular Roughtime server. â€¦","StorageProxyConfiguration describes the configuration of a â€¦","WebAssemblyConfiguration describes the configuration of a â€¦","The address of the external storage provider.","The endpoint address for the gRPC server to listen on. â€¦","The endpoint address for the HTTP server to listen on. â€¦","The authority supported by this client. The authority must â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Indication of what configuration the initial Node should â€¦","","","","","","","","","","","","","","","","","Connection parameters; default values will be used if any â€¦","","The bundled signatures for validating Wasm module hashes.","","","","","","","","","","","","","","Nested message and enum types in <code>NodeConfiguration</code>.","","","","","The collection of Roughtime servers to query. A default â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The URI component of a gRPC server endpoint. Must contain â€¦","The name of an exported WebAssembly function to invoke as â€¦","The name of one of the entries in the â€¦","Map from Wasm module names to their bytecode â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Response from the client to a signing challenge. The â€¦","","","","","","","","","","","","","","Public key as a binary DER-encoded <code>SubjectPublicKeyInfo</code> â€¦","","","","","","","Label represents information flowing through a Node or â€¦","Policies related to identities, specified using a â€¦","Tag represents a category of confidentiality or integrity â€¦","Policies related to HTTPS communication.","Message representing top element of the principal lattice. â€¦","Policies related to modules, referring to the signature of â€¦","Policies related to modules, referring to the native â€¦","The TLS authority (host:port) of the remote endpoint, â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the label from bytes.","","","","","","","","","","","","","","","","","","","","","","Compare two labels according to the lattice structure: L_0 â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Public key counterpart of the private key used to sign â€¦","Public key counterpart of the private key that is used to â€¦","Return the least privileged label.","Convert a label to bytes.","","","","","","","","Nested message and enum types in <code>Tag</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The attestation for a single WebAssembly module, a SHA256 â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,2,0,1,2,2,2,1,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,1,2,1,2,0,1,2,1,2,0,1,2,1,2,1,1,2,1,2,1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,4,5,6,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,9,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,15,7,7,8,9,10,11,3,4,12,13,5,6,14,15,16,16,13,13,8,7,15,7,8,9,10,3,4,12,13,5,6,15,16,0,15,8,15,13,13,8,13,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,7,8,9,10,11,3,4,12,13,5,6,14,15,16,12,10,10,7,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,18,19,20,21,22,23,24,25,26,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,0,0,0,0,0,0,28,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,29,30,31,32,28,33,34,29,30,31,32,28,33,32,33,29,29,29,30,31,32,28,33,34,0,30,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,29,30,31,32,28,33,34,31,35,0,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,36,37,38,39,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["tag",3]],["label",3]],[[],["tag",3]],[[["str",15]],["tag",3]],[[],["tag",3]],[[],["tag",3]],[[],["tag",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["oakstatus",4]],[[],["channelreadstatus",4]],[[]],[[]],[[["oakstatus",4]],["ordering",4]],[[["channelreadstatus",4]],["ordering",4]],[[],["oakstatus",4]],[[],["channelreadstatus",4]],[[["oakstatus",4]],["bool",15]],[[["channelreadstatus",4]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["oakstatus",4]]]],[[["i32",15]],["option",4,[["channelreadstatus",4]]]],[[]],[[]],null,[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,[[["oakstatus",4]],["option",4,[["ordering",4]]]],[[["channelreadstatus",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["applicationconfiguration",3]],[[],["modulesignature",3]],[[],["nodeconfiguration",3]],[[],["webassemblyconfiguration",3]],[[],["logconfiguration",3]],[[],["storageproxyconfiguration",3]],[[],["grpcserverconfiguration",3]],[[],["grpcclientconfiguration",3]],[[],["roughtimeclientconfiguration",3]],[[],["httpserverconfiguration",3]],[[],["httpclientconfiguration",3]],[[],["cryptoconfiguration",3]],[[],["roughtimeserver",3]],[[],["configmap",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["applicationconfiguration",3]],["bool",15]],[[["modulesignature",3]],["bool",15]],[[["nodeconfiguration",3]],["bool",15]],[[["webassemblyconfiguration",3]],["bool",15]],[[["logconfiguration",3]],["bool",15]],[[["storageproxyconfiguration",3]],["bool",15]],[[["grpcserverconfiguration",3]],["bool",15]],[[["grpcclientconfiguration",3]],["bool",15]],[[["roughtimeclientconfiguration",3]],["bool",15]],[[["httpserverconfiguration",3]],["bool",15]],[[["httpclientconfiguration",3]],["bool",15]],[[["cryptoconfiguration",3]],["bool",15]],[[["roughtimeserver",3]],["bool",15]],[[["configmap",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["applicationconfiguration",3]],["bool",15]],[[["modulesignature",3]],["bool",15]],[[["nodeconfiguration",3]],["bool",15]],[[["webassemblyconfiguration",3]],["bool",15]],[[["storageproxyconfiguration",3]],["bool",15]],[[["grpcserverconfiguration",3]],["bool",15]],[[["grpcclientconfiguration",3]],["bool",15]],[[["roughtimeclientconfiguration",3]],["bool",15]],[[["httpserverconfiguration",3]],["bool",15]],[[["httpclientconfiguration",3]],["bool",15]],[[["roughtimeserver",3]],["bool",15]],[[["configmap",3]],["bool",15]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["configtype",4]],[[]],[[]],[[],["usize",15]],[[["configtype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["configtype",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["signedchallenge",3]],[[]],[[]],[[],["result",4]],[[],["usize",15]],[[["signedchallenge",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[["signedchallenge",3]],["bool",15]],null,[[],["result",4]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["label",3]],[[],["tag",3]],[[],["webassemblymoduletag",3]],[[],["webassemblymodulesignaturetag",3]],[[],["tlsendpointtag",3]],[[],["publickeyidentitytag",3]],[[],["top",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["label",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["webassemblymoduletag",3]],["bool",15]],[[["webassemblymodulesignaturetag",3]],["bool",15]],[[["tlsendpointtag",3]],["bool",15]],[[["publickeyidentitytag",3]],["bool",15]],[[["top",3]],["bool",15]],[[],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["label",3]],["bool",15]],[[["tag",3]],["bool",15]],[[["webassemblymoduletag",3]],["bool",15]],[[["webassemblymodulesignaturetag",3]],["bool",15]],[[["tlsendpointtag",3]],["bool",15]],[[["publickeyidentitytag",3]],["bool",15]],null,null,[[]],[[],["vec",3,[["u8",15]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,[[]],[[]],[[],["tag",4]],[[]],[[],["result",4]],[[]],[[],["usize",15]],[[["tag",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["tag",4]],["bool",15]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null],"p":[[4,"OakStatus"],[4,"ChannelReadStatus"],[3,"StorageProxyConfiguration"],[3,"GrpcServerConfiguration"],[3,"HttpServerConfiguration"],[3,"HttpClientConfiguration"],[3,"ApplicationConfiguration"],[3,"ModuleSignature"],[3,"NodeConfiguration"],[3,"WebAssemblyConfiguration"],[3,"LogConfiguration"],[3,"GrpcClientConfiguration"],[3,"RoughtimeClientConfiguration"],[3,"CryptoConfiguration"],[3,"RoughtimeServer"],[3,"ConfigMap"],[4,"ConfigType"],[13,"WasmConfig"],[13,"LogConfig"],[13,"StorageConfig"],[13,"GrpcServerConfig"],[13,"GrpcClientConfig"],[13,"RoughtimeClientConfig"],[13,"HttpServerConfig"],[13,"HttpClientConfig"],[13,"CryptoConfig"],[3,"SignedChallenge"],[3,"TlsEndpointTag"],[3,"Label"],[3,"Tag"],[3,"WebAssemblyModuleTag"],[3,"WebAssemblyModuleSignatureTag"],[3,"PublicKeyIdentityTag"],[3,"Top"],[4,"Tag"],[13,"WebAssemblyModuleTag"],[13,"WebAssemblyModuleSignatureTag"],[13,"TlsEndpointTag"],[13,"PublicKeyIdentityTag"],[13,"TopTag"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};