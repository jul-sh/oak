initSidebarItems({"enum":[["Command",""],["Dependency","Partial representation of a dependency in a `Cargo.toml` file."],["FunctionsServerVariant",""],["Scope",""],["StatusResultValue","The outcome of an individual step of execution."],["Step","An execution step, which may be a single `Runnable`, or a collection of sub-steps."]],"fn":[["env_passthru","If environment variable `name` is set in the current environment, pass it through so the same value for `name` is visible when the command is executed."],["format_logs",""],["kill_process",""],["process_gone",""],["run_step","Run the provided step, printing out information about the execution, and returning a set of status results from the single or multiple steps that were executed."],["values_to_string",""]],"struct":[["BuildClient",""],["BuildFunctionsServer",""],["CargoBinary","Partial information about a Cargo binary, as included in a Cargo manifest."],["CargoManifest","Partial representation of Cargo manifest files."],["Cmd","A single command."],["Completion",""],["Context","Encapsulates all the local state relative to a step, and is propagated to child steps."],["DependencySpec","Partial representation of a Json specification of a dependency in a `Cargo.toml` file."],["FuzzConfig","Struct representing config files for fuzzing."],["FuzzableExample","Config for building an example for fuzzing."],["Opt",""],["RunCargoFuzz",""],["RunFunctionsExamples",""],["RunTestsOpt",""],["RunningCmd",""],["SingleStatusResult",""],["Status","A construct to keep track of the status of the execution. It only cares about the top-level steps."],["StepResult",""]],"trait":[["Runnable","A task that can be run asynchronously."],["Running","A task that is currently running asynchronously."]]});