initSidebarItems({"enum":[["FormatMode",""]],"fn":[["build_fuzz_dependencies",""],["check_format",""],["cleanup",""],["copy_wasm_file",""],["format",""],["main",""],["match_cmd",""],["run_bazel_build",""],["run_bazel_test",""],["run_bazel_tests",""],["run_buildifier",""],["run_cargo_clean",""],["run_cargo_clippy",""],["run_cargo_deny",""],["run_cargo_doc",""],["run_cargo_fmt",""],["run_cargo_fuzz",""],["run_cargo_test",""],["run_cargo_tests",""],["run_cargo_udeps",""],["run_check_build_licenses",""],["run_check_license",""],["run_check_todo",""],["run_ci",""],["run_clang_format",""],["run_clang_tidy",""],["run_completion",""],["run_embedmd",""],["run_fuzz_config",""],["run_fuzz_targets",""],["run_fuzz_targets_in_crate",""],["run_hadolint",""],["run_liche",""],["run_markdownlint",""],["run_prettier",""],["run_shellcheck",""],["run_tests",""]],"macro":[["spread","Similar to the `vec!` macro, but also allows a “spread” operator syntax (`...`) to inline and expand nested iterable values."]],"mod":[["check_build_licenses",""],["check_license",""],["check_todo",""],["diffs",""],["examples",""],["files",""],["internal",""]],"static":[["PROCESSES",""]]});