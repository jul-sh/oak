initSidebarItems({"fn":[["decrypt","Decrypts the provides `cyphertext` using the private key."],["deserialize_attestation_report","Deserialises the attestation report from a binary representation."],["deserialize_public_key","Deserialises the binary data into a keyset containing the public key and returns the associated handle."],["encrypt","Encrypts the clear text `data` using Tink hybrid encryption."],["generate_private_key","Generates a new private key suitable for hybrid encryption and returns a handle to the containing keyset."],["init","Initialize the `tink-hybrid` crate, registering its primitives so they are available via Tink."],["serialize_attestation_report","Serialises the attestation report to a binary representation."],["serialize_public_key","Serialises the handleâ€™s underlying keyset containing the public key to a binary representation."]],"struct":[["AttestationReport","Placeholder for an attestation report."],["EncryptedRequest","An encrypted request sent from the client to the server."],["EncryptedResponse","An encrypted response sent from the server to the client."],["Handle","`Handle` provides access to a [`Keyset`] protobuf, to limit the exposure of actual protocol buffers that hold sensitive key material."],["PublicKeyInfo","Information about the public key that should be used for encrypting requests."]]});