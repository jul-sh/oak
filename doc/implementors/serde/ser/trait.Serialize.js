(function() {var implementors = {};
implementors["oak_attestation_common"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_attestation_common/keying_material/struct.Assertion.html\" title=\"struct oak_attestation_common::keying_material::Assertion\">Assertion</a>","synthetic":false,"types":["oak_attestation_common::keying_material::Assertion"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_attestation_common/keying_material/struct.KeyingMaterial.html\" title=\"struct oak_attestation_common::keying_material::KeyingMaterial\">KeyingMaterial</a>","synthetic":false,"types":["oak_attestation_common::keying_material::KeyingMaterial"]}];
implementors["oak_functions_abi"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_abi/struct.ReportMetricRequest.html\" title=\"struct oak_functions_abi::ReportMetricRequest\">ReportMetricRequest</a>","synthetic":false,"types":["oak_functions_abi::ReportMetricRequest"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"oak_functions_abi/enum.ReportMetricError.html\" title=\"enum oak_functions_abi::ReportMetricError\">ReportMetricError</a>","synthetic":false,"types":["oak_functions_abi::ReportMetricError"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_abi/struct.ReportMetricResponse.html\" title=\"struct oak_functions_abi::ReportMetricResponse\">ReportMetricResponse</a>","synthetic":false,"types":["oak_functions_abi::ReportMetricResponse"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"oak_functions_abi/enum.TfModelInferError.html\" title=\"enum oak_functions_abi::TfModelInferError\">TfModelInferError</a>","synthetic":false,"types":["oak_functions_abi::TfModelInferError"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_abi/struct.TfModelInferResponse.html\" title=\"struct oak_functions_abi::TfModelInferResponse\">TfModelInferResponse</a>","synthetic":false,"types":["oak_functions_abi::TfModelInferResponse"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"oak_functions_abi/enum.TestingRequest.html\" title=\"enum oak_functions_abi::TestingRequest\">TestingRequest</a>","synthetic":false,"types":["oak_functions_abi::TestingRequest"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"oak_functions_abi/enum.TestingResponse.html\" title=\"enum oak_functions_abi::TestingResponse\">TestingResponse</a>","synthetic":false,"types":["oak_functions_abi::TestingResponse"]}];
implementors["oak_functions_client"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.LogEntry.html\" title=\"struct oak_functions_client::rekor::LogEntry\">LogEntry</a>","synthetic":false,"types":["oak_functions_client::rekor::LogEntry"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.Body.html\" title=\"struct oak_functions_client::rekor::Body\">Body</a>","synthetic":false,"types":["oak_functions_client::rekor::Body"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.Spec.html\" title=\"struct oak_functions_client::rekor::Spec\">Spec</a>","synthetic":false,"types":["oak_functions_client::rekor::Spec"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.Data.html\" title=\"struct oak_functions_client::rekor::Data\">Data</a>","synthetic":false,"types":["oak_functions_client::rekor::Data"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.Hash.html\" title=\"struct oak_functions_client::rekor::Hash\">Hash</a>","synthetic":false,"types":["oak_functions_client::rekor::Hash"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.GenericSignature.html\" title=\"struct oak_functions_client::rekor::GenericSignature\">GenericSignature</a>","synthetic":false,"types":["oak_functions_client::rekor::GenericSignature"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.PublicKey.html\" title=\"struct oak_functions_client::rekor::PublicKey\">PublicKey</a>","synthetic":false,"types":["oak_functions_client::rekor::PublicKey"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_functions_client/rekor/struct.LogEntryVerification.html\" title=\"struct oak_functions_client::rekor::LogEntryVerification\">LogEntryVerification</a>","synthetic":false,"types":["oak_functions_client::rekor::LogEntryVerification"]}];
implementors["oak_remote_attestation_amd"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"oak_remote_attestation_amd/struct.PlaceholderAmdReport.html\" title=\"struct oak_remote_attestation_amd::PlaceholderAmdReport\">PlaceholderAmdReport</a>","synthetic":false,"types":["oak_remote_attestation_amd::PlaceholderAmdReport"]}];
implementors["offline_attestation_shared"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"offline_attestation_shared/struct.EncryptedRequest.html\" title=\"struct offline_attestation_shared::EncryptedRequest\">EncryptedRequest</a>","synthetic":false,"types":["offline_attestation_shared::EncryptedRequest"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"offline_attestation_shared/struct.EncryptedResponse.html\" title=\"struct offline_attestation_shared::EncryptedResponse\">EncryptedResponse</a>","synthetic":false,"types":["offline_attestation_shared::EncryptedResponse"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.140/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"offline_attestation_shared/struct.PublicKeyInfo.html\" title=\"struct offline_attestation_shared::PublicKeyInfo\">PublicKeyInfo</a>","synthetic":false,"types":["offline_attestation_shared::PublicKeyInfo"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()