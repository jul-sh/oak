var searchIndex = JSON.parse('{\
"runner":{"doc":"A utility binary to run tests and orchestrate examples and …","t":[13,13,4,7,11,11,5,0,5,0,0,5,5,0,0,5,0,5,11,0,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,14,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,12,11,11,11,11,3,7,11,11,11,11,11,11,11,12,11,11,11,11,3,5,5,5,5,11,11,11,5,5,5,12,5,11,11,5,5,11,5,11,11,11,17,4,3,3,13,13,13,3,17,17,3,3,3,13,3,17,13,8,13,4,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,12,10,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,12,5,5,5,5,5,5,5,5,5,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,13,13,13,3,13,3,13,3,13,3,3,13,3,4,13,3,13,3,13,4,3,13,13,13,13,4,3,3,13,13,13,13,3,13,13,13,13,3,13,13,13,13,3,13,3,13,13,3,13,8,8,3,8,4,4,13,3,13,3,4,4,3,13,13,13,13,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,10,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,10,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,12,12,12,12,12,12,10,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,11,11,12,12,12,5,12,10,11,11,11,10,11,12,12,5,12,12,12,10,11,11,12,12,10,11,11,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["Check","Fix","FormatMode","PROCESSES","borrow","borrow_mut","build_fuzz_dependencies","check_build_licenses","check_format","check_license","check_todo","cleanup","copy_wasm_file","diffs","examples","features_excl_introspection_client","files","format","from","internal","into","main","match_cmd","run_bazel_build","run_bazel_test","run_bazel_tests","run_buildifier","run_cargo_clean","run_cargo_clippy","run_cargo_deny","run_cargo_doc","run_cargo_fmt","run_cargo_fuzz","run_cargo_test","run_cargo_test_tsan","run_cargo_tests","run_cargo_udeps","run_check_build_licenses","run_check_license","run_check_todo","run_ci","run_clang_format","run_clang_tidy","run_completion","run_embedmd","run_fuzz_config","run_fuzz_targets","run_fuzz_targets_in_crate","run_hadolint","run_liche","run_markdownlint","run_prettier","run_shellcheck","run_tests","run_tests_tsan","spread","try_from","try_into","type_id","CheckBuildLicenses","borrow","borrow_mut","description","from","into","new","path","run","try_from","try_into","type_id","CheckLicense","borrow","borrow_mut","description","from","into","new","path","run","try_from","try_into","type_id","CheckTodo","PATTERN","borrow","borrow_mut","description","from","into","is_invalid_todo","new","path","run","try_from","try_into","type_id","ModifiedContent","add_affected_crates","add_affected_protos","affected_protos","all_affected_crates","borrow","borrow_mut","contains","crates_affected_by_files","crates_affected_by_protos","directly_modified_crates","files","find_crate_toml_file","fmt","from","get_local_dependencies","imported_proto_files","into","modified_files","try_from","try_into","type_id","ALL_CLIENTS","Application","ApplicationClassic","ApplicationFunctions","Bazel","Cargo","Classic","ClassicExample","DEFAULT_EXAMPLE_BACKEND_RUST_TARGET","DEFAULT_SERVER_RUST_TARGET","Example","ExampleServer","Executable","Functions","FunctionsExample","NO_CLIENTS","Npm","OakExample","Shell","Target","additional_args","additional_args","applications","applications","applications","backends","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build_application","build_docker","build_functions_example","build_functions_server","build_rust_binary","build_server","build_wasm_module","clients","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_application_build_steps","construct_backend_build_steps","construct_backend_run_steps","construct_example_server_run_step","construct_example_server_run_step","construct_example_server_run_step","construct_example_server_run_step","construct_example_server_run_step","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","example","example","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_backends","get_backends","get_backends","get_build_client","get_build_client","get_build_client","has_classic_app","has_functions_app","into","into","into","into","into","into","into","into","into","manifest","modules","name","new","new","options","options","out","required_features","run","run_client","run_clients","run_example","run_example_server","run_examples","run_functions_example","run_functions_example_server","run_functions_examples","server","target","target","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","wasm_path","0","0","additional_build_args","bazel_target","cargo_manifest","config","package_directory","script","affected_example_toml_filles","crate_manifest_files","example_toml_files","file_contains","fuzz_config_toml_files","is_bazel_file","is_build_file","is_cargo_package_file","is_cargo_toml_file","is_cargo_workspace_file","is_clang_format_file","is_dockerfile","is_example_toml_file","is_fuzz_config_toml_file","is_fuzzing_toml_file","is_html_file","is_ignored_entry","is_ignored_path","is_javascript_file","is_markdown_file","is_shell_script","is_source_code_file","is_toml_file","is_typescript_file","is_yaml_file","read_file","source_files","to_string","workspace_manifest_files","All","Base","Base","BuildClient","BuildFunctionsExample","BuildFunctionsServer","BuildFunctionsServer","BuildServer","BuildServer","CargoBinary","CargoManifest","CheckFormat","Cmd","Command","Commits","Completion","Completion","Context","Coverage","Dependency","DependencySpec","DiffToMain","Error","Experimental","Format","FunctionsServerVariant","FuzzConfig","FuzzableExample","Json","Multiple","NoIntrospectionClient","Ok","Opt","RunBazelTests","RunCargoClean","RunCargoClippy","RunCargoDeny","RunCargoFuzz","RunCargoFuzz","RunCargoTests","RunCargoUdeps","RunCi","RunExamples","RunExamples","RunFunctionsExamples","RunFunctionsExamples","RunTests","RunTestsOpt","RunTestsTsan","Runnable","Running","RunningCmd","RustBinaryOptions","Scope","ServerVariant","Single","SingleStatusResult","Skipped","Status","StatusResultValue","Step","StepResult","Text","Unsafe","Unsafe","WithBackground","all_dependencies_with_toml_path","application_variant","application_variant","args","args","bin","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_client","build_client","build_dependencies","build_deps","build_docker","build_docker","build_release","build_release","build_release","build_server","build_server","child","child","clap","clap","clap","clap","clap","clap","clap","clap","clap","clap","cleanup","client_additional_args","client_additional_args","client_rust_target","client_rust_toolchain","client_variant","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmd","commands","crate_name","current_dir","dependencies","depth","description","description","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dev_dependencies","dry_run","env","env_passthru","eq","eq","eq","eq","eq","eq","equivalent","error","example_name","example_name","examples","executable","failed_steps_prefixes","features","features","features","file_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_logs","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_clap","from_str","from_str","from_str","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","keep_going","kill","kill","kill_process","len","logs","logs","manifest_path","name","name","ne","ne","ne","new","new","new","new_in_dir","new_with_env","ok","opt","out_dir","partial_cmp","partial_cmp","path","permissions_file","prefix","process_gone","remaining","result","result","result","root","run","run","run_server","run_server","run_step","scope","server_additional_args","server_additional_args","server_rust_target","server_rust_target","server_rust_target","server_rust_target","server_rust_target","server_rust_toolchain","server_rust_toolchain","server_rust_toolchain","server_rust_toolchain","server_rust_toolchain","server_variant","server_variant","stderr","stderr","stdout","stdout","target_name","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","value","values","values_to_string","0","0","0","0","0","0","0","0","0","0","0","background","command","foreground","name","name","name","steps"],"q":["runner","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runner::check_build_licenses","","","","","","","","","","","","runner::check_license","","","","","","","","","","","","runner::check_todo","","","","","","","","","","","","","","runner::diffs","","","","","","","","","","","","","","","","","","","","","","runner::examples","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runner::examples::Application","","runner::examples::Target","","","","","","runner::files","","","","","","","","","","","","","","","","","","","","","","","","","","","","","runner::internalrunner::internal::Command","","","","","","","","runner::internal::Dependency","","runner::internal::Scope","runner::internal::Step","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Similar to the <code>vec!</code> macro, but also allows a “spread” …","","","","A <code>Runnable</code> command that checks for the existence of BUILD …","","","","","","","","","","","","A <code>Runnable</code> command that checks for the existence of source …","","","","","","","","","","","","A <code>Runnable</code> command that checks for the existence of todos …","","","","","","","","","","","","","","","Checks if <code>crate_toml_path</code> has a direct or indirect …","Adds <code>proto_path</code> to the list of <code>affected_protos</code> if …","Returns the list of paths to all <code>.proto</code> files affected by …","Path to the <code>Cargo.toml</code> files for all crates that are …","","","","","Returns the paths to <code>Cargo.toml</code> files of crates affected …","Returns the list of paths to <code>Cargo.toml</code> files for all …","List of modified files.","","","","Returns paths to <code>Cargo.toml</code> files of local crates (crates …","Returns paths to all <code>.proto</code> files that <code>proto_file_path</code> …","","Get all the files that have been modified in the given …","","","","","A construct representing either an Oak Classic or an Oak …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Constructs application build steps.","","","","","Constructs build steps for the backends.","Recursively constructs run steps for the backends.","Constructs run step for the example server.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return an iterator of all known Cargo Manifest files that …","","","","Return whether the provided path refers to a Bazel file (…","","Return whether the provided path refers to a <code>Cargo.toml</code> …","Return whether the provided path refers to a <code>Cargo.toml</code> …","Return whether the provided path refers to a …","Return whether the provided path refers to a source file …","","","","Return whether the provided path refers to a <code>fuzz</code> crate …","","","Return whether to ignore the specified path. This is used …","","Return whether the provided path refers to a markdown file …","","Return whether the provided path refers to a source file …","","","","","Return an iterator of all the first-party and non-ignored …","","Return an iterator of all known Cargo Manifest files that …","","Production-like server variant, without any of the …","Production-like server variant, without logging or any of …","","","","","","","Partial information about a Cargo binary, as included in a …","Partial representation of Cargo manifest files.","","A single command.","","","","","Encapsulates all the local state relative to a step, and …","Similar to Unsafe, but with additional commands for …","Partial representation of a dependency in a <code>Cargo.toml</code> …","Partial representation of a Json specification of a …","","","Debug server, with logging, introspection client, and …","","","Struct representing config files for fuzzing.","Config for building an example for fuzzing.","Json specification of a dependency.","","Debug server with logging, but no introspection client","","","","","","","","","","","","","","","","","","","A task that can be run asynchronously.","A task that is currently running asynchronously.","","","","","","","","A construct to keep track of the status of the execution. …","The outcome of an individual step of execution.","An execution step, which may be a single <code>Runnable</code>, or a …","","Plaintext specification of a dependency with only the …","Debug server with logging and introspection client enabled","Debug server with logging and experimental features enabled","","","","","","Additional <code>libFuzzer</code> arguments passed through to the binary","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a description of the task, e.g. the command line …","","","","","","","","","","","If environment variable <code>name</code> is set in the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to kill the running task.","","Returns the number of top-level steps or commands. The …","","","Path to the Cargo.toml file for the example.","","Name of the example","","","","","","","","","","","Path to desired location of the .wasm file.","","","","","","","","Returns the final result of the task, upon spontaneous …","","","","Starts the task and returns a <code>Running</code> implementation.","Run the provided command, printing a status message with …","","","Run the provided step, printing out information about the …","","","","","","","","","","","","","","","","","Returns an <code>AsyncRead</code> object to stream stderr logs from the …","","Returns an <code>AsyncRead</code> object to stream stdout logs from the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Guarantees that the <code>error</code>, <code>ok</code>, and <code>remaining</code> counts are …","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,2,2,2,2,2,2,2,2,2,2,2,0,3,3,3,3,3,3,3,3,3,3,3,0,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,0,0,5,5,5,0,0,0,5,0,5,5,0,0,5,0,5,5,5,0,0,0,0,6,6,7,0,0,0,0,0,0,7,0,0,6,0,6,0,8,9,10,11,12,12,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,0,0,0,0,0,0,0,0,12,15,10,11,13,14,15,15,15,10,11,13,14,8,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,15,10,11,15,10,11,12,12,10,11,12,7,13,14,8,6,9,13,13,12,10,11,10,11,13,8,0,0,0,0,0,0,0,0,0,12,14,9,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,10,11,12,7,13,14,8,6,9,14,16,17,18,19,18,19,20,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,24,0,25,0,25,0,25,0,0,25,0,0,22,0,25,0,23,0,0,22,26,23,25,0,0,0,27,28,23,26,0,25,25,25,25,0,25,25,25,25,0,25,0,25,25,0,25,0,0,0,0,0,0,28,0,26,0,0,0,0,27,23,24,28,29,30,31,32,33,29,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,30,31,29,33,30,31,49,40,41,30,31,34,36,37,25,30,38,31,39,40,41,42,33,42,30,31,39,39,39,37,25,30,38,31,22,39,23,40,24,41,42,33,47,26,48,37,25,30,38,31,22,39,23,40,24,41,42,33,47,26,48,37,37,33,32,29,34,50,32,29,43,27,44,45,46,29,37,32,0,22,23,24,27,44,26,26,47,30,31,45,32,35,49,40,41,38,34,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,0,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,37,25,30,38,31,39,40,41,42,33,22,23,24,26,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,37,36,51,0,28,37,48,46,43,46,22,27,44,35,32,47,32,32,47,34,46,27,44,44,30,34,0,47,51,36,48,34,50,32,30,31,0,37,30,31,49,40,41,40,41,49,40,41,40,41,40,41,36,51,36,51,33,37,25,30,38,31,22,39,23,40,24,41,42,33,47,26,48,34,47,26,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,34,28,35,32,36,37,25,30,38,31,22,39,23,40,24,41,42,33,29,43,27,44,45,46,47,26,48,47,48,35,0,52,53,54,55,56,57,58,59,60,61,62,63,64,63,64,65,63,65],"f":[null,null,null,null,[[]],[[]],[[["runcargofuzz",3]],["step",4]],null,[[["scope",4]],["step",4]],null,null,[[]],[[["fuzzableexample",3]],["step",4]],null,null,[[["str",15]],["str",15]],null,[[["scope",4]],["step",4]],[[]],null,[[]],[[],["result",4,[["box",3,[["error",8]]]]]],[[["opt",3]],["step",4]],[[],["step",4]],[[],["step",4]],[[],["step",4]],[[["formatmode",4]],["step",4]],[[],["step",4]],[[["scope",4]],["step",4]],[[],["step",4]],[[["modifiedcontent",3]],["step",4]],[[["formatmode",4],["modifiedcontent",3]],["step",4]],[[["runcargofuzz",3]],["step",4]],[[["runtestsopt",3],["modifiedcontent",3]],["step",4]],[[["scope",4]],["step",4]],[[["runtestsopt",3],["scope",4]],["step",4]],[[["scope",4]],["step",4]],[[["modifiedcontent",3]],["step",4]],[[["modifiedcontent",3]],["step",4]],[[["modifiedcontent",3]],["step",4]],[[],["step",4]],[[["formatmode",4]],["step",4]],[[],["step",4]],[[["completion",3]],["step",4]],[[["formatmode",4]],["step",4]],[[["fuzzconfig",3]],["step",4]],[[["runcargofuzz",3]],["step",4]],[[["path",3],["runcargofuzz",3]],["step",4]],[[],["step",4]],[[],["step",4]],[[["formatmode",4]],["step",4]],[[["formatmode",4]],["step",4]],[[],["step",4]],[[],["step",4]],[[["scope",4]],["step",4]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["string",3]],[[]],[[]],[[["string",3]],["box",3]],null,[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],[[]],[[],["string",3]],[[]],[[]],[[["string",3]],["box",3]],null,[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,[[]],[[]],[[],["string",3]],[[]],[[]],[[["str",15]],["bool",15]],[[["string",3]],["box",3]],null,[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[["pathbuf",3],["hashmap",3]]],[[["string",3],["vec",3]]],[[["modifiedcontent",3]],["vec",3,[["string",3]]]],[[["scope",4]],["modifiedcontent",3]],[[]],[[]],[[["str",15]],["bool",15]],[[["modifiedcontent",3]],["modifiedcontent",3]],[[],["hashset",3,[["string",3]]]],[[["modifiedcontent",3]],["modifiedcontent",3]],null,[[["string",3]],["option",4,[["string",3]]]],[[["formatter",3]],["result",6]],[[]],[[["path",3]],["vec",3,[["string",3]]]],[[["string",3]],["vec",3,[["string",3]]]],[[]],[[["scope",4]],["modifiedcontent",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["target",4],["buildclient",3]],["box",3,[["runnable",8]]]],[[["applicationclassic",3]],["box",3,[["runnable",8]]]],[[["example",3]],["step",4]],[[["runfunctionsexamples",3]],["step",4]],[[["buildfunctionsserver",3],["vec",3,[["string",3]]]],["step",4]],[[["str",15],["vec",3,[["string",3]]],["hashmap",3]],["step",4]],[[["buildserver",3],["vec",3,[["string",3]]]],["step",4]],[[["str",15],["target",4],["str",15]],["step",4]],null,[[],["vec",3,[["step",4]]]],[[],["vec",3,[["step",4]]]],[[],["vec",3,[["step",4]]]],[[["str",15]],["vec",3,[["step",4]]]],[[["str",15]],["vec",3,[["step",4]]]],[[],["vec",3,[["step",4]]]],[[["step",4]],["step",4]],[[["step",4]],["step",4]],[[["step",4]],["step",4]],[[["step",4]],["step",4]],[[["classicexample",3],["step",4]],["step",4]],[[["functionsexample",3],["step",4]],["step",4]],[[],["exampleserver",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["hashmap",3]],[[],["hashmap",3]],[[],["hashmap",3]],[[],["buildclient",3]],[[],["buildclient",3]],[[],["buildclient",3]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[["example",3],["runexamples",3]]],[[["example",3],["runfunctionsexamples",3]]],null,null,null,null,[[["executable",3],["buildclient",3],["vec",3,[["string",3]]]],["box",3,[["runnable",8]]]],[[["str",15],["executable",3],["buildclient",3],["vec",3,[["string",3]]]],["step",4]],[[["example",3],["buildclient",3],["vec",3,[["string",3]]]],["step",4]],[[["classicexample",3]],["step",4]],[[["buildserver",3],["exampleserver",3],["vec",3,[["string",3]]],["str",15],["str",15]],["box",3,[["runnable",8]]]],[[["runexamples",3],["scope",4]],["step",4]],[[["functionsexample",3]],["step",4]],[[["exampleserver",3],["applicationfunctions",3]],["box",3,[["runnable",8]]]],[[["runfunctionsexamples",3],["scope",4]],["step",4]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,[[["vec",3,[["string",3]]]],["box",3,[["iterator",8]]]],[[]],[[["scope",4]],["box",3,[["iterator",8]]]],[[["path",3],["str",15]],["bool",15]],[[]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["direntry",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["bool",15]],[[["path",3]],["string",3]],[[]],[[["pathbuf",3]],["string",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["vec",3,[["string",3]]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,[[["str",15]]],null,[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],[[],["app",3]],null,null,null,null,null,null,[[],["opt",3]],[[],["command",4]],[[],["runexamples",3]],[[],["completion",3]],[[],["runfunctionsexamples",3]],[[],["scope",4]],[[],["buildclient",3]],[[],["servervariant",4]],[[],["buildserver",3]],[[],["functionsservervariant",4]],[[],["buildfunctionsserver",3]],[[],["runtestsopt",3]],[[],["runcargofuzz",3]],[[],["status",3]],[[],["statusresultvalue",4]],[[],["singlestatusresult",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[],["usize",15]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,null,[[["command",3],["str",15]]],[[["scope",4]],["bool",15]],[[["servervariant",4]],["bool",15]],[[["functionsservervariant",4]],["bool",15]],[[["dependency",4]],["bool",15]],[[["dependencyspec",3]],["bool",15]],[[["statusresultvalue",4]],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,[[],["vec",3,[["str",15]]]],[[],["vec",3,[["str",15]]]],[[],["vec",3,[["str",15]]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[],["string",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["argmatches",3]]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[["str",15]],["result",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[]],[[]],[[["i32",15]]],[[],["usize",15]],null,null,null,null,null,[[["scope",4]],["bool",15]],[[["dependency",4]],["bool",15]],[[["dependencyspec",3]],["bool",15]],[[]],[[["str",15]],["box",3]],[[["usize",15]]],[[["str",15],["path",3]],["box",3]],[[["str",15],["hashmap",3]],["box",3]],null,null,null,[[["dependency",4]],["option",4,[["ordering",4]]]],[[["dependencyspec",3]],["option",4,[["ordering",4]]]],null,null,null,[[["i32",15]],["bool",15]],null,[[["box",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["box",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["box",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["opt",3]]],[[["box",3],["opt",3]],["box",3,[["running",8]]]],[[["box",3],["opt",3]],["box",3,[["running",8]]]],null,null,[[["context",3],["step",4],["status",3]],["pin",3,[["box",3,[["future",8]]]]]],null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,[[],["box",3,[["asyncread",8]]]],[[],["box",3,[["asyncread",8]]]],[[],["box",3,[["asyncread",8]]]],[[],["box",3,[["asyncread",8]]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["context",3],["bool",15]]],null,null,[[],["string",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],"p":[[4,"FormatMode"],[3,"CheckBuildLicenses"],[3,"CheckLicense"],[3,"CheckTodo"],[3,"ModifiedContent"],[4,"Target"],[4,"Application"],[3,"ExampleServer"],[3,"Executable"],[3,"ClassicExample"],[3,"FunctionsExample"],[3,"Example"],[3,"ApplicationClassic"],[3,"ApplicationFunctions"],[8,"OakExample"],[13,"Classic"],[13,"Functions"],[13,"Cargo"],[13,"Bazel"],[13,"Npm"],[13,"Shell"],[4,"Scope"],[4,"ServerVariant"],[4,"FunctionsServerVariant"],[4,"Command"],[4,"StatusResultValue"],[4,"Dependency"],[4,"Step"],[3,"CargoManifest"],[3,"RunExamples"],[3,"RunFunctionsExamples"],[3,"Cmd"],[3,"RunCargoFuzz"],[3,"Context"],[3,"StepResult"],[3,"RunningCmd"],[3,"Opt"],[3,"Completion"],[3,"BuildClient"],[3,"BuildServer"],[3,"BuildFunctionsServer"],[3,"RunTestsOpt"],[3,"CargoBinary"],[3,"DependencySpec"],[3,"FuzzConfig"],[3,"FuzzableExample"],[3,"Status"],[3,"SingleStatusResult"],[8,"RustBinaryOptions"],[8,"Runnable"],[8,"Running"],[13,"RunExamples"],[13,"RunFunctionsExamples"],[13,"BuildFunctionsExample"],[13,"BuildServer"],[13,"BuildFunctionsServer"],[13,"RunCargoTests"],[13,"RunCargoFuzz"],[13,"Completion"],[13,"Text"],[13,"Json"],[13,"Commits"],[13,"WithBackground"],[13,"Single"],[13,"Multiple"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};