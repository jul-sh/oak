var searchIndex = JSON.parse('{\
"oak_services":{"doc":"Type, constant and Wasm host function definitions for the â€¦","t":[0,0,0,5,0,0,0,13,13,13,4,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,0,0,0,0,3,3,3,3,13,3,3,3,3,13,3,3,3,3,13,3,3,3,4,3,3,3,3,3,13,4,13,3,3,3,3,13,13,13,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,12,12,12,12,12,12,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,4,3,3,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11],"n":["grpc","http","proto","encap_request","google","oak","rpc","Aborted","AlreadyExists","Cancelled","Code","DataLoss","DeadlineExceeded","FailedPrecondition","Internal","InvalidArgument","NotFound","Ok","OutOfRange","PermissionDenied","ResourceExhausted","Status","Unauthenticated","Unavailable","Unimplemented","Unknown","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","code","default","default","details","encoded_len","eq","eq","fmt","fmt","from","from","from_i32","hash","into","into","is_valid","message","ne","partial_cmp","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","crypto","encap","log","roughtime","AeadDecryptRequest","AeadDecryptResponse","AeadEncryptRequest","AeadEncryptResponse","Binary","ComputeMacRequest","ComputeMacResponse","ComputePrfRequest","ComputePrfResponse","Crunchy","DeterministicAeadDecryptRequest","DeterministicAeadDecryptResponse","DeterministicAeadEncryptRequest","DeterministicAeadEncryptResponse","Json","KeyTemplate","KeysetBindRequest","KeysetBindResponse","KeysetFormat","KeysetGenerateRequest","KeysetPublicRequest","KeysetResponse","KeysetUnbindRequest","KmsProxyRequest","Legacy","OutputPrefixType","Raw","SignatureSignRequest","SignatureSignResponse","SignatureVerifyRequest","SignatureVerifyResponse","Tink","UnknownFormat","UnknownPrefix","VerifyMacRequest","VerifyMacResponse","associated_data","associated_data","associated_data","associated_data","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ciphertext","ciphertext","ciphertext","ciphertext","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","data","data","data","data","data","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","decode","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encrypted_keyset","encrypted_keyset","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","fold","format","format","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_i32","from_i32","hash","hash","inner_keyset_handle","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_valid","is_valid","keyset_generate_request","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","keyset_handle","kms_identifier","mac_value","mac_value","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","output_length","output_prefix_type","output_prefix_type","partial_cmp","partial_cmp","plaintext","plaintext","plaintext","plaintext","prf_value","private_keyset_handle","private_keyset_handle","public_keyset_handle","set_format","set_format","set_output_prefix_type","signature","signature","template_id","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_url","value","TemplateData","TemplateId","TemplateName","borrow","borrow_mut","clone","clone_into","encode","encoded_len","eq","fmt","fold","from","into","merge","ne","to_owned","try_from","try_into","type_id","0","0","GrpcRequest","GrpcResponse","HeaderMap","HeaderValue","HttpRequest","HttpResponse","body","body","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clear","clear","clear","clear","clear","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","decode","decode","decode","decode","default","default","default","default","default","default","encode","encode","encode","encode","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","encoded_len","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fold","fold","fold","fold","from","from","from","from","from","from","from","from","from","headers","headers","headers","into","into","into","into","into","into","into_iter","last","last","method","method_name","ne","ne","ne","ne","ne","ne","req_msg","rsp_msg","status","status","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","uri","values","Debugging","Error","Info","Level","LogInit","LogMessage","Trace","UnknownLevel","Warn","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clear","clear","clone","clone","clone","clone_into","clone_into","clone_into","cmp","decode","decode","default","default","default","encode","encode","encoded_len","encoded_len","eq","eq","eq","file","fmt","fmt","fmt","fold","fold","fold","from","from","from","from_i32","hash","into","into","into","is_valid","level","level","line","log_sender","message","ne","ne","partial_cmp","set_level","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","GetRoughtimeRequest","Roughtime","borrow","borrow","borrow_mut","borrow_mut","clear","clear","clone","clone","clone_into","clone_into","decode","decode","default","default","encode","encode","encoded_len","encoded_len","eq","eq","fmt","fmt","fold","fold","from","from","into","into","ne","roughtime_usec","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id"],"q":["oak_services","","","oak_services::grpc","oak_services::proto","","oak_services::proto::google","oak_services::proto::google::rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak","","","","oak_services::proto::oak::cryptooak_services::proto::oak::crypto::keyset_generate_request","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak::crypto::keyset_generate_request::TemplateId","","oak_services::proto::oak::encap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak::log","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_services::proto::oak::roughtime","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","Encapsulate a protocol buffer message in a GrpcRequest â€¦","","","","The operation was aborted, typically due to a concurrency â€¦","The entity that a client attempted to create (e.g., file â€¦","The operation was cancelled, typically by the caller.","The canonical error codes for Google APIs.","Unrecoverable data loss or corruption.","The deadline expired before the operation could complete. â€¦","The operation was rejected because the system is not in a â€¦","Internal errors.  This means that some invariants expected â€¦","The client specified an invalid argument.  Note that this â€¦","Some requested entity (e.g., file or directory) was not â€¦","Not an error; returned on success","The operation was attempted past the valid range.  E.g., â€¦","The caller does not have permission to execute the â€¦","Some resource has been exhausted, perhaps a per-user â€¦","The <code>Status</code> type defines a logical error model that is â€¦","The request does not have valid authentication credentials â€¦","The service is currently unavailable.  This is most likely â€¦","The operation is not implemented or is not â€¦","Unknown error.  For example, this error may be returned â€¦","","","","","","","","","","","The status code, which should be an enum value of [â€¦","","","A list of messages that carry the error details.  There is â€¦","","","","","","","","Converts an <code>i32</code> to a <code>Code</code>, or <code>None</code> if <code>value</code> is not a valid â€¦","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Code</code>.","A developer-facing error message, which should be in â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Local copy of Tink key template definition, to prevent â€¦","","","","","","Common response type for acquiring keyset handles","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>format</code>, or the default if the â€¦","Returns the enum value of <code>format</code>, or the default if the â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Converts an <code>i32</code> to a <code>OutputPrefixType</code>, or <code>None</code> if <code>value</code> is â€¦","Converts an <code>i32</code> to a <code>KeysetFormat</code>, or <code>None</code> if <code>value</code> is not â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>OutputPrefixType</code>.","Returns <code>true</code> if <code>value</code> is a variant of <code>KeysetFormat</code>.","Nested message and enum types in <code>KeysetGenerateRequest</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the enum value of <code>output_prefix_type</code>, or the â€¦","","","","","","","","","","","","Sets <code>format</code> to the provided enum value.","Sets <code>format</code> to the provided enum value.","Sets <code>output_prefix_type</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","in format type.googleapis.com/packagename.messagename","contains specific serialized *KeyFormat proto","serialized KeyTemplate","","","","","","","","","","","","","","","","","","","","","","","","Wrapper around a HashMap representing the headers in â€¦","Each header name in an HTTP request or HTTP response may â€¦","Protocol buffer encoding representing an HTTP request.","Protocol buffer encoding representing an HTTP response.","The body of the request.","The body of the response.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The HTTP request headers.","The HTTP response headers.","","","","","","","","Convert into an iterator over (http::header::HeaderName, â€¦","","The last field indicates that this is definitely the final â€¦","The HTTP request method used.","","","","","","","","The body of the request. Usually a serialized protobuf â€¦","The body of the response. Usually a serialized protobuf â€¦","","The HTTP status code.","","","","","","","","","","","","","","","","","","","","","","","","","The URI (including scheme and authority) to which the â€¦","","","","","Logging levels as defined in â€¦","A convenience message that may be used as init message by â€¦","This message defines the data that is passed as a log â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The source file containing the message.","","","","","","","","","","Converts an <code>i32</code> to a <code>Level</code>, or <code>None</code> if <code>value</code> is not a â€¦","","","","","Returns <code>true</code> if <code>value</code> is a variant of <code>Level</code>.","Returns the enum value of <code>level</code>, or the default if the â€¦","The verbosity level of the message.","The line containing the message.","","The message body.","","","","Sets <code>level</code> to the provided enum value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Time is UTC and is given as microseconds since the UNIX â€¦","","","","","","","",""],"i":[0,0,0,0,0,0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,2,1,2,1,2,2,1,2,1,1,2,2,1,2,2,2,1,2,1,2,1,1,1,2,1,1,2,2,1,2,1,2,1,2,1,2,1,0,0,0,0,0,0,0,0,3,0,0,0,0,4,0,0,0,0,3,0,0,0,0,0,0,0,0,0,4,0,4,0,0,0,0,4,3,4,0,0,5,6,7,8,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,17,6,19,8,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,4,3,21,23,25,27,29,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,13,15,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,13,14,13,14,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,4,3,4,3,14,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,4,3,0,11,13,14,5,6,7,8,21,23,25,16,21,24,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,23,24,25,26,27,28,29,25,9,9,4,3,5,18,7,20,26,12,27,29,13,14,9,28,29,10,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,10,11,12,13,14,15,16,5,17,6,18,7,19,8,20,21,22,23,24,25,26,27,28,29,30,4,3,9,9,31,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,33,0,0,0,0,0,0,34,35,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,36,37,34,35,38,39,36,37,34,35,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,36,37,34,34,35,35,38,38,39,34,35,38,36,37,34,35,38,39,38,36,37,34,36,36,37,34,35,38,39,36,37,37,35,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,36,37,34,35,38,39,34,39,40,40,40,0,0,0,40,40,40,41,42,40,41,42,40,41,42,41,42,40,41,42,40,40,41,42,41,42,40,41,42,41,42,41,42,40,41,41,42,40,41,42,40,41,42,40,40,40,41,42,40,40,41,41,41,42,41,41,42,40,41,41,42,40,41,42,40,41,42,40,41,42,40,0,0,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,43,44,44,44,43,44,43,44,43,44,43,44],"f":[null,null,null,[[["str",15]],["option",4,[["grpcrequest",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[],["status",3]],[[],["code",4]],[[]],[[]],[[["code",4]],["ordering",4]],null,[[]],[[],["code",4]],null,[[],["usize",15]],[[["status",3]],["bool",15]],[[["code",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["i32",15]],["option",4,[["code",4]]]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],null,[[["status",3]],["bool",15]],[[["code",4]],["option",4,[["ordering",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keytemplate",3]],[[],["keysetgeneraterequest",3]],[[],["keysetresponse",3]],[[],["keysetpublicrequest",3]],[[],["keysetunbindrequest",3]],[[],["keysetbindrequest",3]],[[],["keysetbindresponse",3]],[[],["kmsproxyrequest",3]],[[],["aeadencryptrequest",3]],[[],["aeadencryptresponse",3]],[[],["aeaddecryptrequest",3]],[[],["aeaddecryptresponse",3]],[[],["deterministicaeadencryptrequest",3]],[[],["deterministicaeadencryptresponse",3]],[[],["deterministicaeaddecryptrequest",3]],[[],["deterministicaeaddecryptresponse",3]],[[],["verifymacrequest",3]],[[],["verifymacresponse",3]],[[],["computemacrequest",3]],[[],["computemacresponse",3]],[[],["computeprfrequest",3]],[[],["computeprfresponse",3]],[[],["signaturesignrequest",3]],[[],["signaturesignresponse",3]],[[],["signatureverifyrequest",3]],[[],["signatureverifyresponse",3]],[[],["outputprefixtype",4]],[[],["keysetformat",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["outputprefixtype",4]],["ordering",4]],[[["keysetformat",4]],["ordering",4]],null,null,null,null,null,[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["outputprefixtype",4]],[[],["keysetformat",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,[[["keytemplate",3]],["bool",15]],[[["keysetgeneraterequest",3]],["bool",15]],[[["keysetresponse",3]],["bool",15]],[[["keysetpublicrequest",3]],["bool",15]],[[["keysetunbindrequest",3]],["bool",15]],[[["keysetbindrequest",3]],["bool",15]],[[["keysetbindresponse",3]],["bool",15]],[[["kmsproxyrequest",3]],["bool",15]],[[["aeadencryptrequest",3]],["bool",15]],[[["aeadencryptresponse",3]],["bool",15]],[[["aeaddecryptrequest",3]],["bool",15]],[[["aeaddecryptresponse",3]],["bool",15]],[[["deterministicaeadencryptrequest",3]],["bool",15]],[[["deterministicaeadencryptresponse",3]],["bool",15]],[[["deterministicaeaddecryptrequest",3]],["bool",15]],[[["deterministicaeaddecryptresponse",3]],["bool",15]],[[["verifymacrequest",3]],["bool",15]],[[["verifymacresponse",3]],["bool",15]],[[["computemacrequest",3]],["bool",15]],[[["computemacresponse",3]],["bool",15]],[[["computeprfrequest",3]],["bool",15]],[[["computeprfresponse",3]],["bool",15]],[[["signaturesignrequest",3]],["bool",15]],[[["signaturesignresponse",3]],["bool",15]],[[["signatureverifyrequest",3]],["bool",15]],[[["signatureverifyresponse",3]],["bool",15]],[[["outputprefixtype",4]],["bool",15]],[[["keysetformat",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["keysetformat",4]],[[],["keysetformat",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["outputprefixtype",4]]]],[[["i32",15]],["option",4,[["keysetformat",4]]]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["i32",15]],["bool",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["keytemplate",3]],["bool",15]],[[["keysetgeneraterequest",3]],["bool",15]],[[["keysetresponse",3]],["bool",15]],[[["keysetpublicrequest",3]],["bool",15]],[[["keysetunbindrequest",3]],["bool",15]],[[["keysetbindrequest",3]],["bool",15]],[[["keysetbindresponse",3]],["bool",15]],[[["kmsproxyrequest",3]],["bool",15]],[[["aeadencryptrequest",3]],["bool",15]],[[["aeadencryptresponse",3]],["bool",15]],[[["aeaddecryptrequest",3]],["bool",15]],[[["aeaddecryptresponse",3]],["bool",15]],[[["deterministicaeadencryptrequest",3]],["bool",15]],[[["deterministicaeadencryptresponse",3]],["bool",15]],[[["deterministicaeaddecryptrequest",3]],["bool",15]],[[["deterministicaeaddecryptresponse",3]],["bool",15]],[[["verifymacrequest",3]],["bool",15]],[[["computemacrequest",3]],["bool",15]],[[["computemacresponse",3]],["bool",15]],[[["computeprfrequest",3]],["bool",15]],[[["computeprfresponse",3]],["bool",15]],[[["signaturesignrequest",3]],["bool",15]],[[["signaturesignresponse",3]],["bool",15]],[[["signatureverifyrequest",3]],["bool",15]],null,[[],["outputprefixtype",4]],null,[[["outputprefixtype",4]],["option",4,[["ordering",4]]]],[[["keysetformat",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,[[["keysetformat",4]]],[[["keysetformat",4]]],[[["outputprefixtype",4]]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[],["templateid",4]],[[]],[[]],[[],["usize",15]],[[["templateid",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["option",4],["u32",15],["wiretype",4],["decodecontext",3]],["result",4,[["decodeerror",3]]]],[[["templateid",4]],["bool",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["grpcrequest",3]],[[],["grpcresponse",3]],[[],["httprequest",3]],[[],["httpresponse",3]],[[],["headermap",3]],[[],["headervalue",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["httprequest",3]],["bool",15]],[[["httpresponse",3]],["bool",15]],[[["headermap",3]],["bool",15]],[[["headervalue",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["request",3,[["vec",3,[["u8",15]]]]]],["httprequest",3]],[[]],[[["response",3]]],[[]],[[]],[[["headermap",3,[["headervalue",3]]]]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[["grpcrequest",3]],["bool",15]],[[["grpcresponse",3]],["bool",15]],[[["httprequest",3]],["bool",15]],[[["httpresponse",3]],["bool",15]],[[["headermap",3]],["bool",15]],[[["headervalue",3]],["bool",15]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["logmessage",3]],[[],["loginit",3]],[[],["level",4]],[[]],[[]],[[]],[[["level",4]],["ordering",4]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["level",4]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["bool",15]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["option",4,[["level",4]]]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[],["level",4]],null,null,null,null,[[["logmessage",3]],["bool",15]],[[["loginit",3]],["bool",15]],[[["level",4]],["option",4,[["ordering",4]]]],[[["level",4]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["getroughtimerequest",3]],[[],["roughtime",3]],[[]],[[]],[[["message",3]],["result",4,[["oakerror",4]]]],[[["message",3]],["result",4,[["oakerror",4]]]],[[]],[[]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["result",4,[["message",3],["oakerror",4]]]],[[],["usize",15]],[[],["usize",15]],[[["getroughtimerequest",3]],["bool",15]],[[["roughtime",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["roughtime",3]],["bool",15]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[4,"Code"],[3,"Status"],[4,"KeysetFormat"],[4,"OutputPrefixType"],[3,"AeadEncryptRequest"],[3,"AeadDecryptRequest"],[3,"DeterministicAeadEncryptRequest"],[3,"DeterministicAeadDecryptRequest"],[3,"KeyTemplate"],[3,"KeysetGenerateRequest"],[3,"KeysetResponse"],[3,"KeysetPublicRequest"],[3,"KeysetUnbindRequest"],[3,"KeysetBindRequest"],[3,"KeysetBindResponse"],[3,"KmsProxyRequest"],[3,"AeadEncryptResponse"],[3,"AeadDecryptResponse"],[3,"DeterministicAeadEncryptResponse"],[3,"DeterministicAeadDecryptResponse"],[3,"VerifyMacRequest"],[3,"VerifyMacResponse"],[3,"ComputeMacRequest"],[3,"ComputeMacResponse"],[3,"ComputePrfRequest"],[3,"ComputePrfResponse"],[3,"SignatureSignRequest"],[3,"SignatureSignResponse"],[3,"SignatureVerifyRequest"],[3,"SignatureVerifyResponse"],[4,"TemplateId"],[13,"TemplateData"],[13,"TemplateName"],[3,"HttpRequest"],[3,"HttpResponse"],[3,"GrpcRequest"],[3,"GrpcResponse"],[3,"HeaderMap"],[3,"HeaderValue"],[4,"Level"],[3,"LogMessage"],[3,"LogInit"],[3,"GetRoughtimeRequest"],[3,"Roughtime"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};