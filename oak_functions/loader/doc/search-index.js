var searchIndex = JSON.parse('{\
"oak_functions_loader":{"doc":"","t":[0,0,0,0,0,5,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,13,13,13,3,4,4,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,17,6,6,6,6,4,6,8,13,8,3,13,8,3,3,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,10,11,11,11,5,11,11,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["grpc","logger","lookup","lookup_data","server","create_and_start_grpc_server","create_wasm_handler","Logger","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","for_test","from","into","into_any","into_any_arc","into_any_rc","into_request","log_public","log_sensitive","new","to_owned","try_from","try_into","type_id","vzip","LookupExtension","LookupFactory","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","create","from","from","get_metadata","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_request","into_request","invoke","new_boxed_extension_factory","storage_get_item","terminate","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","File","GcpMetadataToken","Http","LookupData","LookupDataAuth","LookupDataSource","None","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deserialize","fmt","fmt","for_test","from","from","from","get","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","is_empty","len","new_empty","parse_lookup_entries","refresh","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","auth","url","ABI_USIZE","AbiChannelHandle","AbiMessage","AbiPointer","AbiPointerOffset","BoxedExtension","BoxedExtensionFactory","ExtensionFactory","Native","OakApiNativeExtension","Policy","Uwabi","UwabiExtension","WasmHandler","WasmState","alloc","alloc_and_write_buffer_to_wasm_memory","apply_policy","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_read","channel_write","clone","clone","clone_into","clone_into","constant_processing_time","constant_response_size_bytes","create","create","deserialize","fmt","format_bytes","from","from","from","from","get_channel_handle","get_memory","get_metadata","handle_invoke","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_request","into_request","into_request","into_request","invoke","invoke_index","read_buffer_from_wasm_memory","read_request","resolve_func","terminate","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validate","vzip","vzip","vzip","vzip","write_buffer_to_wasm_memory","write_log_message","write_response","write_u32_to_wasm_memory","0","0"],"q":["oak_functions_loader","","","","","oak_functions_loader::grpc","","oak_functions_loader::logger","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup_data","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::lookup_data::LookupDataSource","","","oak_functions_loader::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oak_functions_loader::server::BoxedExtension",""],"d":["gRPC server for Oak Functions.","","","","","Starts a gRPC server on the given address, serving the <code>main</code>…","Creates a <code>WasmHandler</code> with the given Wasm module, lookup …","A simple logger that splits logging between writing logs …","","","","","","","","Creates a new logger for testing using the debug …","","","","","","","Logs a message that contains only public, non-sensitive …","Logs the message at the specified <code>Level</code>, but only if the …","Creates a new logger with the specified maximum <code>LevelFilter</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Corresponds to the host ABI function <code>storage_get_item</code>.","","","","","","","","","","","","","An in-memory lookup store instance that can refresh its …","","","","","","","","","","","","","","","","","","","","","","","","Creates an instance of LookupData populated with the given …","","","","Convenience getter for an individual entry that reduces …","","","","","","","","","","","","","","","","","","Creates a new empty <code>LookupData</code> instance that can refresh …","","Refreshes the internal entries of this struct from the …","","","","","","","","","","","","","","","","","","Wasm type identifier for position/offset values in linear …","","","","","A BoxedExtension can either be a …","","","","Trait for implementing extensions, to implement new native …","Similar to <code>ServerPolicy</code>, but it is used for reading the …","","Trait for implementing an extension which relies on UWABI.","","<code>WasmState</code> holds runtime values for a particular execution …","","Writes the given <code>buffer</code> by allocating <code>buffer.len()</code> Wasm …","Runs the given function and applies the given security …","","","","","","","","","","","","","","","","","","","","","","","A fixed response time. See …","See <code>Policy::constant_response_size_bytes</code>","","","","","Converts a binary sequence to a string if it is a valid …","","","","","Get the channel handle to address this extension.","Helper function to get memory.","Metadata about this Extension, including the exported host …","","","","","","","","","","","","","","","","","","","","","Similar to <code>invoke_index</code> in <code>wasmi::Externals</code>, but may …","Invocation of a host function specified by its registered …","Reads the buffer starting at address <code>buf_ptr</code> with length …","Corresponds to the host ABI function <code>read_request</code>.","","Performs any cleanup or terminating behavior necessary …","","","","","","","","","","","","","","","","","","","","Writes the buffer <code>source</code> at the address <code>dest</code> of the Wasm …","Corresponds to the host ABI function <code>write_log_message</code>.","Corresponds to the host ABI function <code>write_response</code>.","Writes the u32 <code>value</code> at the <code>address</code> of the Wasm memory.","",""],"i":[0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,3,2,3,2,3,2,3,3,2,3,2,2,3,2,3,2,3,2,3,2,3,2,3,0,2,2,3,2,3,2,3,2,3,4,5,4,0,0,0,5,6,5,4,6,5,4,6,5,4,6,5,4,5,4,5,4,5,5,5,4,6,6,5,4,6,6,5,4,6,5,4,6,5,4,6,5,4,6,5,4,6,6,6,0,6,5,4,6,5,4,6,5,4,6,5,4,6,5,4,7,8,8,0,0,0,0,0,0,0,0,9,0,0,9,0,0,0,10,10,0,9,10,11,12,9,10,11,12,9,10,11,12,9,10,11,12,10,10,11,12,11,12,11,11,13,12,11,11,0,9,10,11,12,14,10,15,12,9,10,11,12,9,10,11,12,9,11,12,9,10,11,12,9,10,11,12,15,10,10,10,10,15,11,12,9,10,11,12,9,10,11,12,9,10,11,12,11,9,10,11,12,10,10,10,10,16,17],"f":[null,null,null,null,null,[[["socketaddr",4],["wasmhandler",3],["vec",3,[["u8",15]]],["serverpolicy",3],["configurationinfo",3],["future",8],["logger",3]]],[[["vec",3,[["boxedextensionfactory",6]]],["logger",3]],["result",6,[["wasmhandler",3]]]],null,[[],["any",8]],[[],["any",8]],[[]],[[]],[[],["logger",3]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[["level",4],["str",15]]],[[["level",4],["str",15]]],[[["levelfilter",4]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[],["result",6,[["boxedextension",4]]]],[[]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[["wasmstate",3],["runtimeargs",3]],["result",4,[["result",4,[["oakstatus",4]]],["trap",3]]]],[[["arc",3,[["lookupdata",3]]],["logger",3]],["result",6,[["boxedextensionfactory",6]]]],[[["wasmstate",3],["lookupextension",3],["abipointer",6],["abipointeroffset",6],["abipointer",6],["abipointer",6]],["result",4,[["oakstatus",4]]]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["lookupdataauth",4]],[[],["lookupdatasource",4]],[[]],[[]],[[]],[[],["result",4]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["hashmap",3,[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]]]],[[]],[[]],[[]],[[],["option",4,[["vec",3,[["u8",15]]]]]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["bool",15]],[[],["usize",15]],[[["option",4,[["lookupdatasource",4]]],["logger",3]],["lookupdata",3]],[[["buf",8]],["result",6,[["hashmap",3,[["vec",3,[["u8",15]]],["vec",3,[["u8",15]]]]]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["u32",15]],["abipointer",6]],[[["vec",3,[["u8",15]]],["abipointer",6],["abipointer",6]],["result",4,[["oakstatus",4]]]],[[["serverpolicy",3]]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[],["any",8]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["abichannelhandle",6],["abipointer",6],["abipointer",6]],["result",4,[["channelstatus",4]]]],[[["abichannelhandle",6],["abipointer",6],["abipointeroffset",6]],["result",4,[["channelstatus",4]]]],[[],["policy",3]],[[],["wasmhandler",3]],[[]],[[]],null,null,[[],["result",6,[["boxedextension",4]]]],[[["vec",3,[["boxedextensionfactory",6]]],["logger",3]],["result",6]],[[],["result",4]],[[["formatter",3]],["result",6]],[[],["string",3]],[[]],[[]],[[]],[[]],[[],["channelhandle",4]],[[],["memoryref",3]],[[]],[[["request",3]]],[[]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[],["request",3]],[[["wasmstate",3],["runtimeargs",3]],["result",4,[["result",4,[["oakstatus",4]]],["trap",3]]]],[[["usize",15],["runtimeargs",3]],["result",4,[["option",4,[["runtimevalue",4]]],["trap",3]]]],[[["abipointer",6],["abipointeroffset",6]],["result",4,[["vec",3,[["u8",15]]],["oakstatus",4]]]],[[["abipointer",6],["abipointer",6]],["result",4,[["oakstatus",4]]]],[[["str",15],["signature",3]],["result",4,[["funcref",3],["error",4]]]],[[],["result",6]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["result",6,[["serverpolicy",3]]]],[[]],[[]],[[]],[[]],[[["abipointer",6]],["result",4,[["oakstatus",4]]]],[[["abipointer",6],["abipointeroffset",6]],["result",4,[["oakstatus",4]]]],[[["abipointer",6],["abipointeroffset",6]],["result",4,[["oakstatus",4]]]],[[["u32",15],["abipointer",6]],["result",4,[["oakstatus",4]]]],null,null],"p":[[3,"Logger"],[3,"LookupExtension"],[3,"LookupFactory"],[4,"LookupDataSource"],[4,"LookupDataAuth"],[3,"LookupData"],[13,"File"],[13,"Http"],[4,"BoxedExtension"],[3,"WasmState"],[3,"Policy"],[3,"WasmHandler"],[8,"ExtensionFactory"],[8,"UwabiExtension"],[8,"OakApiNativeExtension"],[13,"Native"],[13,"Uwabi"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};