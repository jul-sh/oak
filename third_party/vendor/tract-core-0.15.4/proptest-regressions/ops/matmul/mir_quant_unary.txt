# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc f698af38627efa679dc4b609b4145d4bc583d85c34b9b61eb89505cc76d0355e # shrinks to pb = QMatMulUnaryProblem { a: [[0],  [0]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, a0: 0, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0 }
cc cf8c53d50bad58faea144ee37c5a2a89a52fb683119597c0343c18d1003b3d67 # shrinks to pb = QMatMulUnaryProblemU8I8I8 { a: [[0],  [62]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[1]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 60, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: true, dyn_qp: false }
cc 49c9b3483a4264995853f1439b65f308e63ef6af6af9832a1b36aba8a1310331 # shrinks to pb = QMatMulUnaryProblemI8I8U8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 2, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc 2b588d259442ab5594c7295f0be0c4d81c9d810f232d3ab2c0ccd77c1ce4baf5 # shrinks to pb = QMatMulUnaryProblemI8I8I8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc 1c5183828094e57a2c72a76d921441f7f52d369ec93c9f75faa1baf01fca40b9 # shrinks to pb = QMatMulUnaryProblemI8U8I8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc cd594edffc94fcca71e794f46db071ad843a76fb2045256bde54a87aac8298b0 # shrinks to pb = QMatMulUnaryProblemU8U8U8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc 841e7bd826bcc60289cc8efbf48f0025bb53e1ee9d14bbad764df3f797ce1c05 # shrinks to pb = QMatMulUnaryProblemU8U8I8 { a: [[56]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc 341dfe19f4cd1598b0738c137f5417f20c9d640514dab52889fb73a9e2a01a57 # shrinks to pb = QMatMulUnaryProblemU8I8U8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 2, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc c996d6dadcc830e027304b9b5333884335ff50132f7e7853b7cc1876403a8a9b # shrinks to pb = QMatMulUnaryProblemU8I8I8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 0, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc 7e63cf0e57b01d8e8d6c166ed3260f67fd0cb2c87547ecf563ce05efec5e8a37 # shrinks to pb = QMatMulUnaryProblemI8U8U8 { a: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 2, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: false, dyn_qp: false }
cc b9474748cfd736dae642b4ef7bdb5253de16eb06f6fdb2aa03f1defb8eb20ee7 # shrinks to pb = QMatMulUnaryProblemI8I8I8 { a: [[0],  [0]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[0]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 2, a_scale: 1.0, b_scale: 1.0, c_scale: 1.0, opt: true, dyn_qp: false }
cc 090ebb5d5f8d8fb475a0376178ed44266fe6c17ac49cb910c7cb4ffc4707fc10 # shrinks to pb = QMatMulUnaryProblemI8I8U8 { a: [[0],  [-44]], shape=[2, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, b: [[7]], shape=[1, 1], strides=[1, 1], layout=CFcf (0xf), const ndim=2, bias: ,I32 0, a0: 0, b0: 0, c0: 125, a_scale: 1.0, b_scale: 0.05, c_scale: 1.0, opt: true, dyn_qp: false }
